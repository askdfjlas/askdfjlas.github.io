{"version":3,"sources":["Utils.js","Header/HeaderUtils.js","Api/UserAuthApi.js","Header/HeaderState.js","Header/RegisterForm.js","Header/LoginForm.js","Header/UserMenu.js","Header/HeaderAuth.js","Header/Header.js","TextEditor/Caret.js","TextEditor/ContentType.js","TextEditor/Toolbar.js","TextEditor/MaskManager.js","TextEditor/VirtualTextEditor.js","TextEditor/Block/MathBlock.js","TextEditor/Block/Block.js","TextEditor/TextEditorContent.js","TextEditor/registerEventHandlers.js","TextEditor/TextEditor.js","Home/CpNotes.js","Home/Home.js","UserProfile/UserInfo.js","SearchSelect/SearchSelect.js","Api/ApiConstants.js","Api/Api.js","Enum/SolvedState.js","Api/ProblemsApi.js","UserProfile/AddProblemForm.js","Api/NotesApi.js","UserProfile/UserNoteInfo.js","UserProfile/UserContestInfo.js","UserProfile/UserNotesTitleDropdown.js","Paginator/VirtualPaginator.js","Paginator/Paginator.js","UserProfile/UserNotesList.js","UserProfile/UserNotes.js","Api/UserApi.js","Enum/LoadState.js","UserProfile/UserProfile.js","EditNote/DeleteMenu.js","EditNote/EditNoteForm.js","EditNote/ProblemInfo.js","EditNote/EditNote.js","Api/LikesApi.js","Misc/LikeDislike.js","PublicNote/PublicNoteInfo.js","PublicNote/PublicNote.js","App.js","serviceWorker.js","index.js"],"names":["Utils","component","stateObject","Promise","resolve","reject","mounted","setState","object","property","hasOwnProperty","message","setError","setStatePromise","error","setSuccess","success","selectors","window","MathJax","typeset","HeaderUtils","password","confirmPassword","componentSetError","length","UserAuthApi","Auth","currentAuthenticatedUser","username","email","signUp","attributes","info","codeDeliveryDetails","Destination","code","confirmSignUp","resendSignUp","CodeDeliveryDetails","forgotPassword","forgotPasswordSubmit","signIn","signOut","getProfile","profile","currentSession","getSignInUserSession","accessToken","getAccessToken","getJwtToken","HeaderState","Object","freeze","LOGIN","RECOVERY_USERNAME","RECOVERY_PASSWORD","RECOVERY_SUCCESS","REGISTER","REGISTER_VERIFY","REGISTER_SUCCESS","ERROR_TRIGGER_PREFIX","RegisterForm","props","screen","unverifiedAccountUsername","state","destination","unverifiedAccountDestination","close","bind","register","verifyEmail","resendVerificationEmail","this","exitCallback","startsWith","substring","event","preventDefault","form","target","value","checkPasswords","componentSetSuccess","currentForm","createAccountForm","className","onSubmit","htmlFor","autoComplete","type","name","id","verifyEmailForm","key","onClick","emailVerifiedBox","Component","LoginForm","login","enablePasswordRecovery","resetPassword","emailVerificationCallback","componentsSetError","loginForm","recoveryUsernameForm","recoveryPasswordForm","recoveryPasswordSuccess","UserMenu","logout","logoutCallback","closeCallback","to","HeaderAuth","showRegisterForm","showLoginForm","showUserMenu","refreshUsername","toggleRegisterForm","toggleLoginForm","toggleUserMenu","hideUserMenu","afterLogin","unverifiedAccount","suggestUserRegister","getUsername","focusedElement","relatedTarget","classList","contains","loggedIn","loginButtons","loggedInButton","tabIndex","onBlur","topRightButtons","Header","path","useLocation","pathname","small","outerClassName","Caret","selection","getSelection","anchorElement","anchorNode","parentElement","focusElement","focusNode","anchorMathBlock","getContainingMathBlock","focusMathBlock","a","b","c","d","anchorIndex","getAttribute","focusIndex","anchorOffset","focusOffset","insideCaretBlock","rangeSelect","index","position","editorSelected","Number","leftIndex","leftPosition","rightIndex","rightPosition","newCaretInfo","removeCaretBlock","setRangePosition","addCaretBlock","setPosition","blockElement","textNode","document","getElementById","childNodes","createTextNode","appendChild","range","createRange","setStart","collapse","removeAllRanges","addRange","leftBlockElement","rightBlockElement","leftTextNode","rightTextNode","setEnd","caretBlock","createElement","setAttribute","innerHTML","String","fromCharCode","nextBlock","insertBefore","existingCaretBlock","removeChild","element","ContentType","MATH","BOLD","ITALIC","UNDERLINE","Toolbar","boldSelected","mask","italicSelected","underlineSelected","mathSelected","callback","MaskManager","bit","on","originalMask","countCharacters","str","counter","character","VirtualTextEditor","initialContent","characters","caretBlockIndex","caretBlockPosition","block","m","char","push","splice","updateBlocks","globalIndex","charactersScanned","i","blocks","blockLength","blockEndIndex","j","blockStarts","characterCounter","getGlobalIndex","getIndexAndPosition","insertedString","rightBuffer","globalCaretPosition","globalLeftIndex","deleteLength","globalRightIndex","editorMergeBit","newLeftIndex","newLeftPosition","currentMask","characterBuffer","blockPosition","forEach","caretBlockIncoming","join","MathBlock","rendered","content","changeKey","useMemo","useEffect","renderMathJax","getClassName","style","Block","editorId","selected","TextEditorContent","editable","caretInfo","handleBlur","handleFocus","contentElements","contentEditable","suppressContentEditableWarning","spellCheck","onFocus","registerEventHandlers","that","textEditor","addEventListener","composing","delete","insert","isComposing","inputType","dataTransfer","getData","data","pasteText","clipboardData","compositionIndex","compositionPosition","previousBlockElement","compositionDiv","nextBlockElement","compositionInsert","handleSelectionChange","selectionChanged","caret","getInfo","err","TextEditor","uniqueKey","virtualTextEditor","contentChanged","getContent","editorMask","toolbarUpdate","insertionUpdate","newString","updateCaretInfo","rangeMaskUpdate","updateContent","setInfo","newMask","newToolbarMask","toolbarMergeBit","leftCharacterMask","getCharacterMask","updateMask","potentialNewIndexAndPosition","getCorrectedIndexAndPosition","correctIndex","correctPosition","outerTextEditor","junkNodes","node","nodeType","Node","TEXT_NODE","nodeName","childElement","children","nodeValue","onChange","removeEventListener","isIcon","mathBlock","forceUpdate","CpNotes","Home","UserInfo","SearchSelect","loading","searchTerm","previousValidSearchTerm","showOptions","options","filteredOptions","handleChange","handleOptionSelect","option","optionStringArray","keys","toLowerCase","getOptionString","includes","prevProps","staticKey","search","filterOptions","sortKey","optionString","optionElements","displayString","displayKey","disabled","ApiConstants","API_ENDPOINT","Api","Error","response","status","json","responseJson","createApiError","resource","method","fetch","body","JSON","stringify","headers","Authorization","manageResponseError","queryString","sendRequestBody","SolvedState","SOLVED","text","css","UPSOLVED","UPSOLVED_HELP","UNSOLVED","ProblemsApi","problems","prettySk","sk","replaceAll","platform","getJson","contestId","_prettifyProblems","problemId","solvedStateValue","parseInt","AddProblemForm","contestSortKey","problemSortKey","skipContestSearch","handlePlatformChange","toggleSkipContestSearch","updateProblemSortKey","updateContestSortKey","addProblem","searchContestFunction","searchContestKey","getContests","searchProblemFunction","searchProblemKey","getProblems","skipButtonText","defaultValue","NotesApi","forcePublished","postJson","title","solved","published","putJson","deleteJson","UserNoteInfo","solvedClass","getSolvedStateCssClass","problemUrl","problemSk","replace","publishedClass","timestamp","Date","editedTime","toLocaleDateString","authorUsername","loggedInUsername","problemCode","problemName","UserContestInfo","noteElements","notes","note","split","codeClassName","contestName","UserNotesTitleDropdown","innerContent","showing","toggleCallback","showText","VirtualPaginator","pageSize","setContent","activeItems","item","paginatorActive","indices","active","pageIndex","currentIndex","activeBufferSize","itemBuffer","pageCount","bufferSize","Paginator","currentPage","totalPages","pageIndices","after","increment","before","sort","paginatorButtons","buttonClassName","RecursionLevel","CONTEST","PLATFORM","compareByRecent","note1","note2","groupByAttributes","objectList","attributeGroups","obj","attributeValues","attribute","UserNotesList","page","sortNoteItems","virtualPaginator","sortedNoteItems","updatePage","firstNote","contestObject","contestCode","organizeBySolved","organizeByPlatform","recursionLevel","keyString","paginatorIndices","organizeByContest","contestGroups","createContestObject","organize","attributeString","dropdownShowing","dropdownIndices","sortByRecent","groups","innerKeyString","innerIndices","noteInfoElements","NoteComponent","renderNoteItems","getSolvedStateText","toggleActiveItems","getPageCount","nextProps","nextState","importantProps","currentImportantProps","map","x","nextImportantProps","noteItems","paginator","UserNotes","showAddProblemForm","toggleAddProblemForm","toggleOrganizeBySolved","toggleOrganizeByPlatform","toggleOrganizeByContest","toggleSortByRecent","formComponent","userInfo","addNote","history","UserApi","LoadState","LOADING","DONE","NOT_FOUND","UserProfile","match","params","getUserInfo","getNotes","loadInfo","loadedContent","userNotFoundContent","DeleteMenu","randomCode","uuidv4","deleteNote","confirmCode","problemInfo","remindUserToSave","returnValue","EditNoteForm","noteInfo","parse","lastSaved","disableEditButtons","saved","loadingSave","loadingPublish","showDeleteMenu","saveNote","togglePublishNote","toggleDeleteMenu","handleTitleChange","handleSolvedChange","handleContentChange","editNote","onbeforeunload","saveOrPublishNote","newContent","savedText","toLocaleString","togglePublishText","saveButtonClass","publishButtonClass","when","placeholder","ProblemInfo","href","link","EditNote","getProblemInfo","getNoteInfo","loadProblemInfo","loadNoteInfo","noteNotFoundContent","LikesApi","noteAuthor","likedStatus","LikeDislike","initialScore","initialStatus","likeCallback","useState","score","setScore","setStatus","likeButtonClass","toggleStatus","PublicNoteInfo","editedTimestamp","sendLike","likeCount","PublicNote","ownerUsername","App","exact","Boolean","location","hostname","Amplify","configure","amplify_config","add","keyCode","remove","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.65f29540.chunk.js","sourcesContent":["class Utils {\n  static async setStatePromise(component, stateObject) {\n    return new Promise((resolve, reject) => {\n      if(component.mounted !== false) {\n        component.setState(stateObject, () => {\n          resolve();\n        });\n      }\n      resolve();\n    });\n  }\n\n  static isEmpty(object) {\n    for(const property in object) {\n      if(object.hasOwnProperty(property))\n        return false;\n    }\n    return true;\n  }\n\n  static async componentSetError(component, message) {\n    if(component.setError) {\n      await component.setError(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: `Error: ${message}`\n      });\n    }\n  }\n\n  static async componentSetSuccess(component, message) {\n    if(component.setSuccess) {\n      await component.setSuccess(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: '',\n        success: message\n      });\n    }\n  }\n\n  static renderMathJax(selectors) {\n    if(window.MathJax) {\n      window.MathJax.typeset(selectors);\n    }\n  }\n}\n\nexport default Utils;\n","import Utils from '../Utils';\n\nconst MIN_PASSWORD_LENGTH = 6;\n\nclass HeaderUtils {\n  static async checkPasswords(component, password, confirmPassword) {\n    if(password !== confirmPassword) {\n      await Utils.componentSetError(component, \"Your passwords don't match!\");\n      return false;\n    }\n\n    if(password.length < MIN_PASSWORD_LENGTH) {\n      await Utils.componentSetError(component, 'Your password is too short!');\n      return false;\n    }\n\n    return true;\n  }\n}\n\nexport default HeaderUtils;\n","import { Auth } from 'aws-amplify';\n\nclass UserAuthApi {\n  static async getProfile() {\n    try {\n      return await Auth.currentAuthenticatedUser();\n    }\n    catch(err) {\n      // currentAuthenticatedUser() throws this error if the user is not logged in\n      return null;\n    }\n  }\n\n  static async register(username, email, password) {\n    const info = await Auth.signUp({\n      username,\n      password,\n      attributes: {\n        email: email\n      }\n    });\n\n    // I like how Amplify makes this one inconsistently lowercase... lol\n    return info.codeDeliveryDetails.Destination;\n  }\n\n  static async verifyEmail(username, code) {\n    await Auth.confirmSignUp(username, code);\n  }\n\n  static async resendVerificationEmail(username) {\n    const info = await Auth.resendSignUp(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async forgotPassword(username) {\n    const info = await Auth.forgotPassword(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async resetPassword(username, code, password) {\n    await Auth.forgotPasswordSubmit(username, code, password);\n  }\n\n  static async login(username, password) {\n    await Auth.signIn(username, password);\n  }\n\n  static async logout() {\n    await Auth.signOut();\n  }\n\n  static async getUsername() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    return profile.username;\n  }\n\n  static async getAccessToken() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    const currentSession = profile.getSignInUserSession();\n    const accessToken = currentSession.getAccessToken();\n    return accessToken.getJwtToken();\n  }\n}\n\nexport default UserAuthApi;\n","const HeaderState = Object.freeze({\n  LOGIN: 0,\n  RECOVERY_USERNAME: 1,\n  RECOVERY_PASSWORD: 2,\n  RECOVERY_SUCCESS: 3,\n  REGISTER: 4,\n  REGISTER_VERIFY: 5,\n  REGISTER_SUCCESS: 6\n});\n\nexport default HeaderState;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\nimport '../css/RegisterForm.css';\n\nconst USERNAME_MIN_LENGTH = 3;\nconst USERNAME_MAX_LENGTH = 20;\nconst ERROR_TRIGGER_PREFIX = 'PreSignUp failed with error';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const screen = props.unverifiedAccountUsername ?\n                   HeaderState.REGISTER_VERIFY : HeaderState.REGISTER;\n    this.state = {\n      error: '',\n      success: '',\n      username: props.unverifiedAccountUsername,\n      destination: props.unverifiedAccountDestination,\n      screen: screen\n    };\n\n    this.close = this.close.bind(this);\n    this.register = this.register.bind(this);\n    this.verifyEmail = this.verifyEmail.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async setError(message) {\n    if(message.startsWith(ERROR_TRIGGER_PREFIX)) {\n      message = message.substring(\n        ERROR_TRIGGER_PREFIX.length, message.length - 1\n      );\n    }\n\n    await Utils.setStatePromise(this, {\n      error: `Error: ${message}`,\n      success: ''\n    });\n  }\n\n  async register(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const email = form.email.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!username || !email || !password || !confirmPassword) {\n      await this.setError('Please fill out all of the fields.')\n      return;\n    }\n\n    if(username.length < USERNAME_MIN_LENGTH || username.length > USERNAME_MAX_LENGTH) {\n      await this.setError(\n        `Your username must be between ${USERNAME_MIN_LENGTH} ` +\n        `and ${USERNAME_MAX_LENGTH} characters!`\n      );\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      const destination = await UserAuthApi.register(username, email, password);\n      Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.REGISTER_VERIFY\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async verifyEmail(event) {\n    event.preventDefault();\n\n    const code = event.target.code.value;\n    try {\n      await UserAuthApi.verifyEmail(this.state.username, code);\n      Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.REGISTER_SUCCESS\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.resendVerificationEmail(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const createAccountForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Create an account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.register}>\n          <label htmlFor=\"register-username\">Username</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 id=\"register-username\" />\n\n          <label htmlFor=\"register-email\">Email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"email\"\n                 id=\"register-email\" />\n\n          <label htmlFor=\"register-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 id=\"register-password\" />\n\n          <label htmlFor=\"register-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 id=\"register-confirm-password\" />\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Register\" />\n        </form>\n      </div>\n    );\n\n    const verifyEmailForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Verify your email!</h2>\n        <p>\n          You should've received an email at {this.state.destination} with a\n          verification code. If it isn't convenient for you to verify your\n          account now, you may do so later by logging in.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.verifyEmail}>\n          <label htmlFor=\"verification-code\">Verification code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"verification-code\" id=\"verification-code\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const emailVerifiedBox = (\n      <div className=\"Register-form Module-popup\">\n        <h2>Verification success!</h2>\n        <p className=\"Module-popup-last\">\n          Your email was successfully verified! Click the 'X' button in the\n          top-right corner to return to the site, and you'll be able to login.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.REGISTER:\n        currentForm = createAccountForm;\n        break;\n      case HeaderState.REGISTER_VERIFY:\n        currentForm = verifyEmailForm;\n        break;\n      case HeaderState.REGISTER_SUCCESS:\n        currentForm = emailVerifiedBox;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      username: null,\n      destination: null,\n      screen: props.screen || HeaderState.LOGIN\n    }\n\n    this.close = this.close.bind(this);\n    this.login = this.login.bind(this);\n    this.enablePasswordRecovery = this.enablePasswordRecovery.bind(this);\n    this.forgotPassword = this.forgotPassword.bind(this);\n    this.resetPassword = this.resetPassword.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback(false);\n  }\n\n  async login(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const password = form.password.value;\n\n    if(!username || !password) {\n      await Utils.componentSetError(this, \"Please fill out all of the fields.\");\n      return;\n    }\n\n    try {\n      try {\n        await UserAuthApi.login(username, password);\n        this.props.exitCallback(true);\n      }\n      catch(err) {\n        if(err.code === 'UserNotConfirmedException') {\n          const destination = await UserAuthApi.resendVerificationEmail(username);\n          await this.props.emailVerificationCallback(username, destination);\n        }\n        else {\n          throw err;\n        }\n      }\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async enablePasswordRecovery(event) {\n    await Utils.setStatePromise(this, {\n      error: '',\n      screen: HeaderState.RECOVERY_USERNAME\n    });\n  }\n\n  async forgotPassword(event) {\n    event.preventDefault();\n\n    const username = event.target.username.value;\n    if(!username) {\n      await Utils.componentsSetError(this, 'Please input your username.');\n      return;\n    }\n\n    try {\n      const destination = await UserAuthApi.forgotPassword(username);\n      await Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.RECOVERY_PASSWORD\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async resetPassword(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const code = form.code.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!code || !password || !confirmPassword) {\n      Utils.componentSetError(this, 'Please fill out all of the fields.');\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      await UserAuthApi.resetPassword(this.state.username, code, password);\n      await Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.RECOVERY_SUCCESS\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.forgotPassword(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loginForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Login to your account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.login}>\n          <label htmlFor=\"login-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"login-username\" id=\"login-username\" />\n\n          <label htmlFor=\"login-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"login-password\" id=\"login-password\" />\n\n          <button type=\"button\" onClick={this.enablePasswordRecovery}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Forgot your password?\n          </button>\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    );\n\n    const recoveryUsernameForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          Please provide your username or email, so that you can reset your\n          password via an emailed confirmation code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.forgotPassword}>\n          <label htmlFor=\"reset-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"reset-username\" id=\"reset-username\" />\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          You should've received an email at { this.state.destination } with a\n          verification code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.resetPassword}>\n          <label htmlFor=\"reset-code\">Code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"reset-code\" id=\"reset-code\" />\n\n          <label htmlFor=\"reset-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"reset-password\" id=\"reset-password\" />\n\n          <label htmlFor=\"reset-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 key=\"reset-confirm-password\" id=\"reset-confirm-password\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordSuccess= (\n      <div className=\"Register-form Module-popup\">\n        <h2>Password reset success!</h2>\n        <p>\n          Your password has been reset successfully. You'll now be able to\n          login again.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.LOGIN:\n        currentForm = loginForm;\n        break;\n      case HeaderState.RECOVERY_USERNAME:\n        currentForm = recoveryUsernameForm;\n        break;\n      case HeaderState.RECOVERY_PASSWORD:\n        currentForm = recoveryPasswordForm;\n        break;\n      case HeaderState.RECOVERY_SUCCESS:\n        currentForm = recoveryPasswordSuccess;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/UserMenu.css'\n\nclass UserMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = this.logout.bind(this);\n  }\n\n  async logout() {\n    await UserAuthApi.logout();\n    await this.props.logoutCallback();\n  }\n\n  render() {\n    return (\n      <div className=\"User-menu\">\n        <ol>\n          <li>\n            <Link className=\"Header-menu-button\" onClick={this.props.closeCallback}\n                  to={`/users/${this.props.username}`}>\n                  Your profile\n            </Link>\n          </li>\n          <div className=\"User-menu-divider\"></div>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\">\n              Settings\n            </button>\n          </li>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\" onClick={this.logout}>\n              Logout\n            </button>\n          </li>\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default UserMenu;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport UserMenu from './UserMenu';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nclass HeaderAuth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      showRegisterForm: false,\n      showLoginForm: false,\n      showUserMenu: false,\n      unverifiedAccountUsername: null,\n      unverifiedAccountDestination: null\n    };\n\n    this.refreshUsername = this.refreshUsername.bind(this);\n    this.toggleRegisterForm = this.toggleRegisterForm.bind(this);\n    this.toggleLoginForm = this.toggleLoginForm.bind(this);\n    this.toggleUserMenu = this.toggleUserMenu.bind(this);\n    this.hideUserMenu = this.hideUserMenu.bind(this);\n    this.afterLogin = this.afterLogin.bind(this);\n    this.unverifiedAccount = this.unverifiedAccount.bind(this);\n\n    window.suggestUserRegister = this.toggleRegisterForm;\n  }\n\n  async refreshUsername() {\n    const username = await UserAuthApi.getUsername();\n\n    await Utils.setStatePromise(this, {\n      username: username,\n      showUserMenu: false,\n      unverifiedAccountUsername: null\n    });\n  }\n\n  async componentDidMount() {\n    await this.refreshUsername();\n  }\n\n  async toggleRegisterForm(event) {\n    if(this.state.showRegisterForm) {\n      await Utils.setStatePromise(this, {\n        unverifiedAccountUsername: null,\n        unverifiedAccountDestination: null\n      });\n    }\n\n    await Utils.setStatePromise(this, {\n      showRegisterForm: !this.state.showRegisterForm\n    });\n  }\n\n  async toggleLoginForm(event) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: !this.state.showLoginForm\n    });\n  }\n\n  async toggleUserMenu(event) {\n    await Utils.setStatePromise(this, {\n      showUserMenu: !this.state.showUserMenu\n    });\n  }\n\n  async hideUserMenu(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.classList.contains('Header-menu-button'))\n      return;\n\n    await Utils.setStatePromise(this, {\n      showUserMenu: false\n    });\n  }\n\n  async afterLogin(loggedIn) {\n    await this.toggleLoginForm();\n\n    if(loggedIn)\n      await this.refreshUsername();\n  }\n\n  async unverifiedAccount(username, destination) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: false,\n      showRegisterForm: true,\n      unverifiedAccountUsername: username,\n      unverifiedAccountDestination: destination\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loginButtons = (\n      <div className=\"Header-top-right\">\n        <button className=\"Header-menu-button\" onClick={this.toggleLoginForm}>\n          Login\n        </button>\n        <span className=\"Header-divider\"></span>\n        <button className=\"Header-menu-button\" onClick={this.toggleRegisterForm}>\n          Create an account\n        </button>\n      </div>\n    );\n\n    const loggedInButton = (\n      <div className=\"Header-logged-in\" tabIndex=\"-1\"\n           onBlur={this.hideUserMenu}>\n        <div className=\"Header-top-right\">\n          <button className=\"Header-menu-button\" onClick={this.toggleUserMenu}>\n            { this.state.username }\n          </button>\n        </div>\n        <div className=\"Header-user-menu\">\n          {\n            this.state.showUserMenu &&\n            <UserMenu username={this.state.username}\n                      closeCallback={this.toggleUserMenu}\n                      logoutCallback={this.refreshUsername} />\n          }\n        </div>\n      </div>\n    );\n\n    const topRightButtons = this.state.username ? loggedInButton : loginButtons;\n\n    return (\n      <>\n        {\n          this.state.showRegisterForm &&\n          <RegisterForm exitCallback={this.toggleRegisterForm}\n                        unverifiedAccountUsername=\n                        {this.state.unverifiedAccountUsername}\n                        unverifiedAccountDestination=\n                        {this.state.unverifiedAccountDestination} />\n        }\n        {\n          this.state.showLoginForm &&\n          <LoginForm exitCallback={this.afterLogin}\n                     emailVerificationCallback={this.unverifiedAccount} />\n        }\n        { topRightButtons }\n      </>\n    );\n  }\n}\n\nexport default HeaderAuth;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport HeaderAuth from './HeaderAuth';\nimport '../css/Header.css';\n\nfunction Header() {\n  const path = useLocation().pathname;\n  const small = (path === '/' || path === '/home');\n  const outerClassName = small ? 'Header' : 'Header-small';\n\n  return (\n    <div className={outerClassName}>\n      { small && <h1>cp-notes beta</h1> }\n      <ul>\n        <li>\n          <Link to=\"/home\">Home</Link>\n        </li>\n      </ul>\n      <HeaderAuth />\n      <span className=\"Header-bottom\"></span>\n    </div>\n  );\n}\n\nexport default Header;\n","function lessThan(a, b, c, d) {\n  if(a === c)\n    return b < d;\n  return a < c;\n}\n\nclass Caret {\n  constructor(id) {\n    this.id = id;\n  }\n\n  getInfo() {\n    const selection = window.getSelection();\n    let anchorElement = selection.anchorNode.parentElement;\n    let focusElement = selection.focusNode.parentElement;\n\n    let anchorMathBlock = this.getContainingMathBlock(anchorElement);\n    let focusMathBlock = this.getContainingMathBlock(focusElement);\n    if(anchorMathBlock) anchorElement = anchorMathBlock;\n    if(focusMathBlock) focusElement = focusMathBlock;\n\n    let anchorIndex = anchorElement.getAttribute('index');\n    let focusIndex = focusElement.getAttribute('index');\n    let anchorOffset = anchorElement.getAttribute('position');\n    let focusOffset = focusElement.getAttribute('position');\n    let insideCaretBlock = anchorElement.getAttribute('id') === 'Askd-te-CARET';\n\n    if(anchorIndex === null || focusIndex === null) {\n      return {\n        rangeSelect: false,\n        index: 0,\n        position: 0,\n        insideCaretBlock: false,\n        editorSelected: true\n      };\n    }\n\n    if(anchorOffset === null) anchorOffset = selection.anchorOffset;\n    if(focusOffset === null) focusOffset = selection.focusOffset;\n\n    anchorIndex = Number(anchorIndex);\n    anchorOffset = Number(anchorOffset);\n    focusIndex = Number(focusIndex);\n    focusOffset = Number(focusOffset);\n\n    if(anchorIndex === focusIndex && anchorOffset === focusOffset) {\n      return {\n        rangeSelect: false,\n        index: anchorIndex,\n        position: anchorOffset,\n        insideCaretBlock: insideCaretBlock,\n        editorSelected: true\n      };\n    }\n\n    if(!lessThan(anchorIndex, anchorOffset, focusIndex, focusOffset)) {\n      [ anchorIndex, focusIndex ] = [ focusIndex, anchorIndex ];\n      [ anchorOffset, focusOffset ] = [ focusOffset, anchorOffset ];\n    }\n\n    return {\n      rangeSelect: true,\n      leftIndex: anchorIndex,\n      leftPosition: anchorOffset,\n      rightIndex: focusIndex,\n      rightPosition: focusOffset,\n      editorSelected: true\n    };\n  }\n\n  setInfo(newCaretInfo) {\n    if(newCaretInfo.rangeSelect) {\n      this.removeCaretBlock();\n      this.setRangePosition(\n        newCaretInfo.leftIndex, newCaretInfo.leftPosition,\n        newCaretInfo.rightIndex, newCaretInfo.rightPosition\n      );\n    }\n    else if(newCaretInfo.insideCaretBlock) {\n      this.addCaretBlock(newCaretInfo.index, newCaretInfo.position);\n      this.setPosition(-1, 1);\n    }\n    else {\n      this.removeCaretBlock();\n      this.setPosition(newCaretInfo.index, newCaretInfo.position);\n    }\n  }\n\n  setPosition(index, position) {\n    let blockElement;\n    if(index >= 0) {\n      blockElement = document.getElementById(this.id + index);\n    }\n    else {\n      blockElement = document.getElementById('Askd-te-CARET');\n    }\n\n    let textNode = blockElement.childNodes[0];\n    if(!textNode) {\n      textNode = document.createTextNode('');\n      blockElement.appendChild(textNode);\n    }\n\n    let range = document.createRange();\n    range.setStart(textNode, position);\n    range.collapse(true);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  setRangePosition(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const leftBlockElement = document.getElementById(this.id + leftIndex);\n    const rightBlockElement = document.getElementById(this.id + rightIndex);\n    const leftTextNode = leftBlockElement.childNodes[0];\n    const rightTextNode = rightBlockElement.childNodes[0];\n\n    let range = document.createRange();\n    range.setStart(leftTextNode, leftPosition);\n    range.setEnd(rightTextNode, rightPosition);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  addCaretBlock(index, position) {\n    this.removeCaretBlock();\n\n    let caretBlock = document.createElement('div');\n    caretBlock.setAttribute('id', 'Askd-te-CARET');\n    caretBlock.setAttribute('index', index);\n    caretBlock.setAttribute('position', position);\n    caretBlock.innerHTML = String.fromCharCode(8203);\n\n    let nextBlock = document.getElementById(this.id + (index + 1));\n    nextBlock.parentElement.insertBefore(caretBlock, nextBlock);\n  }\n\n  removeCaretBlock() {\n    let existingCaretBlock = document.getElementById('Askd-te-CARET');\n    if(existingCaretBlock) {\n      existingCaretBlock.parentElement.removeChild(existingCaretBlock);\n      return true;\n    }\n    return false;\n  }\n\n  getContainingMathBlock(element) {\n    while(element) {\n      if(element.classList.contains('Askd-te-MATHJAX')) {\n        return element;\n      }\n      element = element.parentElement;\n    }\n    return null;\n  }\n}\n\nexport default Caret;\n","const ContentType = Object.freeze({\n  MATH: (1 << 0),\n  BOLD: (1 << 1),\n  ITALIC: (1 << 2),\n  UNDERLINE: (1 << 3)\n});\n\nexport default ContentType;\n","import React, { Component } from 'react';\nimport ContentType from './ContentType';\n\nclass Toolbar extends Component {\n  render() {\n    const boldSelected = (this.props.mask & ContentType.BOLD) > 0;\n    const italicSelected = (this.props.mask & ContentType.ITALIC) > 0;\n    const underlineSelected = (this.props.mask & ContentType.UNDERLINE) > 0;\n    const mathSelected = (this.props.mask & ContentType.MATH) > 0;\n\n    return (\n      <div className=\"Askd-text-editor-toolbar\">\n        <ul>\n          <li className={`Askd-tb-selected-${boldSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-BOLD\"\n                    onClick={() => this.props.callback(ContentType.BOLD)} />\n          </li>\n          <li className={`Askd-tb-selected-${italicSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-ITALIC\"\n                    onClick={() => this.props.callback(ContentType.ITALIC)} />\n          </li>\n          <li className={`Askd-tb-selected-${underlineSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-UNDERLINE\"\n                    onClick={() => this.props.callback(ContentType.UNDERLINE)} />\n          </li>\n          <li className={`Askd-tb-selected-${mathSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-MATH\"\n                    onClick={() => this.props.callback(ContentType.MATH)} />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import ContentType from './ContentType';\n\nclass MaskManager {\n  static toolbarMergeBit(bit, on, originalMask) {\n    if(bit === ContentType.MATH) {\n      if(on) return bit;\n      return 0;\n    }\n    else {\n      if(originalMask & ContentType.MATH) {\n        originalMask ^= ContentType.MATH;\n      }\n      return originalMask ^ bit;\n    }\n  }\n\n  static editorMergeBit(bit, on, originalMask) {\n    if(bit === ContentType.MATH) {\n      if(on) return bit;\n\n      if(originalMask & bit) originalMask ^= bit;\n      return originalMask;\n    }\n    else {\n      if(originalMask & ContentType.MATH) originalMask = 0;\n      if(on) return originalMask | bit;\n\n      if(originalMask & bit) originalMask ^= bit;\n      return originalMask;\n    }\n  }\n}\n\nexport default MaskManager;\n","import MaskManager from './MaskManager';\n\n// This is different from str.length; for example emojis use up 2\nfunction countCharacters(str) {\n  let counter = 0;\n  for(const character of str) {\n    Number(character);  // Silence unused variable warning\n    counter++;\n  }\n  return counter;\n}\n\nclass VirtualTextEditor {\n  constructor(initialContent) {\n    this.characters = [];\n    this.caretBlockIndex = null;\n    this.caretBlockPosition = null;\n\n    if(initialContent) {\n      for(const block of initialContent) {\n        const mask = block.m;\n        for(const char of block.c) {\n          this.characters.push({\n            m: mask,\n            c: char\n          });\n        }\n      }\n\n      /* Remove extra newline character if it exists */\n      this.characters.splice(this.characters.length - 1);\n    }\n\n    this.updateBlocks();\n  }\n\n  getIndexAndPosition(globalIndex) {\n    let charactersScanned = 0;\n    for(let i = 0; i < this.blocks.length; i++) {\n      const block = this.blocks[i];\n      const blockLength = countCharacters(block.c);\n      const blockEndIndex = charactersScanned + blockLength;\n\n      if(globalIndex <= blockEndIndex) {\n        let position = 0;\n        for(let j = charactersScanned; j <= blockEndIndex; j++) {\n          if(globalIndex === j) {\n            return [ i, position ];\n          }\n          position += this.characters[j].c.length;\n        }\n      }\n      charactersScanned += blockLength;\n    }\n\n    return [ null, null ];\n  }\n\n  getGlobalIndex(index, position) {\n    let globalIndex = this.blockStarts[index];\n    let characterCounter = 0;\n    while(characterCounter < position) {\n      characterCounter += this.characters[globalIndex].c.length;\n      globalIndex++;\n    }\n\n    if(characterCounter === position)\n      return globalIndex;\n\n    return globalIndex - 1;\n  }\n\n  /* Visually identical caret positions can have two different caret indices\n  and positions if it's in the middle of two blocks. This method returns the end\n  position of the first block if that happens. */\n  getCorrectedIndexAndPosition(index, position) {\n    const globalIndex = this.getGlobalIndex(index, position);\n    return this.getIndexAndPosition(globalIndex);\n  }\n\n  getCharacterMask(index, position, rangeSelect) {\n    const globalIndex = this.getGlobalIndex(index, position);\n\n    if(globalIndex === 0) {\n      if(this.characters.length > 0)\n        return this.characters[0].m;\n      return 0;\n    }\n    else if(rangeSelect) {\n      return this.characters[globalIndex].m;\n    }\n    return this.characters[globalIndex - 1].m;\n  }\n\n  insert(index, position, insertedString, mask) {\n    const globalIndex = this.getGlobalIndex(index, position);\n    const rightBuffer = this.characters.splice(globalIndex);\n\n    for(const char of insertedString) {\n      this.characters.push({\n        m: mask,\n        c: char\n      });\n    }\n\n    const globalCaretPosition = this.characters.length;\n    for(const character of rightBuffer) {\n      this.characters.push(character);\n    }\n\n    this.caretBlockIndex = null;\n    this.caretBlockPosition = null;\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  delete(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n    const deleteLength = globalRightIndex - globalLeftIndex;\n\n    if(globalLeftIndex < 0) {\n      return [ 0, 0 ];\n    }\n\n    this.characters.splice(globalLeftIndex, deleteLength);\n    const globalCaretPosition = globalLeftIndex;\n\n    this.caretBlockIndex = null;\n    this.caretBlockPosition = null;\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  rangeMaskUpdate(leftIndex, leftPosition, rightIndex, rightPosition, bit, on) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n\n    for(let i = globalLeftIndex; i < globalRightIndex; i++) {\n      this.characters[i].m = MaskManager.editorMergeBit(bit, on, this.characters[i].m);\n    }\n\n    this.caretBlockIndex = null;\n    this.caretBlockPosition = null;\n\n    this.updateBlocks();\n\n    const [ newLeftIndex, newLeftPosition ] = this.getIndexAndPosition(globalLeftIndex);\n    const [ newRightIndex, newRightPosition ] = this.getIndexAndPosition(globalRightIndex);\n    return [ newLeftIndex, newLeftPosition, newRightIndex, newRightPosition ];\n  }\n\n  addCaretBlock(index, position) {\n    this.caretBlockIndex = index;\n    this.caretBlockPosition = position;\n    this.updateBlocks();\n  }\n\n  /* Removes the caret block, and returns the new index and position of the caret */\n  removeCaretBlock(index, position) {\n    const globalIndex = this.getGlobalIndex(index, position);\n    if(this.caretBlockIndex !== null) {\n      this.caretBlockIndex = null;\n      this.caretBlockPosition = null;\n\n      this.updateBlocks();\n      return this.getIndexAndPosition(globalIndex);\n    }\n    return null;\n  }\n\n  updateBlocks() {\n    this.blocks = [];\n    this.blockStarts = [];\n\n    let currentMask = this.characters.length > 0 ? this.characters[0].m : 0;\n    let characterBuffer = [];\n    let blockPosition = 0;\n    this.characters.forEach((character, i) => {\n      let caretBlockIncoming = this.blocks.length === this.caretBlockIndex &&\n        blockPosition === this.caretBlockPosition;\n\n      /* End of this block */\n      if(character.m !== currentMask || caretBlockIncoming) {\n        this.blocks.push({\n          m: currentMask,\n          c: characterBuffer.join('')\n        });\n        this.blockStarts.push(i - characterBuffer.length);\n\n        blockPosition = character.c.length;\n        currentMask = character.m;\n        characterBuffer = [ character.c ];\n      }\n      else {\n        characterBuffer.push(character.c);\n        blockPosition += character.c.length;\n      }\n    });\n\n    this.blocks.push({\n      m: currentMask,\n      c: characterBuffer.join('')\n    });\n    this.blockStarts.push(this.characters.length - characterBuffer.length);\n\n    /* Extra newline character sets correct caret positioning */\n    this.blocks.push({\n      m: 0,\n      c: String.fromCharCode(10)\n    });\n\n    this.blockStarts.push(this.characters.length);\n  }\n\n  getContent() {\n    return this.blocks;\n  }\n}\n\nexport default VirtualTextEditor;\n","import React, { useEffect, useMemo } from 'react';\nimport Utils from '../../Utils';\n\nfunction MathBlock({ id, index, block, rendered }) {\n  let content = rendered ? '\\\\(' + block.c + '\\\\)' : block.c;\n  let className = rendered ? 'Askd-te-MATHJAX' : 'Askd-te-MATH';\n  let position = rendered ? block.c.length : null;\n\n  let changeKey = useMemo(() => {\n    return {\n      id: id, rendered: rendered\n    };\n  }, [ id, rendered ]);\n\n  useEffect(() => {\n    if(changeKey.rendered) {\n      Utils.renderMathJax([`#${changeKey.id}`]);\n    }\n  }, [changeKey]);\n\n  return (\n    <div className={className} id={id} index={index} position={position}>\n      { content }\n    </div>\n  );\n}\n\nexport default MathBlock;\n","import React, { Component } from 'react';\nimport ContentType from '../ContentType';\nimport MathBlock from './MathBlock';\n\nfunction getClassName(mask) {\n  let className = '';\n  for(const style in ContentType) {\n    if(mask & ContentType[style]) {\n      className += `Askd-te-${style} `;\n    }\n  }\n  return className;\n}\n\nclass Block extends Component {\n  render() {\n    const block = this.props.block;\n    const editorId = this.props.id;\n    const index = this.props.index;\n    const selected = this.props.selected;\n\n    if(block.m === ContentType.MATH) {\n      return (\n        <MathBlock id={editorId + index} rendered={!selected} block={block}\n                   index={index} />\n      );\n    }\n\n    return (\n      <div className={getClassName(block.m)} id={editorId + index} index={index}>\n        { block.c }\n      </div>\n    );\n  }\n}\n\nexport default Block;\n","import React from 'react';\nimport Block from './Block/Block';\n\nfunction TextEditorContent({ content, id, editable, caretInfo, handleBlur, handleFocus }) {\n  let contentElements = [];\n\n  content.forEach((block, i) => {\n    let selected = false;\n\n    if(editable && caretInfo.editorSelected) {\n      if(caretInfo.rangeSelect && caretInfo.leftIndex <= i && i <= caretInfo.rightIndex) {\n        selected = true;\n      }\n      if(!caretInfo.rangeSelect && caretInfo.index === i && !caretInfo.insideCaretBlock) {\n        selected = true;\n      }\n    }\n\n    contentElements.push(\n      <Block block={block} id={id} index={i} key={i} selected={selected} />\n    );\n  });\n\n  return (\n    <div className=\"Askd-text-editor-text\" id={id} tabIndex=\"0\"\n         contentEditable={editable} suppressContentEditableWarning=\"true\"\n         spellCheck=\"false\" onBlur={handleBlur} onFocus={handleFocus}>\n         { contentElements }\n    </div>\n  );\n}\n\nexport default TextEditorContent;\n","const registerEventHandlers = (that) => {\n  that.textEditor.addEventListener('keydown', async (event) => {\n    /* TBD, bro who even uses that button lol */\n    if(event.key === 'Delete') {\n      event.preventDefault();\n    }\n    else if(event.key === 'Backspace' && !that.composing) {\n      await that.delete();\n      event.preventDefault();\n    }\n    else if(event.key === 'Enter' && !that.composing) {\n      await that.insert(String.fromCharCode(10));\n      event.preventDefault();\n    }\n  });\n\n  that.textEditor.addEventListener('beforeinput', async (event) => {\n    if(event.isComposing || that.composing) {\n      return;\n    }\n\n    event.preventDefault();\n\n    /* Mobile autocorrect and word selection from a menu */\n    if(event.inputType === 'insertReplacementText') {\n      that.caretInfo.rangeSelect = true;\n      const insertedString = event.dataTransfer.getData('text');\n      await that.insert(insertedString);\n    }\n    /* Generic event with a valid 'data'; things like undo/redo operations and\n       drag and drop are TBD */\n    else if(event.data) {\n      await that.insert(event.data);\n    }\n  });\n\n  that.textEditor.addEventListener('paste', async (event) => {\n    event.preventDefault();\n\n    const pasteText = event.clipboardData.getData('Text');\n    await that.insert(pasteText);\n  });\n\n  that.textEditor.addEventListener('compositionstart', async (event) => {\n    if(that.caretInfo.rangeSelect) {\n      await that.delete();\n    }\n\n    that.composing = true;\n    that.compositionIndex = that.caretInfo.index;\n    that.compositionPosition = that.caretInfo.position;\n\n    /* Set the previous block to be uneditable */\n    let previousBlockElement = document.getElementById(that.id +\n      (that.compositionIndex - 1));\n    if(previousBlockElement) {\n      previousBlockElement.setAttribute('contenteditable', 'false');\n    }\n\n    /* Create an empty uneditable composition div in front of this block */\n    let compositionDiv = document.createElement('div');\n    compositionDiv.setAttribute('contenteditable', 'false');\n    compositionDiv.setAttribute('id', that.id + 'composition');\n\n    let nextBlockElement = document.getElementById(that.id +\n      (that.compositionIndex + 1));\n    if(nextBlockElement) {\n      that.textEditor.insertBefore(compositionDiv, nextBlockElement);\n    }\n  });\n\n  that.textEditor.addEventListener('compositionend', async (event) => {\n    if(!that.composing) {\n      return;\n    }\n\n    /* Composition has ended; allow the previous block to be editable again */\n    let previousBlockElement = document.getElementById(that.id +\n      (that.compositionIndex - 1));\n    if(previousBlockElement) {\n      previousBlockElement.setAttribute('contenteditable', 'true');\n    }\n\n    /* Remove the composition div */\n    let compositionDiv = document.getElementById(that.id + 'composition');\n    if(compositionDiv) {\n      that.textEditor.removeChild(compositionDiv);\n    }\n\n    that.composing = false;\n    await that.compositionInsert(event.data);\n  });\n\n  let handleSelectionChange = (event) => {\n    if(that.composing) {\n      return;\n    }\n\n    let selectionChanged = false;\n    try {\n      const selection = window.getSelection();\n      const anchorNode = selection.anchorNode;\n\n      if(that.textEditor.contains(anchorNode)) {\n        const newCaretInfo = that.caret.getInfo();\n        for(const key in newCaretInfo) {\n          if(newCaretInfo.hasOwnProperty(key) &&\n             that.caretInfo[key] !== newCaretInfo[key]) {\n            selectionChanged = true;\n          }\n        }\n      }\n    }\n    catch(err) {\n      /* anchorElement isn't a div inside the text editor */\n    }\n\n    if(selectionChanged) {\n      that.selectionChanged();\n    }\n  };\n\n  document.addEventListener('selectionchange', handleSelectionChange);\n\n  return handleSelectionChange;\n}\n\nexport default registerEventHandlers;\n","import React, { Component } from 'react';\nimport Caret from './Caret';\nimport Toolbar from './Toolbar';\nimport VirtualTextEditor from './VirtualTextEditor';\nimport TextEditorContent from './TextEditorContent';\nimport MaskManager from './MaskManager';\nimport Utils from '../Utils';\nimport registerEventHandlers from './registerEventHandlers';\nimport '../css/TextEditor.css';\n\nclass TextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.id = this.props.uniqueKey ?\n                `Askd-text-editor${this.props.uniqueKey}` : 'Askd-text-editor';\n    this.virtualTextEditor = new VirtualTextEditor(this.props.initialContent);\n    this.caret = new Caret(this.id);\n\n    this.contentChanged = false;\n    this.caretInfo = {\n      rangeSelect: false,\n      index: 0,\n      position: 0,\n      editorSelected: false,\n      insideCaretBlock: false\n    };\n\n    this.composing = false;\n    this.compositionIndex = null;\n    this.compositionPosition = null;\n\n    this.state = {\n      content: this.virtualTextEditor.getContent(),\n      editorMask: 0\n    };\n\n    this.toolbarUpdate = this.toolbarUpdate.bind(this);\n  }\n\n  async delete() {\n    if(!this.caretInfo.rangeSelect) {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.index, this.caretInfo.position - 1,\n        this.caretInfo.index, this.caretInfo.position\n      );\n    }\n    else {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n        this.caretInfo.rightIndex, this.caretInfo.rightPosition\n      );\n    }\n\n    this.caretInfo.rangeSelect = false;\n    await this.insertionUpdate();\n  }\n\n  async insert(newString) {\n    this.updateCaretInfo();\n\n    if(this.caretInfo.rangeSelect) {\n      await this.delete();\n    }\n\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.caretInfo.index, this.caretInfo.position, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.insertionUpdate();\n  }\n\n  async compositionInsert(newString) {\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.compositionIndex, this.compositionPosition, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.insertionUpdate();\n  }\n\n  async rangeMaskUpdate(bit, on) {\n    if(!this.caretInfo.rangeSelect) {\n      return;\n    }\n\n    [ this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition ] =\n    this.virtualTextEditor.rangeMaskUpdate(\n      this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition, bit, on\n    );\n\n    await this.insertionUpdate();\n  }\n\n  async insertionUpdate() {\n    this.contentChanged = true;\n    this.caret.removeCaretBlock();\n    this.caretInfo.insideCaretBlock = false;\n\n    await this.updateContent();\n    this.caret.setInfo(this.caretInfo);\n    await this.selectionChanged();\n  }\n\n  async updateContent() {\n    await Utils.setStatePromise(this, {\n      content: this.virtualTextEditor.getContent()\n    });\n  }\n\n  async updateMask(newMask) {\n    await Utils.setStatePromise(this, {\n      editorMask: newMask\n    });\n  }\n\n  async toolbarUpdate(bit) {\n    this.caretInfo.editorSelected = true;\n\n    const on = (this.state.editorMask & bit) === 0;\n    const newToolbarMask = MaskManager.toolbarMergeBit(bit, on, this.state.editorMask);\n\n    if(!this.caretInfo.rangeSelect) {\n      const leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.index, this.caretInfo.position, false\n      );\n\n      this.caretInfo.insideCaretBlock = this.state.content[0].c.length === 0 ||\n        newToolbarMask !== leftCharacterMask;\n    }\n\n    if(this.caretInfo.insideCaretBlock) {\n      this.virtualTextEditor.addCaretBlock(\n        this.caretInfo.index, this.caretInfo.position\n      );\n      await this.updateContent();\n    }\n\n    await this.updateMask(newToolbarMask);\n    await this.rangeMaskUpdate(bit, on);\n\n    this.caret.setInfo(this.caretInfo);\n  }\n\n  async selectionChanged() {\n    this.updateCaretInfo();\n\n    let potentialNewIndexAndPosition = this.virtualTextEditor.removeCaretBlock(\n      this.caretInfo.index, this.caretInfo.position\n    );\n\n    if(potentialNewIndexAndPosition) {\n      [ this.caretInfo.index, this.caretInfo.position ] = potentialNewIndexAndPosition;\n      await this.updateContent();\n    }\n\n    let leftCharacterMask;\n    if(this.caretInfo.rangeSelect) {\n      leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition, true\n      );\n    }\n    else {\n      leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.index, this.caretInfo.position, false\n      );\n    }\n    await this.updateMask(leftCharacterMask);\n\n    if(!this.caretInfo.rangeSelect) {\n      this.caret.setInfo(this.caretInfo);\n    }\n  }\n\n  updateCaretInfo() {\n    const newCaretInfo = this.caret.getInfo();\n    this.caretInfo.editorSelected = true;\n\n    /* Maintain previous info for the other selection type */\n    if(newCaretInfo.rangeSelect) {\n      this.caretInfo.leftIndex = newCaretInfo.leftIndex;\n      this.caretInfo.leftPosition = newCaretInfo.leftPosition;\n      this.caretInfo.rightIndex = newCaretInfo.rightIndex;\n      this.caretInfo.rightPosition = newCaretInfo.rightPosition;\n      this.caretInfo.rangeSelect = true;\n      this.caretInfo.insideCaretBlock = false;\n    }\n    else {\n      let [ correctIndex, correctPosition ] =\n        this.virtualTextEditor.getCorrectedIndexAndPosition(\n          newCaretInfo.index, newCaretInfo.position\n        );\n\n      if(this.state.content[0].c.length === 0) {\n        newCaretInfo.insideCaretBlock = true;\n      }\n\n      this.caretInfo.index = correctIndex;\n      this.caretInfo.position = correctPosition;\n      this.caretInfo.rangeSelect = false;\n      this.caretInfo.insideCaretBlock = newCaretInfo.insideCaretBlock;\n    }\n  }\n\n  componentDidMount() {\n    this.textEditor = document.getElementById(this.id);\n    this.outerTextEditor = document.getElementById(this.id + '!');\n    this.handleSelectionChange = registerEventHandlers(this);\n  }\n\n  componentDidUpdate() {\n    if(!this.contentChanged) {\n      return;\n    }\n\n    /* The rendered text must be manually sanitized */\n    let junkNodes = [];\n    for(const node of this.textEditor.childNodes) {\n      if(node.nodeType === Node.TEXT_NODE || node.nodeName === 'BR' ||\n         node.nodeName === 'SPAN') {\n        junkNodes.push(node);\n      }\n    }\n\n    for(const node of junkNodes) {\n      this.textEditor.removeChild(node);\n    }\n\n    for(let i = 0; i < this.state.content.length; i++) {\n      let childElement = this.textEditor.children[i];\n      if(childElement.classList.contains('Askd-te-MATHJAX')) {\n        continue;\n      }\n\n      if(childElement.innerHTML !== this.state.content[i].c) {\n        childElement.childNodes[0].nodeValue = this.state.content[i].c;\n      }\n    }\n\n    /* Callback with new content */\n    if(this.props.onChange) {\n      this.props.onChange(this.state.content);\n    }\n\n    this.contentChanged = false;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    document.removeEventListener('selectionchange', this.handleSelectionChange);\n  }\n\n  render() {\n    let handleBlur = (event) => {\n      /* Don't blur if this is one of the toolbar buttons or math block */\n      if(event.relatedTarget) {\n        let isIcon = event.relatedTarget.classList.contains('Askd-tb-icon') &&\n           this.outerTextEditor.contains(event.relatedTarget);\n        let mathBlock = this.caret.getContainingMathBlock(event.relatedTarget);\n\n        if(isIcon || mathBlock) {\n          return;\n        }\n      }\n\n      if(this.caretInfo.editorSelected) {\n        this.caretInfo.editorSelected = false;\n        this.caret.removeCaretBlock();\n        this.forceUpdate();\n      }\n    };\n\n    return (\n      <div className=\"Askd-text-editor\" id={this.id + '!'}>\n        <Toolbar mask={this.state.editorMask} callback={this.toolbarUpdate} />\n        <TextEditorContent content={this.state.content} id={this.id}\n                           editable={true} handleBlur={handleBlur}\n                           handleFocus={this.handleSelectionChange}\n                           caretInfo={this.caretInfo} />\n      </div>\n    );\n  }\n}\n\nexport default TextEditor;\n","import React, { Component } from 'react';\nimport TextEditor from '../TextEditor/TextEditor';\nimport Utils from '../Utils';\n\nclass CpNotes extends Component {\n  componentDidMount() {\n    Utils.renderMathJax();\n  }\n\n  render() {\n    return (\n      <div className=\"Module-wrapper\">\n        <div className=\"Module-description Module-description-centered\">\n          <p>A work-in-progress web application for storing publicly\n          accessible competitive programming notes! \\[\\LaTeX\\]</p>\n        </div>\n        <TextEditor />\n      </div>\n    );\n  }\n}\n\nexport default CpNotes;\n","import React from 'react';\nimport CpNotes from '../Home/CpNotes';\n\nfunction Home() {\n  return (\n    <>\n      <CpNotes />\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction UserInfo({ info }) {\n  return (\n    <>\n      <h2 className=\"Module-heading\">{info.username}</h2>\n      {\n        info.email &&\n        <p>Email: {info.email} (only visible to you)</p>\n      }\n    </>\n  );\n}\n\nexport default UserInfo;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport '../css/SearchSelect.css';\n\nconst MAX_OPTIONS = 10;\nconst GLOBAL_SORT_KEY = 'sk';\n\nclass SearchSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchTerm: '',\n      previousValidSearchTerm: '',\n      showOptions: false,\n      options: [],\n      filteredOptions: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleOptionSelect = this.handleOptionSelect.bind(this);\n  }\n\n  getOptionString(option) {\n    const optionStringArray = [];\n    for(const key of this.props.keys)\n      optionStringArray.push(option[key]);\n\n    return optionStringArray.join(' - ');\n  }\n\n  async filterOptions() {\n    var filteredOptions = [];\n    const searchTerm = this.state.searchTerm.toLowerCase();\n\n    for(const option of this.state.options) {\n      if(filteredOptions.length === MAX_OPTIONS)\n        break;\n\n      const optionString = this.getOptionString(option);\n      if(optionString.toLowerCase().includes(searchTerm)) {\n        filteredOptions.push(option);\n        continue;\n      }\n\n      for(const key of this.props.keys) {\n        if(option[key].toLowerCase().includes(searchTerm)) {\n          filteredOptions.push(option);\n          break;\n        }\n      }\n    }\n\n    await Utils.setStatePromise(this, {\n      filteredOptions: filteredOptions\n    });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.staticKey && !this.props.staticKey) {\n      await Utils.setStatePromise(this, {\n        searchTerm: ''\n      });\n      return;\n    }\n\n    if(this.props.staticKey === prevProps.staticKey)\n      return;\n\n    await Utils.setStatePromise(this, {\n      searchTerm: '',\n      loading: true\n    });\n    const options = await this.props.search();\n\n    await Utils.setStatePromise(this, {\n      loading: false,\n      previousValidSearchTerm: '',\n      options: options,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleChange(event) {\n    await Utils.setStatePromise(this, {\n      searchTerm: event.target.value,\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleBlur(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.id === `Select-options-${this.props.name}`)\n      return;\n\n    await Utils.setStatePromise(this, {\n      showOptions: false,\n      searchTerm: this.state.previousValidSearchTerm\n    });\n  }\n\n  async handleFocus(event) {\n    await Utils.setStatePromise(this, {\n      showOptions: true\n    });\n  }\n\n  async handleOptionSelect(sortKey, optionString) {\n    await Utils.setStatePromise(this, {\n      searchTerm: optionString,\n      previousValidSearchTerm: optionString,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n    this.props.callback(sortKey);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    var optionElements = [];\n    for(const option of this.state.filteredOptions) {\n      const optionString = this.getOptionString(option);\n      const displayString = option[this.props.displayKey];\n      const sortKey = option[GLOBAL_SORT_KEY];\n      optionElements.push(\n        <li onClick={() => this.handleOptionSelect(sortKey, displayString)}\n            key={sortKey}>\n            {optionString}\n        </li>\n      );\n    }\n\n    return (\n      <div onBlur={this.handleBlur} className=\"Search-select\">\n        <input className={this.state.loading ? \"Askd-form-loading\" : \"\"}\n               onChange={this.handleChange} autoComplete=\"off\" type=\"text\"\n               value={this.state.searchTerm} onFocus={this.handleFocus}\n               name={this.props.name} id={this.props.id}\n               disabled={!this.props.search || this.state.loading} />\n        {\n          optionElements.length > 0 && this.state.showOptions &&\n          <ol id={`Select-options-${this.props.name}`} tabIndex=\"-1\"\n              className=\"Search-select-options\">\n            { optionElements }\n          </ol>\n        }\n      </div>\n    );\n  }\n}\n\nexport default SearchSelect;\n","const ApiConstants = Object.freeze({\n  API_ENDPOINT: 'https://qqmeusmrfk.execute-api.us-east-1.amazonaws.com/prod/'\n});\n\nexport default ApiConstants;\n","import queryString from 'query-string';\nimport ApiConstants from './ApiConstants';\nimport UserAuthApi from './UserAuthApi';\n\nclass Api {\n  static createApiError(name, message) {\n    const err = Error(message);\n    err.name = name;\n\n    return err;\n  }\n\n  static async manageResponseError(response) {\n    if(response.status === 400) {\n      const responseJson = await response.json();\n      throw Api.createApiError(responseJson.name, responseJson.message);\n    }\n    else if(response.status !== 200) {\n      throw Error('Request failed!');\n    }\n  }\n\n  static async sendRequestBody(resource, options, method) {\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + resource, {\n      method: method,\n      body: JSON.stringify(options),\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async getJson(resource, options) {\n    const path = `${resource}?${queryString.stringify(options)}`;\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + path, {\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async postJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'POST');\n  }\n\n  static async putJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'PUT');\n  }\n\n  static async deleteJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'DELETE');\n  }\n}\n\nexport default Api;\n","const SolvedState = Object.freeze({\n  SOLVED: { value: 0, text: 'Solved', css: 'solved' },\n  UPSOLVED: { value: 1, text: 'Upsolved', css: 'upsolved' },\n  UPSOLVED_HELP: { value: 2, text: 'Upsolved with help', css: 'upsolved-help' },\n  UNSOLVED: { value: 3, text: 'Unsolved', css: 'unsolved' }\n});\n\nexport default SolvedState;\n","import Api from './Api';\nimport SolvedState from '../Enum/SolvedState';\n\nclass ProblemsApi {\n  static _prettifyProblems(problems) {\n    for(let i = 0; i < problems.length; i++) {\n      problems[i].prettySk = problems[i].sk.replaceAll('#', '');\n    }\n  }\n\n  static async getContests(platform) {\n    const options = {\n      platform: platform\n    };\n\n    return await Api.getJson('contests', options);\n  }\n\n  static async getProblems(platform, contestId) {\n    const options = {\n      platform: platform,\n      contestId: contestId\n    };\n\n    let problems = await Api.getJson('problems', options);\n    ProblemsApi._prettifyProblems(problems);\n\n    return problems;\n  }\n\n  static async getProblemInfo(platform, problemId) {\n    const options = {\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.getJson('problems', options);\n  }\n\n  static getSolvedStateText(solvedStateValue) {\n    solvedStateValue = parseInt(solvedStateValue);\n    for(const state in SolvedState) {\n      if(SolvedState[state].value === solvedStateValue) {\n        return SolvedState[state].text;\n      }\n    }\n  }\n\n  static getSolvedStateCssClass(solvedStateValue) {\n    solvedStateValue = parseInt(solvedStateValue);\n    for(const state in SolvedState) {\n      if(SolvedState[state].value === solvedStateValue) {\n        return SolvedState[state].css;\n      }\n    }\n  }\n}\n\nexport default ProblemsApi;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport SearchSelect from '../SearchSelect/SearchSelect';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport '../css/AddProblemForm.css';\n\nclass AddProblemForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      platform: null,\n      contestSortKey: null,\n      problemSortKey: null,\n      skipContestSearch: false\n    };\n\n    this.close = this.close.bind(this);\n    this.handlePlatformChange = this.handlePlatformChange.bind(this);\n    this.toggleSkipContestSearch = this.toggleSkipContestSearch.bind(this);\n    this.updateProblemSortKey = this.updateProblemSortKey.bind(this);\n    this.updateContestSortKey = this.updateContestSortKey.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  close() {\n    this.props.callback(null, null, null);\n  }\n\n  async handlePlatformChange(event) {\n    await Utils.setStatePromise(this, {\n      platform: event.target.value\n    });\n  }\n\n  async toggleSkipContestSearch(event) {\n    await Utils.setStatePromise(this, {\n      skipContestSearch: !this.state.skipContestSearch,\n      contestSortKey: null,\n      problemSortKey: null\n    });\n  }\n\n  async updateContestSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      contestSortKey: sortKey,\n      problemSortKey: null\n    });\n  }\n\n  async updateProblemSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      problemSortKey: sortKey\n    });\n  }\n\n  async addProblem(event) {\n    event.preventDefault();\n\n    if(!this.state.problemSortKey) {\n      await Utils.componentSetError(this, 'Please search and select a problem.');\n      return;\n    }\n\n    this.props.callback(this.state.problemSortKey, this.state.platform, this);\n  }\n\n  render() {\n    var searchContestFunction = null;\n    var searchContestKey = null;\n    if(this.state.platform && !this.state.skipContestSearch) {\n      searchContestFunction = () => ProblemsApi.getContests(this.state.platform);\n      searchContestKey = this.state.platform;\n    }\n\n    var searchProblemFunction = null;\n    var searchProblemKey = null;\n    if(this.state.platform && this.state.contestSortKey) {\n      searchProblemFunction = () =>\n        ProblemsApi.getProblems(this.state.platform, this.state.contestSortKey);\n      searchProblemKey = this.state.platform + this.state.contestSortKey;\n    }\n    else if(this.state.platform && this.state.skipContestSearch) {\n      searchProblemFunction = () => ProblemsApi.getProblems(this.state.platform);\n      searchProblemKey = this.state.platform;\n    }\n\n    var skipButtonText = this.state.skipContestSearch ?\n                         'Want to filter by contest?' :\n                         'Want to skip filtering by contest?';\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">\n                X\n        </button>\n        <div className=\"Add-problem-form Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Add a problem!</h2>\n          <form className=\"Askd-form\" onSubmit={this.addProblem}>\n            <label htmlFor=\"cp-platform\">Platform</label>\n            <select defaultValue=\"\" onChange={this.handlePlatformChange}\n                    name=\"platform\" id=\"cp-platform\">\n              <option disabled value=\"\"></option>\n              <option value=\"CodeForces\">CodeForces</option>\n              <option value=\"CodeChef\">CodeChef</option>\n            </select>\n\n            <label htmlFor=\"cp-contest\">Contest</label>\n            <SearchSelect name='contest' id='cp-contest' search={searchContestFunction}\n                          keys={['sk', 'name']} callback={this.updateContestSortKey}\n                          displayKey='name' staticKey={searchContestKey} />\n\n            <button onClick={this.toggleSkipContestSearch}\n                    type=\"button\" className=\"Askd-form-link Askd-form-link-separator\">\n              { skipButtonText }\n            </button>\n\n            <label htmlFor=\"cp-title\">Problem</label>\n            <SearchSelect name='title' id='cp-title' search={searchProblemFunction}\n                          keys={['prettySk', 'name']} callback={this.updateProblemSortKey}\n                          displayKey='name' staticKey={searchProblemKey} />\n\n            <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                   value=\"Add Problem\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddProblemForm;\n","import Api from './Api';\n\nclass NotesApi {\n  static async getNotes(username) {\n    const options = {\n      username: username\n    };\n\n    return await Api.getJson('notes', options);\n  }\n\n  static async getNoteInfo(username, platform, problemId, forcePublished) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId,\n      forcePublished: forcePublished\n    };\n\n    return await Api.getJson('notes', options);\n  }\n\n  static async addNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.postJson('notes', options);\n  }\n\n  static async editNote(username, platform, problemId, title, solved,\n                        content, published) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId,\n      title: title,\n      solved: solved,\n      content: content,\n      published: published\n    };\n\n    return await Api.putJson('notes', options);\n  }\n\n  static async deleteNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.deleteJson('notes', options);\n  }\n}\n\nexport default NotesApi;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\n\nclass UserNoteInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    const solvedClass = ProblemsApi.getSolvedStateCssClass(info.solved);\n    const problemUrl = info.problemSk.replace('#', '/');\n    const publishedClass = info.published ? 'published' : 'unpublished';\n    const timestamp = (new Date(info.editedTime)).toLocaleDateString();\n    const authorUsername = info.username;\n\n    return (\n      <li className={`User-note-info User-note-info-${solvedClass}`}>\n        <ul className=\"User-note-info-links\">\n          {\n            this.props.loggedInUsername === authorUsername &&\n            <li>\n              <Link className=\"Askd-form-link\"\n                    to={`/notes/edit/${info.platform}/${problemUrl}`}>\n                Edit\n              </Link>\n            </li>\n          }\n          {\n            info.published &&\n            <li>\n              <Link className=\"Askd-form-link\"\n                    to={`/notes/${authorUsername}/${info.platform}/${problemUrl}`}>\n                View\n              </Link>\n            </li>\n          }\n        </ul>\n        <h5>\n          {info.platform} {info.problemCode} - {info.problemName}\n        </h5>\n        <h6 className=\"User-note-info-title\">\n          {info.title}\n        </h6>\n        <h6 className=\"User-note-info-timestamp\">\n          {timestamp}\n        </h6>\n        <ul className=\"User-note-info-tags\">\n          <li className=\"User-note-info-tag User-note-solved-indicator\" />\n          <li className={`User-note-info-tag User-note-tag-${publishedClass}`} />\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default UserNoteInfo;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\n\nclass UserContestInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    let noteElements = [];\n    for(let i = 0; i < info.notes.length; i++) {\n      const note = info.notes[i];\n      const problemCode = note.problemSk.split('#')[1];\n      const problemUrl = note.problemSk.replace('#', '/');\n      const authorUsername = note.username;\n\n      let codeClassName = 'User-note-contest-code';\n      if(problemCode.length >= 3) {\n        codeClassName += '-small';\n      }\n\n      const solvedClass = ProblemsApi.getSolvedStateCssClass(note.solved);\n\n      noteElements.push(\n        <li key={i} className={`User-note-contest-note User-note-contest-${solvedClass}`}>\n          <ul className=\"User-note-contest-links\">\n            {\n              this.props.loggedInUsername === authorUsername &&\n              <li>\n                <Link className=\"Askd-form-link\"\n                      to={`/notes/edit/${note.platform}/${problemUrl}`}>\n                  Edit\n                </Link>\n              </li>\n            }\n            {\n              note.published &&\n              <li>\n                <Link className=\"Askd-form-link\"\n                      to={`/notes/${authorUsername}/${note.platform}/${problemUrl}`}>\n                  View\n                </Link>\n              </li>\n            }\n          </ul>\n          <span className={codeClassName}>\n            {problemCode}\n          </span>\n        </li>\n      );\n    }\n\n    const timestamp = (new Date(info.editedTime)).toLocaleDateString();\n\n    return (\n      <li className=\"User-note-info\">\n        <h5>\n          {info.contestName}\n        </h5>\n        <h6 className=\"User-note-contest-timestamp\">\n          {timestamp}\n        </h6>\n        <ul className=\"User-note-contest-notes\">\n          { noteElements }\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default UserContestInfo;\n","import React from 'react';\n\nfunction UserNotesTitleDropdown({ title, innerContent, showing, toggleCallback }) {\n  const showText = showing ? 'Hide' : 'Show';\n\n  return (\n    <li className=\"User-notes-title-dropdown\">\n      <button className=\"User-notes-title-dropdown-showhide Askd-form-link\"\n              onClick={toggleCallback}>\n        { showText }\n      </button>\n      <h4 className=\"User-notes-title-dropdown-heading\">\n        {title}\n      </h4>\n      { showing && innerContent }\n    </li>\n  );\n}\n\nexport default UserNotesTitleDropdown;\n","class VirtualPaginator {\n  constructor(pageSize, content) {\n    this.pageSize = pageSize;\n    this.setContent(content);\n  }\n\n  setContent(content) {\n    this.content = [];\n    this.activeItems = content.length;\n\n    for(let i = 0; i < content.length; i++) {\n      let item = content[i];\n      item.paginatorActive = true;\n      this.content.push(item);\n    }\n  }\n\n  toggleActiveItems(indices) {\n    for(const index of indices) {\n      const active = this.content[index].paginatorActive;\n      this.content[index].paginatorActive = !active;\n\n      if(active) {\n        this.activeItems--;\n      }\n      else {\n        this.activeItems++;\n      }\n    }\n  }\n\n  getContent(pageIndex) {\n    let currentIndex = 1;\n    let activeBufferSize = 0;\n    let itemBuffer = [];\n\n    for(const item of this.content) {\n      itemBuffer.push(item);\n      if(item.paginatorActive) {\n        activeBufferSize++;\n        if(activeBufferSize === this.pageSize) {\n          if(currentIndex === pageIndex)\n            return itemBuffer;\n          itemBuffer = [];\n          activeBufferSize = 0;\n          currentIndex++;\n        }\n      }\n    }\n\n    if(currentIndex === pageIndex) {\n      return itemBuffer;\n    }\n\n    throw Error('Page index out of range!');\n  }\n\n  getPageCount() {\n    let pageCount = 0;\n    let bufferSize = 0;\n    let activeBufferSize = 0;\n    for(const item of this.content) {\n      if(bufferSize === 0) {\n        pageCount++;\n      }\n\n      bufferSize++;\n      if(item.paginatorActive) {\n        activeBufferSize++;\n      }\n      if(activeBufferSize === this.pageSize) {\n        activeBufferSize = 0;\n        bufferSize = 0;\n      }\n    }\n\n    return pageCount;\n  }\n}\n\nexport default VirtualPaginator;\n","import React from 'react';\nimport '../css/Paginator.css';\n\nfunction Paginator({ currentPage, totalPages, callback }) {\n  let pageIndices = [ currentPage ];\n\n  let after = currentPage + 1;\n  let increment = 2;\n  while(after < totalPages) {\n    pageIndices.push(after);\n    after += increment;\n    increment *= 2;\n  }\n\n  let before = currentPage - 1;\n  increment = 2;\n  while(before > 1) {\n    pageIndices.push(before);\n    before -= increment;\n    increment *= 2;\n  }\n\n  if(currentPage !== 1)\n    pageIndices.push(1);\n  if(currentPage !== totalPages && totalPages > 1)\n    pageIndices.push(totalPages);\n\n  pageIndices.sort((a, b) => a - b);\n\n  let paginatorButtons = [];\n  for(const pageIndex of pageIndices) {\n    const buttonClassName = (pageIndex === currentPage) ?\n      'Paginator-list-selected' : 'Askd-form-link';\n    paginatorButtons.push(\n      <li key={pageIndex}>\n        <button className={buttonClassName} onClick={() => callback(pageIndex)}>\n          {pageIndex}\n        </button>\n      </li>\n    );\n  }\n\n  return (\n    <div className=\"Paginator\">\n      <ul className=\"Paginator-list\">\n        { paginatorButtons }\n      </ul>\n    </div>\n  );\n}\n\nexport default Paginator;\n","import React, { Component } from 'react';\nimport UserNoteInfo from './UserNoteInfo';\nimport UserContestInfo from './UserContestInfo';\nimport UserNotesTitleDropdown from './UserNotesTitleDropdown';\nimport VirtualPaginator from '../Paginator/VirtualPaginator';\nimport Paginator from '../Paginator/Paginator';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport Utils from '../Utils';\n\nconst RecursionLevel = Object.freeze({\n  CONTEST: 0,\n  PLATFORM: 1,\n  SOLVED: 2\n});\nconst PAGINATE_SIZE = 15;\n\nfunction compareByRecent(note1, note2) {\n  if(note1.editedTime > note2.editedTime)\n    return -1;\n  return 1;\n}\n\nfunction groupByAttributes(objectList, attributes) {\n  let attributeGroups = {};\n  for(const obj of objectList) {\n    let attributeValues = [];\n    for(const attribute of attributes) {\n      attributeValues.push(obj[attribute]);\n    }\n\n    const key = attributeValues.join('#');\n    if(attributeGroups.hasOwnProperty(key)) {\n      attributeGroups[key].push(obj);\n    }\n    else {\n      attributeGroups[key] = [ obj ];\n    }\n  }\n\n  return attributeGroups;\n}\n\nclass UserNotesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 1,\n      loggedInUsername: null\n    };\n\n    this.sortNoteItems(this.props.notes);\n    this.virtualPaginator = new VirtualPaginator(PAGINATE_SIZE, this.sortedNoteItems);\n\n    this.updatePage = this.updatePage.bind(this);\n  }\n\n  async componentDidMount() {\n    const loggedInUsername = await UserAuthApi.getUsername();\n    await Utils.setStatePromise(this, {\n      loggedInUsername: loggedInUsername\n    });\n  }\n\n  createContestObject(notes) {\n    const firstNote = notes[0];\n    let contestObject = {\n      contestCode: firstNote.contestCode,\n      contestName: firstNote.contestName,\n      platform: firstNote.platform,\n      editedTime: firstNote.editedTime,\n      notes: []\n    };\n\n    if(this.props.organizeBySolved)\n      contestObject.solved = firstNote.solved;\n    if(this.props.organizeByPlatform)\n      contestObject.platform = firstNote.platform;\n\n    for(const note of notes) {\n      contestObject.notes.push(note);\n      if(note.editedTime > contestObject.editedTime) {\n        contestObject.editedTime = note.editedTime;\n      }\n    }\n\n    return contestObject;\n  }\n\n  sortNoteItems(notes, recursionLevel = RecursionLevel.SOLVED, keyString = '') {\n    let paginatorIndices = [];\n    if(recursionLevel === RecursionLevel.CONTEST) {\n      if(this.props.organizeByContest) {\n        const contestGroups = groupByAttributes(notes, ['platform', 'contestCode']);\n        for(const key in contestGroups) {\n          let contestObject = this.createContestObject(contestGroups[key]);\n          paginatorIndices.push(this.sortedNoteItems.length);\n          this.sortedNoteItems.push(contestObject);\n        }\n      }\n      else {\n        for(const note of notes) {\n          paginatorIndices.push(this.sortedNoteItems.length);\n          this.sortedNoteItems.push(note);\n        }\n      }\n    }\n    else {\n      let organize, attributeString;\n      if(recursionLevel === RecursionLevel.SOLVED) {\n        this.sortedNoteItems = [];\n        this.dropdownShowing = {};\n        this.dropdownIndices = {};\n\n        if(this.props.sortByRecent) {\n          notes = [...notes].sort(compareByRecent);\n        }\n\n        organize = this.props.organizeBySolved;\n        attributeString = 'solved';\n      }\n      else {\n        organize = this.props.organizeByPlatform;\n        attributeString = 'platform';\n      }\n\n      if(organize) {\n        const groups = groupByAttributes(notes, [attributeString]);\n        for(const key in groups) {\n          const innerKeyString = `${keyString}#${key}`;\n          const innerIndices =\n            this.sortNoteItems(groups[key], recursionLevel - 1, innerKeyString);\n\n          this.dropdownShowing[innerKeyString] = true;\n          this.dropdownIndices[innerKeyString] = innerIndices;\n\n          for(const index of innerIndices) {\n            paginatorIndices.push(index);\n          }\n        }\n      }\n      else {\n        return this.sortNoteItems(notes, recursionLevel - 1, keyString);\n      }\n    }\n\n    return paginatorIndices;\n  }\n\n  renderNoteItems(notes, recursionLevel = RecursionLevel.SOLVED, keyString = '') {\n    let noteInfoElements = [];\n    if(recursionLevel === RecursionLevel.CONTEST) {\n      let NoteComponent =\n        this.props.organizeByContest ? UserContestInfo : UserNoteInfo;\n\n      for(let i = 0; i < notes.length; i++) {\n        noteInfoElements.push(\n          <NoteComponent key={i} info={notes[i]}\n                         loggedInUsername={this.state.loggedInUsername} />\n        );\n      }\n    }\n    else {\n      let organize, attributeString;\n      if(recursionLevel === RecursionLevel.SOLVED) {\n        organize = this.props.organizeBySolved;\n        attributeString = 'solved';\n      }\n      else {\n        organize = this.props.organizeByPlatform;\n        attributeString = 'platform';\n      }\n\n      if(organize) {\n        const groups = groupByAttributes(notes, [attributeString]);\n        for(const key in groups) {\n          const innerKeyString = `${keyString}#${key}`;\n          const innerContent =\n            this.renderNoteItems(groups[key], recursionLevel - 1, innerKeyString);\n          const title = (recursionLevel === RecursionLevel.SOLVED) ?\n            ProblemsApi.getSolvedStateText(key) : key;\n\n          const showing = this.dropdownShowing[innerKeyString];\n          const innerIndices = this.dropdownIndices[innerKeyString];\n          const toggleCallback = async () => {\n            this.virtualPaginator.toggleActiveItems(innerIndices);\n            this.dropdownShowing[innerKeyString] = !this.dropdownShowing[innerKeyString];\n\n            const totalPages = this.virtualPaginator.getPageCount();\n            if(this.state.page > totalPages) {\n              await this.updatePage(totalPages);\n            }\n\n            this.forceUpdate();\n          };\n\n          noteInfoElements.push(\n            <UserNotesTitleDropdown key={key} title={title}\n                                    innerContent={innerContent} showing={showing}\n                                    toggleCallback={toggleCallback} />\n          );\n        }\n      }\n      else {\n        return this.renderNoteItems(notes, recursionLevel - 1);\n      }\n    }\n\n    return (\n      <ul className=\"User-notes-list\">\n        { noteInfoElements }\n      </ul>\n    );\n  }\n\n  async updatePage(page) {\n    await Utils.setStatePromise(this, {\n      page: page\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Only re-sort note items on an (important) props update\n    const importantProps = [\n      'organizeBySolved',\n      'organizeByPlatform',\n      'organizeByContest',\n      'sortByRecent'\n    ];\n    const currentImportantProps = importantProps.map((x) => this.props[x]);\n    const nextImportantProps = importantProps.map((x) => nextProps[x]);\n\n    if(JSON.stringify(currentImportantProps) !== JSON.stringify(nextImportantProps)) {\n      this.props = nextProps;\n      this.sortNoteItems(this.props.notes);\n      this.virtualPaginator.setContent(this.sortedNoteItems);\n\n      if(this.state.page !== 1) {\n        this.updatePage(1);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  render() {\n    if(this.props.notes.length === 0) {\n      return (\n        <p className=\"User-notes-nothing\">There's nothing to see here yet!</p>\n      );\n    }\n\n    const noteItems = this.virtualPaginator.getContent(this.state.page);\n    const totalPages = this.virtualPaginator.getPageCount();\n    const paginator = (\n      <Paginator currentPage={this.state.page} totalPages={totalPages}\n                 callback={this.updatePage} />\n    );\n\n    return (\n      <>\n        { paginator }\n        { this.renderNoteItems(noteItems) }\n        { paginator }\n      </>\n    );\n  }\n}\n\nexport default UserNotesList;\n","import React, { Component } from 'react';\nimport AddProblemForm from './AddProblemForm';\nimport NotesApi from '../Api/NotesApi';\nimport UserNotesList from './UserNotesList';\nimport Utils from '../Utils';\nimport '../css/UserNotes.css';\n\nclass UserNotes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAddProblemForm: false,\n      organizeBySolved: false,\n      organizeByPlatform: false,\n      organizeByContest: false,\n      sortByRecent: false\n    };\n\n    this.toggleAddProblemForm = this.toggleAddProblemForm.bind(this);\n    this.toggleOrganizeBySolved = this.toggleOrganizeBySolved.bind(this);\n    this.toggleOrganizeByPlatform = this.toggleOrganizeByPlatform.bind(this);\n    this.toggleOrganizeByContest = this.toggleOrganizeByContest.bind(this);\n    this.toggleSortByRecent = this.toggleSortByRecent.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  async toggleAddProblemForm() {\n    await Utils.setStatePromise(this, {\n      showAddProblemForm: !this.state.showAddProblemForm\n    });\n  }\n\n  async toggleOrganizeBySolved() {\n    await Utils.setStatePromise(this, {\n      organizeBySolved: !this.state.organizeBySolved\n    });\n  }\n\n  async toggleOrganizeByPlatform() {\n    await Utils.setStatePromise(this, {\n      organizeByPlatform: !this.state.organizeByPlatform\n    });\n  }\n\n  async toggleOrganizeByContest() {\n    await Utils.setStatePromise(this, {\n      organizeByContest: !this.state.organizeByContest\n    });\n  }\n\n  async toggleSortByRecent() {\n    await Utils.setStatePromise(this, {\n      sortByRecent: !this.state.sortByRecent\n    });\n  }\n\n  async addProblem(problemSortKey, platform, formComponent) {\n    if(!problemSortKey) {\n      await this.toggleAddProblemForm();\n      return;\n    }\n\n    try {\n      const username = this.props.userInfo.username;\n      await NotesApi.addNote(username, platform, problemSortKey);\n\n      const problemUrl = problemSortKey.replace('#', '/');\n      this.props.history.push(`/notes/edit/${platform}/${problemUrl}`);\n    }\n    catch(err) {\n      await Utils.componentSetError(formComponent, err.message);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h2 className=\"Module-heading\">Problems</h2>\n        {\n          this.state.showAddProblemForm &&\n          <AddProblemForm callback={this.addProblem} />\n        }\n        <form>\n          <div className=\"User-notes-organize\">\n            <label>\n              <b>Organize by</b>\n            </label>\n            <input type=\"checkbox\" name=\"solved\" value=\"solved\"\n                   onChange={this.toggleOrganizeBySolved} />\n            <label htmlFor=\"solved\">Solved</label>\n            <input type=\"checkbox\" name=\"platform\" value=\"platform\"\n                   onChange={this.toggleOrganizeByPlatform} />\n            <label htmlFor=\"platform\">Platform</label>\n            <input type=\"checkbox\" name=\"contest\" value=\"contest\"\n                   onChange={this.toggleOrganizeByContest} />\n            <label htmlFor=\"contest\">Contest</label>\n          </div>\n          <div className=\"User-notes-organize\">\n            <label htmlFor=\"sort\">\n              <b>Sort by</b>\n            </label>\n            <select defaultValue=\"default\" name=\"sort\"\n                    onChange={this.toggleSortByRecent}>\n              <option value=\"default\">Default</option>\n              <option value=\"recent\">Recent</option>\n            </select>\n          </div>\n        </form>\n        <div className=\"User-notes Module-space\">\n          <UserNotesList organizeBySolved={this.state.organizeBySolved}\n                         organizeByPlatform={this.state.organizeByPlatform}\n                         organizeByContest={this.state.organizeByContest}\n                         sortByRecent={this.state.sortByRecent}\n                         notes={this.props.notes} />\n          {\n            this.props.userInfo.email &&\n            <button onClick={this.toggleAddProblemForm}\n                    className=\"User-notes-add Askd-button Askd-button-circular\">\n              +\n            </button>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserNotes;\n","import Api from './Api';\n\nclass UserApi {\n  static async getUserInfo(username) {\n    const options = {\n      username: username\n    };\n\n    return await Api.getJson('profile', options);\n  }\n}\n\nexport default UserApi;\n","const LoadState = Object.freeze({\n  LOADING: 0,\n  DONE: 1,\n  NOT_FOUND: 2\n});\n\nexport default LoadState;\n","import React, { Component } from 'react';\nimport UserInfo from './UserInfo';\nimport UserNotes from './UserNotes';\nimport UserApi from '../Api/UserApi';\nimport NotesApi from '../Api/NotesApi';\nimport LoadState from '../Enum/LoadState';\nimport Utils from '../Utils';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: LoadState.LOADING,\n      userInfo: null,\n      notes: null\n    };\n  }\n\n  async getUserInfo() {\n    const username = this.props.match.params.username;\n    return await UserApi.getUserInfo(username);\n  }\n\n  async getNotes() {\n    const username = this.props.match.params.username;\n    return await NotesApi.getNotes(username);\n  }\n\n  async loadInfo() {\n    try {\n      const userInfo = await this.getUserInfo();\n      const notes = await this.getNotes();\n      await Utils.setStatePromise(this, {\n        screen: LoadState.DONE,\n        userInfo: userInfo,\n        notes: notes\n      });\n    }\n    catch(err) {\n      if(err.name === 'UserNotFound') {\n        await Utils.setStatePromise(this, {\n          screen: LoadState.NOT_FOUND\n        });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadInfo();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.match.params.username !== this.props.match.params.username) {\n      await Utils.setStatePromise(this, {\n        screen: LoadState.LOADING,\n        info: null\n      });\n      await this.loadInfo();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loadingContent = null;\n    const loadedContent = (\n      <>\n        <div className=\"Module-description\">\n          <UserInfo info={this.state.userInfo} />\n        </div>\n        <UserNotes userInfo={this.state.userInfo} notes={this.state.notes}\n                   history={this.props.history} />\n      </>\n    );\n    const userNotFoundContent = (\n      <div className=\"Module-description\">\n        <h2>User not found!</h2>\n      </div>\n    );\n\n    var content;\n    switch(this.state.screen) {\n      case LoadState.LOADING:\n        content = loadingContent;\n        break;\n      case LoadState.DONE:\n        content = loadedContent;\n        break;\n      case LoadState.NOT_FOUND:\n        content = userNotFoundContent;\n        break;\n      default:\n    }\n\n    return (\n      <>\n        <div className=\"Module-wrapper\">\n          { content }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React, { Component } from 'react';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass DeleteMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: ''\n    };\n    this.randomCode = uuidv4();\n\n    this.close = this.close.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async deleteNote(event) {\n    event.preventDefault();\n\n    const confirmCode = event.target.confirmCode.value;\n    if(confirmCode !== this.randomCode) {\n      await Utils.componentSetError(this, \"Your confirmation code doesn't match!\");\n      return;\n    }\n\n    try {\n      const username = await UserAuthApi.getUsername();\n      const platform = this.props.platform;\n      const problemId = this.props.problemInfo.problemId;\n\n      await NotesApi.deleteNote(username, platform, problemId);\n      this.props.history.push(`/users/${username}`);\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">\n          X\n        </button>\n        <div className=\"Edit-note-delete-menu Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Are you sure you want to permanently delete this note?</h2>\n          <p>\n            This action cannot be undone! Please enter the following\n            code as confirmation.\n          </p>\n          <form className=\"Askd-form\" onSubmit={this.deleteNote}>\n            <label htmlFor=\"confirmCode\">{this.randomCode}</label>\n            <input autoComplete=\"off\" type=\"text\" name=\"confirmCode\"\n                   key=\"confirmCode\" id=\"confirmCode\" />\n\n            <input className=\"Askd-button\" type=\"submit\" value=\"Delete\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DeleteMenu;\n","import React, { Component } from 'react';\nimport { Prompt } from 'react-router';\nimport TextEditor from '../TextEditor/TextEditor';\nimport DeleteMenu from './DeleteMenu';\nimport SolvedState from '../Enum/SolvedState';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\n\nfunction remindUserToSave(event) {\n  event.preventDefault();\n  event.returnValue = '';\n}\n\nclass EditNoteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const noteInfo = this.props.noteInfo;\n    this.title = noteInfo.title;\n    this.solved = noteInfo.solved;\n    this.content = JSON.parse(noteInfo.content);\n    this.lastSaved = new Date(noteInfo.editedTime);\n\n    this.state = {\n      published: noteInfo.published,\n      disableEditButtons: false,\n      saved: true,\n      loadingSave: false,\n      loadingPublish: false,\n      showDeleteMenu: false\n    };\n\n    this.saveNote = this.saveNote.bind(this);\n    this.togglePublishNote = this.togglePublishNote.bind(this);\n    this.toggleDeleteMenu = this.toggleDeleteMenu.bind(this);\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleSolvedChange = this.handleSolvedChange.bind(this);\n    this.handleContentChange = this.handleContentChange.bind(this);\n  }\n\n  async saveOrPublishNote(published) {\n    const username = await UserAuthApi.getUsername();\n    const platform = this.props.platform;\n    const problemId = this.props.problemInfo.problemId;\n    const title = this.title;\n    const solved = this.solved;\n    const content = JSON.stringify(this.content);\n\n    await NotesApi.editNote(username, platform, problemId, title, solved,\n                            content, published);\n\n    this.lastSaved = new Date();\n    window.onbeforeunload = null;\n\n    await Utils.setStatePromise(this, {\n      published: published,\n      disableEditButtons: false,\n      saved: true,\n      loadingSave: false,\n      loadingPublish: false\n    });\n  }\n\n  async saveNote(event) {\n    await Utils.setStatePromise(this, {\n      disableEditButtons: true,\n      loadingSave: true\n    });\n\n    await this.saveOrPublishNote(this.state.published);\n  }\n\n  async togglePublishNote(event) {\n    await Utils.setStatePromise(this, {\n      disableEditButtons: true,\n      loadingPublish: true\n    });\n\n    await this.saveOrPublishNote(!this.state.published);\n  }\n\n  async toggleDeleteMenu(event) {\n    await Utils.setStatePromise(this, {\n      showDeleteMenu: !this.state.showDeleteMenu\n    });\n  }\n\n  handleTitleChange(event) {\n    this.title = event.target.value;\n  }\n\n  handleSolvedChange(event) {\n    this.solved = event.target.value;\n  }\n\n  async handleContentChange(newContent) {\n    this.content = newContent;\n\n    if(this.state.saved) {\n      await Utils.setStatePromise(this, {\n        saved: false\n      });\n\n      window.onbeforeunload = remindUserToSave;\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let savedText = this.state.saved ? 'All changes saved! - ' : 'Last saved on ';\n    savedText += this.lastSaved.toLocaleString();\n\n    const togglePublishText = this.state.published ? 'Unpublish' : 'Publish!';\n    let saveButtonClass = 'Askd-button Askd-not-fullwidth';\n    let publishButtonClass = 'Askd-button Askd-not-fullwidth';\n\n    if(this.state.loadingSave) saveButtonClass += ' Askd-form-loading';\n    if(this.state.loadingPublish) publishButtonClass += ' Askd-form-loading';\n\n    return (\n      <>\n        <Prompt when={!this.state.saved}\n                message='Are you sure you want to leave? You have unsaved changes.' />\n        {\n          this.state.showDeleteMenu &&\n          <DeleteMenu exitCallback={this.toggleDeleteMenu}\n                      platform={this.props.platform} history={this.props.history}\n                      problemInfo={this.props.problemInfo} />\n        }\n        <form className=\"Edit-note-form Askd-form\">\n          <input className=\"Edit-note-title\" name=\"title\" type=\"text\"\n                 defaultValue={this.title} placeholder=\"Title\"\n                 onChange={this.handleTitleChange} />\n\n          <select name=\"solved\" id=\"note-solved\" onChange={this.handleSolvedChange}\n                  defaultValue={this.solved}>\n            <option value={SolvedState.SOLVED.value}>Solved</option>\n            <option value={SolvedState.UPSOLVED.value}>Upsolved</option>\n            <option value={SolvedState.UPSOLVED_HELP.value}>Upsolved with help</option>\n            <option value={SolvedState.UNSOLVED.value}>Unsolved</option>\n          </select>\n\n          <TextEditor initialContent={this.content}\n                      onChange={this.handleContentChange} />\n          <p className=\"Edit-note-saved-text\">{savedText}</p>\n          <div className=\"Edit-note-bottom-buttons\">\n            <input className={saveButtonClass} type=\"button\" value=\"Save\"\n                   onClick={this.saveNote}\n                   disabled={this.state.disableEditButtons} />\n\n            <input className={publishButtonClass} type=\"button\"\n                   value={togglePublishText} onClick={this.togglePublishNote}\n                   disabled={this.state.disableEditButtons} />\n          </div>\n          <div className=\"Edit-note-delete\">\n            <button type=\"button\" className=\"Askd-form-link Askd-form-link-bottom\"\n                    onClick={this.toggleDeleteMenu}>\n              Permanently delete this note?\n            </button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default EditNoteForm;\n","import React, { Component } from 'react';\n\nclass ProblemInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    return (\n      <div className=\"Edit-note-problem-info\">\n        <div className=\"Module-info-box\">\n          <h4>\n            {this.props.platform} {info.problemCode} - {info.problemName}\n          </h4>\n          <p className=\"Edit-note-contest\">{info.contestName}</p>\n          <a className=\"Askd-form-link\" href={info.link}>Problem link</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProblemInfo;\n","import React, { Component } from 'react';\nimport LoadState from '../Enum/LoadState';\nimport EditNoteForm from './EditNoteForm';\nimport ProblemInfo from './ProblemInfo';\nimport ProblemsApi from '../Api/ProblemsApi'\nimport NotesApi from '../Api/NotesApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport Utils from '../Utils';\nimport '../css/EditNote.css';\n\nclass EditNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: LoadState.LOADING,\n      problemInfo: null,\n      noteInfo: null\n    };\n  }\n\n  async loadProblemInfo() {\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    let problemInfo = await ProblemsApi.getProblemInfo(platform, problemId);\n    problemInfo.problemId = problemId;\n\n    return problemInfo;\n  }\n\n  async loadNoteInfo() {\n    const username = await UserAuthApi.getUsername();\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    const noteInfo = await NotesApi.getNoteInfo(username, platform, problemId);\n\n    return noteInfo;\n  }\n\n  async loadInfo() {\n    const problemInfo = await this.loadProblemInfo();\n    const noteInfo = await this.loadNoteInfo();\n    \n    await Utils.setStatePromise(this, {\n      problemInfo: problemInfo,\n      noteInfo: noteInfo,\n      screen: LoadState.DONE\n    });\n  }\n\n  async componentDidMount() {\n    await this.loadInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const platform = this.props.match.params.platform;\n\n    const loadingContent = null;\n    const loadedContent = (\n      <>\n        <ProblemInfo info={this.state.problemInfo} platform={platform} />\n        <EditNoteForm problemInfo={this.state.problemInfo}\n                      noteInfo={this.state.noteInfo} platform={platform}\n                      history={this.props.history} />\n      </>\n    );\n    const noteNotFoundContent = (\n      <div className=\"Module-description\">\n        <h2>Note does not exist!</h2>\n      </div>\n    );\n\n    let content;\n    switch(this.state.screen) {\n      case LoadState.LOADING:\n        content = loadingContent;\n        break;\n      case LoadState.DONE:\n        content = loadedContent;\n        break;\n      case LoadState.NOT_FOUND:\n        content = noteNotFoundContent;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-wrapper\">\n        { content }\n      </div>\n    );\n  }\n}\n\nexport default EditNote;\n","import Api from './Api';\n\nclass LikesApi {\n  static async sendLike(username, noteAuthor, platform, problemId, likedStatus) {\n    const options = {\n      username: username,\n      noteAuthor: noteAuthor,\n      platform: platform,\n      problemId: problemId,\n      likedStatus: likedStatus\n    };\n\n    return await Api.putJson('likes/notes', options);\n  }\n}\n\nexport default LikesApi;\n","import React, { useState } from 'react';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/LikeDislike.css';\n\nfunction LikeDislike({ initialScore, initialStatus, likeCallback }) {\n  let [ score, setScore ] = useState(initialScore);\n  let [ status, setStatus ] = useState(initialStatus);\n\n  let likeButtonClass = 'Like-button';\n  if(status > 0) {\n    likeButtonClass += ' Like-button-liked';\n  }\n\n  let toggleStatus = async () => {\n    const username = await UserAuthApi.getUsername();\n    if(!username) {\n      window.suggestUserRegister();\n      return;\n    }\n\n    if(status > 0) {\n      setStatus(0);\n      setScore(score - 1);\n      likeCallback(0);\n    }\n    else {\n      setStatus(1);\n      setScore(score + 1);\n      likeCallback(1);\n    }\n  };\n\n  return (\n    <div className=\"Like-dislike\">\n      <button className={likeButtonClass} onClick={toggleStatus}>\n        <span className=\"Like-dislike-score\">+{score}</span> I like this!\n      </button>\n    </div>\n  );\n}\n\nexport default LikeDislike;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport LikesApi from '../Api/LikesApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport TextEditorContent from '../TextEditor/TextEditorContent';\nimport LikeDislike from '../Misc/LikeDislike';\nimport '../css/PublicNoteInfo.css';\n\nfunction PublicNoteInfo({ info }) {\n  const content = JSON.parse(info.content);\n  const editedTimestamp = (new Date(info.editedTime)).toLocaleString();\n  const solvedClass = ProblemsApi.getSolvedStateCssClass(info.solved);\n\n  let likeCallback = async (likedStatus) => {\n    const username = await UserAuthApi.getUsername();\n    const noteAuthor = info.username;\n    const platform = info.platform;\n    const problemId = info.problemSk;\n\n    await LikesApi.sendLike(username, noteAuthor, platform, problemId, likedStatus);\n  };\n\n  return (\n    <div className=\"Public-note-info Module-space Module-padding-box\">\n      <h3 className=\"Module-space-heading\">\n        <span className={`Public-note-solved-tag User-note-info-${solvedClass}`}>\n          <span className=\"User-note-info-tag User-note-solved-indicator\" />\n        </span>\n        {info.title}\n      </h3>\n      <p className=\"Module-space-text\">\n        Written by <Link className=\"Askd-form-link\" to={`/users/${info.username}`}>\n          {info.username}\n        </Link>\n      </p>\n      <div className=\"Askd-text-editor\">\n        <TextEditorContent content={content} id='Askd-public-note' editable={false} />\n      </div>\n      <p className=\"Module-space-text\">\n        Last edited on {editedTimestamp}\n      </p>\n      <LikeDislike initialScore={info.likeCount} initialStatus={info.likedStatus}\n                   likeCallback={likeCallback} />\n    </div>\n  );\n}\n\nexport default PublicNoteInfo;\n","import React, { Component } from 'react';\nimport LoadState from '../Enum/LoadState';\nimport ProblemInfo from '../EditNote/ProblemInfo';\nimport PublicNoteInfo from './PublicNoteInfo';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\n\nclass PublicNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: LoadState.LOADING,\n      problemInfo: null,\n      noteInfo: null\n    };\n  }\n\n  async loadProblemInfo() {\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    let problemInfo = await ProblemsApi.getProblemInfo(platform, problemId);\n    problemInfo.problemId = problemId;\n\n    return problemInfo;\n  }\n\n  async loadNoteInfo() {\n    const ownerUsername = this.props.match.params.ownerUsername;\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    const noteInfo = await NotesApi.getNoteInfo(ownerUsername, platform, problemId, true);\n    return noteInfo;\n  }\n\n  async loadInfo() {\n    const problemInfo = await this.loadProblemInfo();\n    const noteInfo = await this.loadNoteInfo();\n\n    await Utils.setStatePromise(this, {\n      problemInfo: problemInfo,\n      noteInfo: noteInfo,\n      screen: LoadState.DONE\n    });\n  }\n\n  async componentDidMount() {\n    await this.loadInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const platform = this.props.match.params.platform;\n\n    const loadingContent = null;\n    const loadedContent = (\n      <>\n        <ProblemInfo info={this.state.problemInfo} platform={platform} />\n        <PublicNoteInfo info={this.state.noteInfo} />\n      </>\n    );\n    const noteNotFoundContent = (\n      <div className=\"Module-description\">\n        <h2>Note is either unpublished or does not exist!</h2>\n      </div>\n    );\n\n    let content;\n    switch(this.state.screen) {\n      case LoadState.LOADING:\n        content = loadingContent;\n        break;\n      case LoadState.DONE:\n        content = loadedContent;\n        break;\n      case LoadState.NOT_FOUND:\n        content = noteNotFoundContent;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-wrapper\">\n        { content }\n      </div>\n    );\n  }\n}\n\nexport default PublicNote;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './Header/Header';\nimport Home from './Home/Home';\nimport UserProfile from './UserProfile/UserProfile';\nimport EditNote from './EditNote/EditNote';\nimport PublicNote from './PublicNote/PublicNote';\n\nimport './css/App.css';\nimport './css/Module.css';\nimport './css/Form.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/users/:username\" component={UserProfile} />\n          <Route exact path=\"/notes/edit/:platform/:contestId/:problemCode\"\n                 component={EditNote} />\n          <Route exact path=\"/notes/:ownerUsername/:platform/:contestId/:problemCode\"\n                 component={PublicNote} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Amplify from 'aws-amplify';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport amplify_config from './amplify_config';\n\nAmplify.configure(amplify_config);\n\ndocument.body.addEventListener('mousedown', (event) => {\n  document.body.classList.add('Global-mouse-click');\n});\n\ndocument.body.addEventListener('keydown', (event) => {\n  if(event.keyCode === 9) {\n    document.body.classList.remove('Global-mouse-click');\n  }\n});\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}