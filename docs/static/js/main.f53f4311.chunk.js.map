{"version":3,"sources":["Utils.js","Header/HeaderUtils.js","Api/UserAuthApi.js","Header/HeaderState.js","Header/RegisterForm.js","Header/LoginForm.js","Header/UserMenu.js","Header/HeaderAuth.js","Header/Header.js","TextEditor/Caret.js","TextEditor/ContentType.js","TextEditor/Toolbar.js","TextEditor/VirtualTextEditor.js","TextEditor/Block.js","TextEditor/registerEventHandlers.js","TextEditor/TextEditor.js","Home/CpNotes.js","Home/Home.js","UserProfile/UserInfo.js","SearchSelect/SearchSelect.js","Api/ApiConstants.js","Api/Api.js","Api/ProblemsApi.js","UserProfile/AddProblemForm.js","Api/NotesApi.js","UserProfile/UserProblems.js","Api/UserApi.js","UserProfile/UserInfoState.js","UserProfile/UserProfile.js","EditNote/EditNoteState.js","EditNote/DeleteMenu.js","EditNote/SolvedState.js","EditNote/EditNoteForm.js","EditNote/ProblemInfo.js","EditNote/EditNote.js","App.js","serviceWorker.js","index.js"],"names":["Utils","component","stateObject","Promise","resolve","reject","mounted","setState","object","property","hasOwnProperty","message","setError","setStatePromise","error","setSuccess","success","window","MathJax","typesetPromise","HeaderUtils","password","confirmPassword","componentSetError","length","UserAuthApi","Auth","currentAuthenticatedUser","username","email","signUp","attributes","info","codeDeliveryDetails","Destination","code","confirmSignUp","resendSignUp","CodeDeliveryDetails","forgotPassword","forgotPasswordSubmit","signIn","signOut","profile","getProfile","currentSession","getSignInUserSession","accessToken","getAccessToken","getJwtToken","HeaderState","Object","freeze","LOGIN","RECOVERY_USERNAME","RECOVERY_PASSWORD","RECOVERY_SUCCESS","REGISTER","REGISTER_VERIFY","REGISTER_SUCCESS","ERROR_TRIGGER_PREFIX","RegisterForm","props","screen","unverifiedAccountUsername","state","destination","unverifiedAccountDestination","close","bind","register","verifyEmail","resendVerificationEmail","this","exitCallback","startsWith","substring","event","preventDefault","form","target","value","checkPasswords","componentSetSuccess","currentForm","createAccountForm","className","onSubmit","htmlFor","autoComplete","type","name","id","verifyEmailForm","key","onClick","emailVerifiedBox","Component","LoginForm","login","enablePasswordRecovery","resetPassword","emailVerificationCallback","componentsSetError","loginForm","recoveryUsernameForm","recoveryPasswordForm","recoveryPasswordSuccess","UserMenu","logout","logoutCallback","closeCallback","to","HeaderAuth","showRegisterForm","showLoginForm","showUserMenu","refreshUsername","toggleRegisterForm","toggleLoginForm","toggleUserMenu","hideUserMenu","afterLogin","unverifiedAccount","getUsername","focusedElement","relatedTarget","classList","contains","loggedIn","loginButtons","loggedInButton","tabIndex","onBlur","topRightButtons","Header","path","useLocation","pathname","small","outerClassName","Caret","a","b","c","d","selection","getSelection","anchorElement","anchorNode","parentElement","focusElement","focusNode","anchorIndex","Number","getAttribute","focusIndex","anchorOffset","focusOffset","rangeSelect","index","position","leftIndex","leftPosition","rightIndex","rightPosition","blockElement","document","getElementById","textNode","childNodes","createTextNode","appendChild","range","createRange","setStart","collapse","removeAllRanges","addRange","leftBlockElement","rightBlockElement","leftTextNode","rightTextNode","setEnd","ContentType","BOLD","ITALIC","UNDERLINE","Toolbar","mask","updatingMask","updateMask","bit","callback","boldSelected","italicSelected","underlineSelected","countCharacters","str","counter","character","VirtualTextEditor","initialContent","characters","globalCaretPosition","block","m","char","push","splice","updateBlocks","globalIndex","charactersScanned","i","blocks","blockLength","blockEndIndex","j","blockStarts","characterCounter","getGlobalIndex","insertedString","rightBuffer","getIndexAndPosition","globalLeftIndex","deleteLength","on","globalRightIndex","newLeftIndex","newLeftPosition","currentMask","buffer","bufferLength","forEach","String","fromCharCode","getClassName","style","Block","editorId","suppressContentEditableWarning","registerEventHandlers","that","textEditor","addEventListener","composing","delete","insert","isComposing","inputType","caretInfo","dataTransfer","getData","data","pasteText","clipboardData","compositionIndex","compositionPosition","nextBlockElement","setAttribute","compositionInsert","selectionChanged","TextEditor","uniqueKey","virtualTextEditor","caret","contentChanged","content","getContent","editorMask","toolbarUpdate","updateText","newString","updateCaretInfo","rangeMaskUpdate","newMask","focus","newCaretInfo","getInfo","leftCharacterMask","getCharacterMask","junkNodes","node","nodeType","Node","TEXT_NODE","nodeName","removeChild","childElement","children","innerHTML","nodeValue","setRangePosition","setPosition","onChange","contentElements","contentEditable","spellCheck","CpNotes","renderMathJax","Home","UserInfo","SearchSelect","loading","searchTerm","previousValidSearchTerm","showOptions","options","filteredOptions","handleChange","handleBlur","handleFocus","handleOptionSelect","option","optionStringArray","keys","join","toLowerCase","getOptionString","includes","prevProps","staticKey","search","filterOptions","sortKey","optionString","optionElements","displayString","displayKey","onFocus","disabled","ApiConstants","API_ENDPOINT","Api","err","Error","response","status","json","responseJson","createApiError","resource","method","fetch","body","JSON","stringify","headers","Authorization","manageResponseError","queryString","sendRequestBody","ProblemsApi","problems","prettySk","sk","replaceAll","platform","getJson","contestId","_prettifyProblems","problemId","AddProblemForm","contestSortKey","problemSortKey","skipContestSearch","handlePlatformChange","toggleSkipContestSearch","updateProblemSortKey","updateContestSortKey","addProblem","searchContestFunction","searchContestKey","getContests","searchProblemFunction","searchProblemKey","getProblems","skipButtonText","defaultValue","NotesApi","postJson","title","solved","published","putJson","deleteJson","UserProblems","showAddProblemForm","toggleAddProblemForm","formComponent","addNote","problemUrl","replace","history","UserApi","UserProfileState","LOADING","DONE","NOT_FOUND","UserProfile","UserInfoState","match","params","getUserInfo","loadUserInfo","loadedContent","userNotFoundContent","EditNoteState","DeleteMenu","randomCode","uuidv4","deleteNote","confirmCode","problemInfo","SolvedState","SOLVED","UPSOLVED","UPSOLVED_HELP","UNSOLVED","EditNoteForm","noteInfo","problemName","parse","disableEditButtons","loadingSave","loadingPublish","showDeleteMenu","saveNote","togglePublishNote","toggleDeleteMenu","handleTitleChange","handleSolvedChange","handleContentChange","editNote","saveOrPublishNote","newContent","togglePublishText","saveButtonClass","publishButtonClass","placeholder","ProblemInfo","problemCode","contestName","href","link","EditNote","getProblemInfo","getNoteInfo","loadProblemInfo","loadNoteInfo","loadInfo","App","exact","Boolean","location","hostname","Amplify","configure","amplify_config","add","keyCode","remove","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.f53f4311.chunk.js","sourcesContent":["class Utils {\n  static async setStatePromise(component, stateObject) {\n    return new Promise((resolve, reject) => {\n      if(component.mounted !== false) {\n        component.setState(stateObject, () => {\n          resolve();\n        });\n      }\n      resolve();\n    });\n  }\n\n  static isEmpty(object) {\n    for(const property in object) {\n      if(object.hasOwnProperty(property))\n        return false;\n    }\n    return true;\n  }\n\n  static async componentSetError(component, message) {\n    if(component.setError) {\n      await component.setError(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: `Error: ${message}`\n      });\n    }\n  }\n\n  static async componentSetSuccess(component, message) {\n    if(component.setSuccess) {\n      await component.setSuccess(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: '',\n        success: message\n      });\n    }\n  }\n\n  static async renderMathJax() {\n    if(window.MathJax) {\n      await window.MathJax.typesetPromise();\n    }\n  }\n}\n\nexport default Utils;\n","import Utils from '../Utils';\n\nconst MIN_PASSWORD_LENGTH = 6;\n\nclass HeaderUtils {\n  static async checkPasswords(component, password, confirmPassword) {\n    if(password !== confirmPassword) {\n      await Utils.componentSetError(component, \"Your passwords don't match!\");\n      return false;\n    }\n\n    if(password.length < MIN_PASSWORD_LENGTH) {\n      await Utils.componentSetError(component, 'Your password is too short!');\n      return false;\n    }\n\n    return true;\n  }\n}\n\nexport default HeaderUtils;\n","import { Auth } from 'aws-amplify';\n\nclass UserAuthApi {\n  static async getProfile() {\n    try {\n      return await Auth.currentAuthenticatedUser();\n    }\n    catch(err) {\n      // currentAuthenticatedUser() throws this error if the user is not logged in\n      return null;\n    }\n  }\n\n  static async register(username, email, password) {\n    const info = await Auth.signUp({\n      username,\n      password,\n      attributes: {\n        email: email\n      }\n    });\n\n    // I like how Amplify makes this one inconsistently lowercase... lol\n    return info.codeDeliveryDetails.Destination;\n  }\n\n  static async verifyEmail(username, code) {\n    await Auth.confirmSignUp(username, code);\n  }\n\n  static async resendVerificationEmail(username) {\n    const info = await Auth.resendSignUp(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async forgotPassword(username) {\n    const info = await Auth.forgotPassword(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async resetPassword(username, code, password) {\n    await Auth.forgotPasswordSubmit(username, code, password);\n  }\n\n  static async login(username, password) {\n    await Auth.signIn(username, password);\n  }\n\n  static async logout() {\n    await Auth.signOut();\n    UserAuthApi.profile = null;\n  }\n\n  static async getUsername() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    return profile.username;\n  }\n\n  static async getAccessToken() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    const currentSession = profile.getSignInUserSession();\n    const accessToken = currentSession.getAccessToken();\n    return accessToken.getJwtToken();\n  }\n}\n\nexport default UserAuthApi;\n","const HeaderState = Object.freeze({\n  LOGIN: 0,\n  RECOVERY_USERNAME: 1,\n  RECOVERY_PASSWORD: 2,\n  RECOVERY_SUCCESS: 3,\n  REGISTER: 4,\n  REGISTER_VERIFY: 5,\n  REGISTER_SUCCESS: 6\n});\n\nexport default HeaderState;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\nimport '../css/RegisterForm.css';\n\nconst USERNAME_MIN_LENGTH = 3;\nconst USERNAME_MAX_LENGTH = 20;\nconst ERROR_TRIGGER_PREFIX = 'PreSignUp failed with error';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const screen = props.unverifiedAccountUsername ?\n                   HeaderState.REGISTER_VERIFY : HeaderState.REGISTER;\n    this.state = {\n      error: '',\n      success: '',\n      username: props.unverifiedAccountUsername,\n      destination: props.unverifiedAccountDestination,\n      screen: screen\n    };\n\n    this.close = this.close.bind(this);\n    this.register = this.register.bind(this);\n    this.verifyEmail = this.verifyEmail.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async setError(message) {\n    if(message.startsWith(ERROR_TRIGGER_PREFIX)) {\n      message = message.substring(\n        ERROR_TRIGGER_PREFIX.length, message.length - 1\n      );\n    }\n\n    await Utils.setStatePromise(this, {\n      error: `Error: ${message}`,\n      success: ''\n    });\n  }\n\n  async register(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const email = form.email.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!username || !email || !password || !confirmPassword) {\n      await this.setError('Please fill out all of the fields.')\n      return;\n    }\n\n    if(username.length < USERNAME_MIN_LENGTH || username.length > USERNAME_MAX_LENGTH) {\n      await this.setError(\n        `Your username must be between ${USERNAME_MIN_LENGTH} ` +\n        `and ${USERNAME_MAX_LENGTH} characters!`\n      );\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      const destination = await UserAuthApi.register(username, email, password);\n      Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.REGISTER_VERIFY\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async verifyEmail(event) {\n    event.preventDefault();\n\n    const code = event.target.code.value;\n    try {\n      await UserAuthApi.verifyEmail(this.state.username, code);\n      Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.REGISTER_SUCCESS\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.resendVerificationEmail(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const createAccountForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Create an account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.register}>\n          <label htmlFor=\"register-username\">Username</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 id=\"register-username\" />\n\n          <label htmlFor=\"register-email\">Email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"email\"\n                 id=\"register-email\" />\n\n          <label htmlFor=\"register-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 id=\"register-password\" />\n\n          <label htmlFor=\"register-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 id=\"register-confirm-password\" />\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Register\" />\n        </form>\n      </div>\n    );\n\n    const verifyEmailForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Verify your email!</h2>\n        <p>\n          You should've received an email at {this.state.destination} with a\n          verification code. If it isn't convenient for you to verify your\n          account now, you may do so later by logging in.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.verifyEmail}>\n          <label htmlFor=\"verification-code\">Verification code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"verification-code\" id=\"verification-code\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const emailVerifiedBox = (\n      <div className=\"Register-form Module-popup\">\n        <h2>Verification success!</h2>\n        <p className=\"Module-popup-last\">\n          Your email was successfully verified! Click the 'X' button in the\n          top-right corner to return to the site, and you'll be able to login.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.REGISTER:\n        currentForm = createAccountForm;\n        break;\n      case HeaderState.REGISTER_VERIFY:\n        currentForm = verifyEmailForm;\n        break;\n      case HeaderState.REGISTER_SUCCESS:\n        currentForm = emailVerifiedBox;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      username: null,\n      destination: null,\n      screen: props.screen || HeaderState.LOGIN\n    }\n\n    this.close = this.close.bind(this);\n    this.login = this.login.bind(this);\n    this.enablePasswordRecovery = this.enablePasswordRecovery.bind(this);\n    this.forgotPassword = this.forgotPassword.bind(this);\n    this.resetPassword = this.resetPassword.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback(false);\n  }\n\n  async login(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const password = form.password.value;\n\n    if(!username || !password) {\n      await Utils.componentSetError(this, \"Please fill out all of the fields.\");\n      return;\n    }\n\n    try {\n      try {\n        await UserAuthApi.login(username, password);\n        this.props.exitCallback(true);\n      }\n      catch(err) {\n        if(err.code === 'UserNotConfirmedException') {\n          const destination = await UserAuthApi.resendVerificationEmail(username);\n          await this.props.emailVerificationCallback(username, destination);\n        }\n        else {\n          throw err;\n        }\n      }\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async enablePasswordRecovery(event) {\n    await Utils.setStatePromise(this, {\n      error: '',\n      screen: HeaderState.RECOVERY_USERNAME\n    });\n  }\n\n  async forgotPassword(event) {\n    event.preventDefault();\n\n    const username = event.target.username.value;\n    if(!username) {\n      await Utils.componentsSetError(this, 'Please input your username.');\n      return;\n    }\n\n    try {\n      const destination = await UserAuthApi.forgotPassword(username);\n      await Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.RECOVERY_PASSWORD\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async resetPassword(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const code = form.code.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!code || !password || !confirmPassword) {\n      Utils.componentSetError(this, 'Please fill out all of the fields.');\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      await UserAuthApi.resetPassword(this.state.username, code, password);\n      await Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.RECOVERY_SUCCESS\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.forgotPassword(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loginForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Login to your account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.login}>\n          <label htmlFor=\"login-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"login-username\" id=\"login-username\" />\n\n          <label htmlFor=\"login-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"login-password\" id=\"login-password\" />\n\n          <button type=\"button\" onClick={this.enablePasswordRecovery}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Forgot your password?\n          </button>\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    );\n\n    const recoveryUsernameForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          Please provide your username or email, so that you can reset your\n          password via an emailed confirmation code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.forgotPassword}>\n          <label htmlFor=\"reset-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"reset-username\" id=\"reset-username\" />\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          You should've received an email at { this.state.destination } with a\n          verification code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.resetPassword}>\n          <label htmlFor=\"reset-code\">Code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"reset-code\" id=\"reset-code\" />\n\n          <label htmlFor=\"reset-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"reset-password\" id=\"reset-password\" />\n\n          <label htmlFor=\"reset-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 key=\"reset-confirm-password\" id=\"reset-confirm-password\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordSuccess= (\n      <div className=\"Register-form Module-popup\">\n        <h2>Password reset success!</h2>\n        <p>\n          Your password has been reset successfully. You'll now be able to\n          login again.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.LOGIN:\n        currentForm = loginForm;\n        break;\n      case HeaderState.RECOVERY_USERNAME:\n        currentForm = recoveryUsernameForm;\n        break;\n      case HeaderState.RECOVERY_PASSWORD:\n        currentForm = recoveryPasswordForm;\n        break;\n      case HeaderState.RECOVERY_SUCCESS:\n        currentForm = recoveryPasswordSuccess;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/UserMenu.css'\n\nclass UserMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = this.logout.bind(this);\n  }\n\n  async logout() {\n    await UserAuthApi.logout();\n    await this.props.logoutCallback();\n  }\n\n  render() {\n    return (\n      <div className=\"User-menu\">\n        <ol>\n          <li>\n            <Link className=\"Header-menu-button\" onClick={this.props.closeCallback}\n                  to={`/users/${this.props.username}`}>\n                  Your profile\n            </Link>\n          </li>\n          <div className=\"User-menu-divider\"></div>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\">\n              Settings\n            </button>\n          </li>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\" onClick={this.logout}>\n              Logout\n            </button>\n          </li>\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default UserMenu;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport UserMenu from './UserMenu';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nclass HeaderAuth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      showRegisterForm: false,\n      showLoginForm: false,\n      showUserMenu: false,\n      unverifiedAccountUsername: null,\n      unverifiedAccountDestination: null\n    };\n\n    this.refreshUsername = this.refreshUsername.bind(this);\n    this.toggleRegisterForm = this.toggleRegisterForm.bind(this);\n    this.toggleLoginForm = this.toggleLoginForm.bind(this);\n    this.toggleUserMenu = this.toggleUserMenu.bind(this);\n    this.hideUserMenu = this.hideUserMenu.bind(this);\n    this.afterLogin = this.afterLogin.bind(this);\n    this.unverifiedAccount = this.unverifiedAccount.bind(this);\n  }\n\n  async refreshUsername() {\n    const username = await UserAuthApi.getUsername();\n\n    await Utils.setStatePromise(this, {\n      username: username,\n      showUserMenu: false,\n      unverifiedAccountUsername: null\n    });\n  }\n\n  async componentDidMount() {\n    await this.refreshUsername();\n  }\n\n  async toggleRegisterForm(event) {\n    if(this.state.showRegisterForm) {\n      await Utils.setStatePromise(this, {\n        unverifiedAccountUsername: null,\n        unverifiedAccountDestination: null\n      });\n    }\n\n    await Utils.setStatePromise(this, {\n      showRegisterForm: !this.state.showRegisterForm\n    });\n  }\n\n  async toggleLoginForm(event) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: !this.state.showLoginForm\n    });\n  }\n\n  async toggleUserMenu(event) {\n    await Utils.setStatePromise(this, {\n      showUserMenu: !this.state.showUserMenu\n    });\n  }\n\n  async hideUserMenu(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.classList.contains('Header-menu-button'))\n      return;\n\n    await Utils.setStatePromise(this, {\n      showUserMenu: false\n    });\n  }\n\n  async afterLogin(loggedIn) {\n    await this.toggleLoginForm();\n\n    if(loggedIn)\n      await this.refreshUsername();\n  }\n\n  async unverifiedAccount(username, destination) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: false,\n      showRegisterForm: true,\n      unverifiedAccountUsername: username,\n      unverifiedAccountDestination: destination\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loginButtons = (\n      <div className=\"Header-top-right\">\n        <button className=\"Header-menu-button\" onClick={this.toggleLoginForm}>\n          Login\n        </button>\n        <span className=\"Header-divider\"></span>\n        <button className=\"Header-menu-button\" onClick={this.toggleRegisterForm}>\n          Create an account\n        </button>\n      </div>\n    );\n\n    const loggedInButton = (\n      <div className=\"Header-logged-in\" tabIndex=\"-1\"\n           onBlur={this.hideUserMenu}>\n        <div className=\"Header-top-right\">\n          <button className=\"Header-menu-button\" onClick={this.toggleUserMenu}>\n            { this.state.username }\n          </button>\n        </div>\n        <div className=\"Header-user-menu\">\n          {\n            this.state.showUserMenu &&\n            <UserMenu username={this.state.username}\n                      closeCallback={this.toggleUserMenu}\n                      logoutCallback={this.refreshUsername} />\n          }\n        </div>\n      </div>\n    );\n\n    const topRightButtons = this.state.username ? loggedInButton : loginButtons;\n\n    return (\n      <>\n        {\n          this.state.showRegisterForm &&\n          <RegisterForm exitCallback={this.toggleRegisterForm}\n                        unverifiedAccountUsername=\n                        {this.state.unverifiedAccountUsername}\n                        unverifiedAccountDestination=\n                        {this.state.unverifiedAccountDestination} />\n        }\n        {\n          this.state.showLoginForm &&\n          <LoginForm exitCallback={this.afterLogin}\n                     emailVerificationCallback={this.unverifiedAccount} />\n        }\n        { topRightButtons }\n      </>\n    );\n  }\n}\n\nexport default HeaderAuth;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport HeaderAuth from './HeaderAuth';\nimport '../css/Header.css';\n\nfunction Header() {\n  const path = useLocation().pathname;\n  const small = (path === '/' || path === '/home');\n  const outerClassName = small ? 'Header' : 'Header-small';\n\n  return (\n    <div className={outerClassName}>\n      { small && <h1>cp-notes beta</h1> }\n      <ul>\n        <li>\n          <Link to=\"/home\">Home</Link>\n        </li>\n      </ul>\n      <HeaderAuth />\n      <span className=\"Header-bottom\"></span>\n    </div>\n  );\n}\n\nexport default Header;\n","function lessThan(a, b, c, d) {\n  if(a === c)\n    return b < d;\n  return a < c;\n}\n\nclass Caret {\n  constructor(id) {\n    this.id = id;\n  }\n\n  getInfo() {\n    const selection = window.getSelection();\n    const anchorElement = selection.anchorNode.parentElement;\n    const focusElement = selection.focusNode.parentElement;\n\n    let anchorIndex = Number(anchorElement.getAttribute('index'));\n    let focusIndex = Number(focusElement.getAttribute('index'));\n    let anchorOffset = selection.anchorOffset;\n    let focusOffset = selection.focusOffset;\n\n    if(anchorIndex === focusIndex && anchorOffset === focusOffset) {\n      return {\n        rangeSelect: false,\n        index: anchorIndex,\n        position: anchorOffset\n      };\n    }\n\n    if(!lessThan(anchorIndex, anchorOffset, focusIndex, focusOffset)) {\n      [ anchorIndex, focusIndex ] = [ focusIndex, anchorIndex ];\n      [ anchorOffset, focusOffset ] = [ focusOffset, anchorOffset ];\n    }\n\n    return {\n      rangeSelect: true,\n      leftIndex: anchorIndex,\n      leftPosition: anchorOffset,\n      rightIndex: focusIndex,\n      rightPosition: focusOffset\n    };\n  }\n\n  setPosition(index, position) {\n    const blockElement = document.getElementById(this.id + index);\n    let textNode = blockElement.childNodes[0];\n\n    if(!textNode) {\n      textNode = document.createTextNode('');\n      blockElement.appendChild(textNode);\n    }\n\n    let range = document.createRange();\n    range.setStart(textNode, position);\n    range.collapse(true);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  setRangePosition(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const leftBlockElement = document.getElementById(this.id + leftIndex);\n    const rightBlockElement = document.getElementById(this.id + rightIndex);\n    const leftTextNode = leftBlockElement.childNodes[0];\n    const rightTextNode = rightBlockElement.childNodes[0];\n\n    let range = document.createRange();\n    range.setStart(leftTextNode, leftPosition);\n    range.setEnd(rightTextNode, rightPosition);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport default Caret;\n","const ContentType = Object.freeze({\n  BOLD: (1 << 1),\n  ITALIC: (1 << 2),\n  UNDERLINE: (1 << 3)\n});\n\nexport default ContentType;\n","import React, { Component } from 'react';\nimport ContentType from './ContentType';\nimport Utils from '../Utils';\n\nclass Toolbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mask: 0\n    };\n\n    this.updatingMask = false;\n    this.updateMask = this.updateMask.bind(this);\n  }\n\n  async updateMask(bit) {\n    this.updatingMask = true;\n\n    await Utils.setStatePromise(this, {\n      mask : this.state.mask ^ bit\n    });\n\n    this.props.callback(bit, (this.state.mask & bit) > 0);\n  }\n\n  async componentDidUpdate() {\n    if(this.updatingMask) {\n      this.updatingMask = false;\n      return;\n    }\n\n    if(this.props.mask !== this.state.mask) {\n      await Utils.setStatePromise(this, {\n        mask: this.props.mask\n      });\n    }\n  }\n\n  render() {\n    const boldSelected = (this.state.mask & ContentType.BOLD) > 0;\n    const italicSelected = (this.state.mask & ContentType.ITALIC) > 0;\n    const underlineSelected = (this.state.mask & ContentType.UNDERLINE) > 0;\n\n    return (\n      <div className=\"Askd-text-editor-toolbar\">\n        <ul>\n          <li className={`Askd-tb-selected-${boldSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-BOLD\"\n                    onClick={() => this.updateMask(ContentType.BOLD)} />\n          </li>\n          <li className={`Askd-tb-selected-${italicSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-ITALIC\"\n                    onClick={() => this.updateMask(ContentType.ITALIC)} />\n          </li>\n          <li className={`Askd-tb-selected-${underlineSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-UNDERLINE\"\n                    onClick={() => this.updateMask(ContentType.UNDERLINE)} />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","// This is different from str.length; for example emojis use up 2\nfunction countCharacters(str) {\n  let counter = 0;\n  for(const character of str) {\n    Number(character);  // Silence unused variable warning\n    counter++;\n  }\n  return counter;\n}\n\nclass VirtualTextEditor {\n  constructor(initialContent) {\n    this.characters = [];\n    this.globalCaretPosition = 0;\n\n    if(initialContent) {\n      for(const block of initialContent) {\n        const mask = block.m;\n        for(const char of block.c) {\n          this.characters.push({\n            m: mask,\n            c: char\n          });\n        }\n      }\n\n      /* Remove extra newline character */\n      this.characters.splice(this.characters.length - 1);\n    }\n\n    this.updateBlocks();\n  }\n\n  getIndexAndPosition(globalIndex) {\n    let charactersScanned = 0;\n    for(let i = 0; i < this.blocks.length; i++) {\n      const block = this.blocks[i];\n      const blockLength = countCharacters(block.c);\n      const blockEndIndex = charactersScanned + blockLength;\n\n      if(globalIndex <= blockEndIndex) {\n        let position = 0;\n        for(let j = charactersScanned; j <= blockEndIndex; j++) {\n          if(globalIndex === j) {\n            return [ i, position ];\n          }\n          position += this.characters[j].c.length;\n        }\n      }\n      charactersScanned += blockLength;\n    }\n\n    return [ null, null ];\n  }\n\n  getGlobalIndex(index, position) {\n    let globalIndex = this.blockStarts[index];\n    let characterCounter = 0;\n    while(characterCounter < position) {\n      characterCounter += this.characters[globalIndex].c.length;\n      globalIndex++;\n    }\n\n    if(characterCounter === position)\n      return globalIndex;\n\n    return globalIndex - 1;\n  }\n\n  getCharacterMask(index, position, rangeSelect) {\n    const globalIndex = this.getGlobalIndex(index, position);\n\n    if(globalIndex === 0) {\n      return this.characters[0].m;\n    }\n    else if(rangeSelect) {\n      return this.characters[globalIndex].m;\n    }\n    return this.characters[globalIndex - 1].m;\n  }\n\n  insert(index, position, insertedString, mask) {\n    const globalIndex = this.getGlobalIndex(index, position);\n    const rightBuffer = this.characters.splice(globalIndex);\n\n    for(const char of insertedString) {\n      this.characters.push({\n        m: mask,\n        c: char\n      });\n    }\n\n    const globalCaretPosition = this.characters.length;\n    for(const character of rightBuffer) {\n      this.characters.push(character);\n    }\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  delete(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n    const deleteLength = globalRightIndex - globalLeftIndex;\n\n    if(globalLeftIndex < 0) {\n      return [ 0, 0 ];\n    }\n\n    this.characters.splice(globalLeftIndex, deleteLength);\n    const globalCaretPosition = globalLeftIndex;\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  rangeMaskUpdate(leftIndex, leftPosition, rightIndex, rightPosition, bit, on) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n\n    for(let i = globalLeftIndex; i < globalRightIndex; i++) {\n      if((on && !(this.characters[i].m & bit)) ||\n         (!on && (this.characters[i].m & bit))) {\n        this.characters[i].m = this.characters[i].m ^ bit;\n      }\n    }\n\n    this.updateBlocks();\n\n    const [ newLeftIndex, newLeftPosition ] = this.getIndexAndPosition(globalLeftIndex);\n    const [ newRightIndex, newRightPosition ] = this.getIndexAndPosition(globalRightIndex);\n    return [ newLeftIndex, newLeftPosition, newRightIndex, newRightPosition ];\n  }\n\n  updateBlocks() {\n    if(this.characters.length === 0) {\n      this.blocks = [\n        { m: 0, c: '' }\n      ];\n      this.blockStarts = [ 0 ];\n\n      return;\n    }\n\n    this.blocks = [];\n    this.blockStarts = [];\n\n    let currentMask = this.characters[0].m;\n    let buffer = '';\n    let bufferLength = 0;\n    this.characters.forEach((character, i) => {\n      if(character.m !== currentMask) {\n        this.blocks.push({\n          m: currentMask,\n          c: buffer\n        });\n        this.blockStarts.push(i - bufferLength);\n\n        currentMask = character.m;\n        buffer = character.c;\n        bufferLength = 1;\n      }\n      else {\n        buffer += character.c;\n        bufferLength++;\n      }\n    });\n\n    this.blocks.push({\n      m: currentMask,\n      c: buffer\n    });\n    this.blockStarts.push(this.characters.length - bufferLength);\n\n    /* Strange hack - extra newline character sets correct caret positioning;\n       this extra character also somehow can't be selected */\n    this.blocks[this.blocks.length - 1].c += String.fromCharCode(10);\n  }\n\n  getContent() {\n    return this.blocks;\n  }\n}\n\nexport default VirtualTextEditor;\n","import React, { Component } from 'react';\nimport ContentType from './ContentType';\n\nfunction getClassName(mask) {\n  let className = '';\n  for(const style in ContentType) {\n    if(mask & ContentType[style]) {\n      className += `Askd-te-${style} `;\n    }\n  }\n  return className;\n}\n\nclass Block extends Component {\n  render() {\n    const block = this.props.block;\n    const editorId = this.props.id;\n    const index = this.props.index;\n\n    return (\n      <div className={getClassName(block.m)} id={editorId + index}\n           suppressContentEditableWarning=\"true\" index={index}>\n        { block.c }\n      </div>\n    );\n  }\n}\n\nexport default Block;\n","const registerEventHandlers = (that) => {\n  that.textEditor.addEventListener('keydown', async (event) => {\n    /* TBD, bro who even uses that button lol */\n    if(event.key === 'Delete') {\n      event.preventDefault();\n    }\n    else if(event.key === 'Backspace' && !that.composing) {\n      await that.delete();\n      event.preventDefault();\n    }\n    else if(event.key === 'Enter' && !that.composing) {\n      await that.insert(String.fromCharCode(10));\n      event.preventDefault();\n    }\n  });\n\n  that.textEditor.addEventListener('beforeinput', async (event) => {\n    if(event.isComposing || that.composing) {\n      return;\n    }\n\n    event.preventDefault();\n\n    /* Mobile autocorrect and word selection from a menu */\n    if(event.inputType === 'insertReplacementText') {\n      that.caretInfo.rangeSelect = true;\n      const insertedString = event.dataTransfer.getData('text');\n      await that.insert(insertedString);\n    }\n    /* Generic event with a valid 'data'; things like undo/redo operations and\n       drag and drop are TBD */\n    else if(event.data) {\n      await that.insert(event.data);\n    }\n  });\n\n  that.textEditor.addEventListener('paste', async (event) => {\n    event.preventDefault();\n\n    const pasteText = event.clipboardData.getData('Text');\n    await that.insert(pasteText);\n  });\n\n  that.textEditor.addEventListener('compositionstart', async (event) => {\n    if(that.caretInfo.rangeSelect) {\n      await that.delete();\n    }\n\n    that.composing = true;\n    that.compositionIndex = that.caretInfo.index;\n    that.compositionPosition = that.caretInfo.position;\n\n    /* Prevent browser from overwriting the next block */\n    let nextBlockElement = document.getElementById(that.id +\n      (that.compositionIndex + 1));\n    if(nextBlockElement) {\n      nextBlockElement.setAttribute('contenteditable', 'false');\n    }\n  });\n\n  that.textEditor.addEventListener('compositionend', async (event) => {\n    if(!that.composing) {\n      return;\n    }\n\n    /* Composition has ended; set the next block to be editable again */\n    let nextBlockElement = document.getElementById(that.id +\n      (that.compositionIndex + 1));\n    if(nextBlockElement) {\n      nextBlockElement.setAttribute('contenteditable', 'true');\n    }\n\n    that.composing = false;\n    await that.compositionInsert(event.data);\n  });\n\n  document.addEventListener('selectionchange', async (event) => {\n    if(that.composing) {\n      return;\n    }\n\n    try {\n      const selection = window.getSelection();\n      const anchorElement = selection.anchorNode.parentElement;\n      const parentElement = anchorElement.parentElement;\n\n      if(anchorElement.getAttribute('id') === that.id + '!' ||\n         parentElement.getAttribute('id') === that.id) {\n        await that.selectionChanged();\n      }\n    }\n    catch(err) {\n      /* anchorElement isn't a div inside the text editor */\n    }\n  });\n}\n\nexport default registerEventHandlers;\n","import React, { Component } from 'react';\nimport Caret from './Caret';\nimport Toolbar from './Toolbar';\nimport VirtualTextEditor from './VirtualTextEditor';\nimport Block from './Block';\nimport Utils from '../Utils';\nimport registerEventHandlers from './registerEventHandlers';\nimport '../css/TextEditor.css';\n\nclass TextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.id = this.props.uniqueKey ?\n                `Askd-text-editor${this.props.uniqueKey}` : 'Askd-text-editor';\n    this.virtualTextEditor = new VirtualTextEditor(this.props.initialContent);\n    this.caret = new Caret(this.id);\n\n    this.contentChanged = false;\n    this.caretInfo = {\n      rangeSelect: false,\n      index: 0,\n      position: 0\n    };\n\n    this.composing = false;\n    this.compositionIndex = null;\n    this.compositionPosition = null;\n\n    this.state = {\n      content: this.virtualTextEditor.getContent(),\n      editorMask: 0\n    };\n\n    this.toolbarUpdate = this.toolbarUpdate.bind(this);\n  }\n\n  async delete() {\n    if(!this.caretInfo.rangeSelect) {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.index, this.caretInfo.position - 1,\n        this.caretInfo.index, this.caretInfo.position\n      );\n    }\n    else {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n        this.caretInfo.rightIndex, this.caretInfo.rightPosition\n      );\n    }\n\n    this.caretInfo.rangeSelect = false;\n    await this.updateText();\n  }\n\n  async insert(newString) {\n    this.updateCaretInfo();\n\n    if(this.caretInfo.rangeSelect) {\n      await this.delete();\n    }\n\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.caretInfo.index, this.caretInfo.position, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.updateText();\n  }\n\n  async compositionInsert(newString) {\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.compositionIndex, this.compositionPosition, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.updateText();\n  }\n\n  async rangeMaskUpdate(bit, on) {\n    if(!this.caretInfo.rangeSelect) {\n      return;\n    }\n\n    [ this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition ] =\n    this.virtualTextEditor.rangeMaskUpdate(\n      this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition, bit, on\n    );\n\n    await this.updateText();\n  }\n\n  async updateText() {\n    this.contentChanged = true;\n    await Utils.setStatePromise(this, {\n      content: this.virtualTextEditor.getContent()\n    });\n  }\n\n  async updateMask(newMask) {\n    await Utils.setStatePromise(this, {\n      editorMask: newMask\n    });\n  }\n\n  async toolbarUpdate(bit, on) {\n    this.textEditor.focus();\n    await this.updateMask(this.state.editorMask ^ bit);\n    await this.rangeMaskUpdate(bit, on);\n  }\n\n  updateCaretInfo() {\n    const newCaretInfo = this.caret.getInfo();\n\n    /* Maintain previous info for the other selection type */\n    if(newCaretInfo.rangeSelect) {\n      this.caretInfo.leftIndex = newCaretInfo.leftIndex;\n      this.caretInfo.leftPosition = newCaretInfo.leftPosition;\n      this.caretInfo.rightIndex = newCaretInfo.rightIndex;\n      this.caretInfo.rightPosition = newCaretInfo.rightPosition;\n      this.caretInfo.rangeSelect = true;\n    }\n    else {\n      this.caretInfo.index = newCaretInfo.index;\n      this.caretInfo.position = newCaretInfo.position;\n      this.caretInfo.rangeSelect = false;\n    }\n  }\n\n  async selectionChanged() {\n    this.updateCaretInfo();\n\n    let leftCharacterMask;\n    if(this.caretInfo.rangeSelect) {\n      leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition, true\n      );\n    }\n    else {\n      leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.index, this.caretInfo.position, false\n      );\n    }\n\n    await this.updateMask(leftCharacterMask);\n  }\n\n  componentDidMount() {\n    this.textEditor = document.getElementById(this.id);\n    registerEventHandlers(this);\n  }\n\n  componentDidUpdate() {\n    if(!this.contentChanged) {\n      return;\n    }\n\n    /* The rendered text must be manually sanitized since there's no way to\n       preventDefault a compositionend event in some browsers... */\n    let junkNodes = [];\n    for(const node of this.textEditor.childNodes) {\n      if(node.nodeType === Node.TEXT_NODE || node.nodeName === 'BR' ||\n         node.nodeName === 'SPAN') {\n        junkNodes.push(node);\n      }\n    }\n\n    for(const node of junkNodes) {\n      this.textEditor.removeChild(node);\n    }\n\n    for(let i = 0; i < this.state.content.length; i++) {\n      let childElement = this.textEditor.children[i];\n      if(childElement.innerHTML !== this.state.content[i].c) {\n        childElement.childNodes[0].nodeValue = this.state.content[i].c;\n      }\n    }\n\n    if(this.caretInfo.rangeSelect) {\n      this.caret.setRangePosition(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n        this.caretInfo.rightIndex, this.caretInfo.rightPosition\n      );\n    }\n    else {\n      this.caret.setPosition(this.caretInfo.index, this.caretInfo.position);\n    }\n\n    this.contentChanged = false;\n    this.updateCaretInfo();\n\n    /* Callback with new content */\n    if(this.props.onChange) {\n      this.props.onChange(this.state.content);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let contentElements = [];\n    this.state.content.forEach((block, i) => {\n      contentElements.push(\n        <Block block={block} id={this.id} index={i} key={i} />\n      );\n    });\n\n    return (\n      <div className=\"Askd-text-editor\" id={this.id + '!'}>\n        <Toolbar mask={this.state.editorMask} callback={this.toolbarUpdate} />\n        <div className=\"Askd-text-editor-text\" id={this.id} tabIndex=\"0\"\n             contentEditable=\"true\" suppressContentEditableWarning=\"true\"\n             spellCheck=\"false\">\n             { contentElements }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TextEditor;\n","import React, { Component } from 'react';\nimport TextEditor from '../TextEditor/TextEditor';\nimport Utils from '../Utils';\nimport '../css/CpNotes.css';\n\nclass CpNotes extends Component {\n  async componentDidMount() {\n    await Utils.renderMathJax();\n  }\n\n  render() {\n    return (\n      <div className=\"Module-wrapper\">\n        <div className=\"Module-description Module-description-centered\">\n          <p>A work-in-progress web application for storing publicly\n          accessible competitive programming notes! \\[\\LaTeX\\]</p>\n        </div>\n        <TextEditor />\n      </div>\n    );\n  }\n}\n\nexport default CpNotes;\n","import React from 'react';\nimport CpNotes from '../Home/CpNotes';\n\nfunction Home() {\n  return (\n    <>\n      <CpNotes />\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction UserInfo({ info }) {\n  return (\n    <>\n      <h2 className=\"Module-heading\">{info.username}</h2>\n      {\n        info.email &&\n        <p>Email: {info.email} (only visible to you)</p>\n      }\n    </>\n  );\n}\n\nexport default UserInfo;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport '../css/SearchSelect.css';\n\nconst MAX_OPTIONS = 10;\nconst GLOBAL_SORT_KEY = 'sk';\n\nclass SearchSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchTerm: '',\n      previousValidSearchTerm: '',\n      showOptions: false,\n      options: [],\n      filteredOptions: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleOptionSelect = this.handleOptionSelect.bind(this);\n  }\n\n  getOptionString(option) {\n    const optionStringArray = [];\n    for(const key of this.props.keys)\n      optionStringArray.push(option[key]);\n\n    return optionStringArray.join(' - ');\n  }\n\n  async filterOptions() {\n    var filteredOptions = [];\n    const searchTerm = this.state.searchTerm.toLowerCase();\n\n    for(const option of this.state.options) {\n      if(filteredOptions.length === MAX_OPTIONS)\n        break;\n\n      const optionString = this.getOptionString(option);\n      if(optionString.toLowerCase().includes(searchTerm)) {\n        filteredOptions.push(option);\n        continue;\n      }\n\n      for(const key of this.props.keys) {\n        if(option[key].toLowerCase().includes(searchTerm)) {\n          filteredOptions.push(option);\n          break;\n        }\n      }\n    }\n\n    await Utils.setStatePromise(this, {\n      filteredOptions: filteredOptions\n    });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.staticKey && !this.props.staticKey) {\n      await Utils.setStatePromise(this, {\n        searchTerm: ''\n      });\n      return;\n    }\n\n    if(this.props.staticKey === prevProps.staticKey)\n      return;\n\n    await Utils.setStatePromise(this, {\n      searchTerm: '',\n      loading: true\n    });\n    const options = await this.props.search();\n\n    await Utils.setStatePromise(this, {\n      loading: false,\n      previousValidSearchTerm: '',\n      options: options,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleChange(event) {\n    await Utils.setStatePromise(this, {\n      searchTerm: event.target.value,\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleBlur(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.id === `Select-options-${this.props.name}`)\n      return;\n\n    await Utils.setStatePromise(this, {\n      showOptions: false,\n      searchTerm: this.state.previousValidSearchTerm\n    });\n  }\n\n  async handleFocus(event) {\n    await Utils.setStatePromise(this, {\n      showOptions: true\n    });\n  }\n\n  async handleOptionSelect(sortKey, optionString) {\n    await Utils.setStatePromise(this, {\n      searchTerm: optionString,\n      previousValidSearchTerm: optionString,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n    this.props.callback(sortKey);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    var optionElements = [];\n    for(const option of this.state.filteredOptions) {\n      const optionString = this.getOptionString(option);\n      const displayString = option[this.props.displayKey];\n      const sortKey = option[GLOBAL_SORT_KEY];\n      optionElements.push(\n        <li onClick={() => this.handleOptionSelect(sortKey, displayString)}\n            key={sortKey}>\n            {optionString}\n        </li>\n      );\n    }\n\n    return (\n      <div onBlur={this.handleBlur} className=\"Search-select\">\n        <input className={this.state.loading ? \"Askd-form-loading\" : \"\"}\n               onChange={this.handleChange} autoComplete=\"off\" type=\"text\"\n               value={this.state.searchTerm} onFocus={this.handleFocus}\n               name={this.props.name} id={this.props.id}\n               disabled={!this.props.search || this.state.loading} />\n        {\n          optionElements.length > 0 && this.state.showOptions &&\n          <ol id={`Select-options-${this.props.name}`} tabIndex=\"-1\"\n              className=\"Search-select-options\">\n            { optionElements }\n          </ol>\n        }\n      </div>\n    );\n  }\n}\n\nexport default SearchSelect;\n","const ApiConstants = Object.freeze({\n  API_ENDPOINT: 'https://qqmeusmrfk.execute-api.us-east-1.amazonaws.com/prod/'\n});\n\nexport default ApiConstants;\n","import queryString from 'query-string';\nimport ApiConstants from './ApiConstants';\nimport UserAuthApi from './UserAuthApi';\n\nclass Api {\n  static createApiError(name, message) {\n    const err = Error(message);\n    err.name = name;\n\n    return err;\n  }\n\n  static async manageResponseError(response) {\n    if(response.status === 400) {\n      const responseJson = await response.json();\n      throw Api.createApiError(responseJson.name, responseJson.message);\n    }\n    else if(response.status !== 200) {\n      throw Error('Request failed!');\n    }\n  }\n\n  static async sendRequestBody(resource, options, method) {\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + resource, {\n      method: method,\n      body: JSON.stringify(options),\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async getJson(resource, options) {\n    const path = `${resource}?${queryString.stringify(options)}`;\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + path, {\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async postJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'POST');\n  }\n\n  static async putJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'PUT');\n  }\n\n  static async deleteJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'DELETE');\n  }\n}\n\nexport default Api;\n","import Api from './Api';\n\nclass ProblemsApi {\n  static _prettifyProblems(problems) {\n    for(let i = 0; i < problems.length; i++) {\n      problems[i].prettySk = problems[i].sk.replaceAll('#', '');\n    }\n  }\n\n  static async getContests(platform) {\n    const options = {\n      platform: platform\n    };\n\n    return await Api.getJson('contests', options);\n  }\n\n  static async getProblems(platform, contestId) {\n    const options = {\n      platform: platform,\n      contestId: contestId\n    };\n\n    let problems = await Api.getJson('problems', options);\n    ProblemsApi._prettifyProblems(problems);\n\n    return problems;\n  }\n\n  static async getProblemInfo(platform, problemId) {\n    const options = {\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.getJson('problems', options);\n  }\n}\n\nexport default ProblemsApi;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport SearchSelect from '../SearchSelect/SearchSelect';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport '../css/AddProblemForm.css';\n\nclass AddProblemForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      platform: null,\n      contestSortKey: null,\n      problemSortKey: null,\n      skipContestSearch: false\n    };\n\n    this.close = this.close.bind(this);\n    this.handlePlatformChange = this.handlePlatformChange.bind(this);\n    this.toggleSkipContestSearch = this.toggleSkipContestSearch.bind(this);\n    this.updateProblemSortKey = this.updateProblemSortKey.bind(this);\n    this.updateContestSortKey = this.updateContestSortKey.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  close() {\n    this.props.callback(null, null, null);\n  }\n\n  async handlePlatformChange(event) {\n    await Utils.setStatePromise(this, {\n      platform: event.target.value\n    });\n  }\n\n  async toggleSkipContestSearch(event) {\n    await Utils.setStatePromise(this, {\n      skipContestSearch: !this.state.skipContestSearch,\n      contestSortKey: null,\n      problemSortKey: null\n    });\n  }\n\n  async updateContestSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      contestSortKey: sortKey,\n      problemSortKey: null\n    });\n  }\n\n  async updateProblemSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      problemSortKey: sortKey\n    });\n  }\n\n  async addProblem(event) {\n    event.preventDefault();\n\n    if(!this.state.problemSortKey) {\n      await Utils.componentSetError(this, 'Please search and select a problem.');\n      return;\n    }\n\n    this.props.callback(this.state.problemSortKey, this.state.platform, this);\n  }\n\n  render() {\n    var searchContestFunction = null;\n    var searchContestKey = null;\n    if(this.state.platform && !this.state.skipContestSearch) {\n      searchContestFunction = () => ProblemsApi.getContests(this.state.platform);\n      searchContestKey = this.state.platform;\n    }\n\n    var searchProblemFunction = null;\n    var searchProblemKey = null;\n    if(this.state.platform && this.state.contestSortKey) {\n      searchProblemFunction = () =>\n        ProblemsApi.getProblems(this.state.platform, this.state.contestSortKey);\n      searchProblemKey = this.state.platform + this.state.contestSortKey;\n    }\n    else if(this.state.platform && this.state.skipContestSearch) {\n      searchProblemFunction = () => ProblemsApi.getProblems(this.state.platform);\n      searchProblemKey = this.state.platform;\n    }\n\n    var skipButtonText = this.state.skipContestSearch ?\n                         'Want to filter by contest?' :\n                         'Want to skip filtering by contest?';\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">\n                X\n        </button>\n        <div className=\"Add-problem-form Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Add a problem!</h2>\n          <form className=\"Askd-form\" onSubmit={this.addProblem}>\n            <label htmlFor=\"cp-platform\">Platform</label>\n            <select defaultValue=\"\" onChange={this.handlePlatformChange}\n                    name=\"platform\" id=\"cp-platform\">\n              <option disabled value=\"\"></option>\n              <option value=\"CodeForces\">CodeForces</option>\n              <option value=\"CodeChef\">CodeChef</option>\n            </select>\n\n            <label htmlFor=\"cp-contest\">Contest</label>\n            <SearchSelect name='contest' id='cp-contest' search={searchContestFunction}\n                          keys={['sk', 'name']} callback={this.updateContestSortKey}\n                          displayKey='name' staticKey={searchContestKey} />\n\n            <button onClick={this.toggleSkipContestSearch}\n                    type=\"button\" className=\"Askd-form-link Askd-form-link-separator\">\n              { skipButtonText }\n            </button>\n\n            <label htmlFor=\"cp-title\">Problem</label>\n            <SearchSelect name='title' id='cp-title' search={searchProblemFunction}\n                          keys={['prettySk', 'name']} callback={this.updateProblemSortKey}\n                          displayKey='name' staticKey={searchProblemKey} />\n\n            <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                   value=\"Add Problem\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddProblemForm;\n","import Api from './Api';\n\nclass NotesApi {\n  static async getNoteInfo(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.getJson('notes', options);\n  }\n\n  static async addNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.postJson('notes', options);\n  }\n\n  static async editNote(username, platform, problemId, title, solved,\n                        content, published) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId,\n      title: title,\n      solved: solved,\n      content: content,\n      published: published\n    };\n\n    return await Api.putJson('notes', options);\n  }\n\n  static async deleteNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.deleteJson('notes', options);\n  }\n}\n\nexport default NotesApi;\n","import React, { Component } from 'react';\nimport AddProblemForm from './AddProblemForm';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\n\nclass UserProblems extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAddProblemForm: false\n    };\n\n    this.toggleAddProblemForm = this.toggleAddProblemForm.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  async toggleAddProblemForm() {\n    Utils.setStatePromise(this, {\n      showAddProblemForm: !this.state.showAddProblemForm\n    });\n  }\n\n  async addProblem(problemSortKey, platform, formComponent) {\n    if(!problemSortKey) {\n      await this.toggleAddProblemForm();\n      return;\n    }\n\n    try {\n      const username = this.props.info.username;\n      await NotesApi.addNote(username, platform, problemSortKey);\n\n      const problemUrl = problemSortKey.replace('#', '/');\n      this.props.history.push(`/notes/edit/${platform}/${problemUrl}`);\n    }\n    catch(err) {\n      await Utils.componentSetError(formComponent, err.message);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h2 className=\"Module-heading\">Problems</h2>\n        {\n          this.state.showAddProblemForm &&\n          <AddProblemForm callback={this.addProblem} />\n        }\n        <div className=\"Cp-notes Module-space\">\n          <p>There's nothing to see here yet!</p>\n          {\n            this.props.info.email &&\n            <button onClick={this.toggleAddProblemForm}\n                    className=\"Cp-notes-add Askd-button Askd-button-circular\">\n              +\n            </button>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProblems;\n","import Api from './Api';\n\nclass UserApi {\n  static async getUserInfo(username) {\n    const options = {\n      username: username\n    };\n\n    return await Api.getJson('profile', options);\n  }\n}\n\nexport default UserApi;\n","const UserProfileState = Object.freeze({\n  LOADING: 0,\n  DONE: 1,\n  NOT_FOUND: 2\n});\n\nexport default UserProfileState;\n","import React, { Component } from 'react';\nimport UserInfo from './UserInfo';\nimport UserProblems from './UserProblems';\nimport UserApi from '../Api/UserApi';\nimport UserInfoState from './UserInfoState';\nimport Utils from '../Utils';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: UserInfoState.LOADING,\n      info: null\n    };\n  }\n\n  async loadUserInfo() {\n    try {\n      const username = this.props.match.params.username;\n      const info = await UserApi.getUserInfo(username);\n      await Utils.setStatePromise(this, {\n        screen: UserInfoState.DONE,\n        info: info\n      });\n    }\n    catch(err) {\n      if(err.name === 'UserNotFound') {\n        await Utils.setStatePromise(this, {\n          screen: UserInfoState.NOT_FOUND\n        });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadUserInfo();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.match.params.username !== this.props.match.params.username) {\n      await Utils.setStatePromise(this, {\n        screen: UserInfoState.LOADING,\n        info: null\n      });\n      await this.loadUserInfo();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loadingContent = null;\n    const loadedContent = (\n      <>\n        <div className=\"Module-description\">\n          <UserInfo info={this.state.info} />\n        </div>\n        <UserProblems info={this.state.info} history={this.props.history} />\n      </>\n    );\n    const userNotFoundContent = (\n      <div className=\"Module-description\">\n        <h2>User not found!</h2>\n      </div>\n    );\n\n    var content;\n    switch(this.state.screen) {\n      case UserInfoState.LOADING:\n        content = loadingContent;\n        break;\n      case UserInfoState.DONE:\n        content = loadedContent;\n        break;\n      case UserInfoState.NOT_FOUND:\n        content = userNotFoundContent;\n        break;\n      default:\n    }\n\n    return (\n      <>\n        <div className=\"Module-wrapper\">\n          { content }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProfile;\n","const EditNoteState = Object.freeze({\n  LOADING: 0,\n  DONE: 1,\n  NOT_FOUND: 2\n});\n\nexport default EditNoteState;\n","import React, { Component } from 'react';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass DeleteMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: ''\n    };\n    this.randomCode = uuidv4();\n\n    this.close = this.close.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async deleteNote(event) {\n    event.preventDefault();\n\n    const confirmCode = event.target.confirmCode.value;\n    if(confirmCode !== this.randomCode) {\n      await Utils.componentSetError(this, \"Your confirmation code doesn't match!\");\n      return;\n    }\n\n    try {\n      const username = await UserAuthApi.getUsername();\n      const platform = this.props.platform;\n      const problemId = this.props.problemInfo.problemId;\n\n      await NotesApi.deleteNote(username, platform, problemId);\n      this.props.history.push(`/users/${username}`);\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">\n          X\n        </button>\n        <div className=\"Edit-note-delete-menu Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Are you sure you want to permanently delete this note?</h2>\n          <p>\n            This action cannot be undone! Please enter the following\n            code as confirmation.\n          </p>\n          <form className=\"Askd-form\" onSubmit={this.deleteNote}>\n            <label htmlFor=\"confirmCode\">{this.randomCode}</label>\n            <input autoComplete=\"off\" type=\"text\" name=\"confirmCode\"\n                   key=\"confirmCode\" id=\"confirmCode\" />\n\n            <input className=\"Askd-button\" type=\"submit\" value=\"Delete\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DeleteMenu;\n","const SolvedState = Object.freeze({\n  SOLVED: 0,\n  UPSOLVED: 1,\n  UPSOLVED_HELP: 2,\n  UNSOLVED: 3\n});\n\nexport default SolvedState;\n","import React, { Component } from 'react';\nimport TextEditor from '../TextEditor/TextEditor';\nimport DeleteMenu from './DeleteMenu';\nimport SolvedState from './SolvedState';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\n\nclass EditNoteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const noteInfo = this.props.noteInfo;\n    const problemInfo = this.props.problemInfo;\n\n    this.title = noteInfo.title || `Notes for ${problemInfo.problemName}`;\n    this.solved = noteInfo.solved;\n    this.content = JSON.parse(noteInfo.content);\n\n    this.state = {\n      published: noteInfo.published,\n      disableEditButtons: false,\n      loadingSave: false,\n      loadingPublish: false,\n      showDeleteMenu: false\n    };\n\n    this.saveNote = this.saveNote.bind(this);\n    this.togglePublishNote = this.togglePublishNote.bind(this);\n    this.toggleDeleteMenu = this.toggleDeleteMenu.bind(this);\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleSolvedChange = this.handleSolvedChange.bind(this);\n    this.handleContentChange = this.handleContentChange.bind(this);\n  }\n\n  async saveOrPublishNote(published) {\n    const username = await UserAuthApi.getUsername();\n    const platform = this.props.platform;\n    const problemId = this.props.problemInfo.problemId;\n    const title = this.title;\n    const solved = this.solved;\n    const content = JSON.stringify(this.content);\n\n    await NotesApi.editNote(username, platform, problemId, title, solved,\n                            content, published);\n\n    await Utils.setStatePromise(this, {\n      published: published,\n      disableEditButtons: false,\n      loadingSave: false,\n      loadingPublish: false\n    });\n  }\n\n  async saveNote(event) {\n    await Utils.setStatePromise(this, {\n      disableEditButtons: true,\n      loadingSave: true\n    });\n\n    await this.saveOrPublishNote(this.state.published);\n  }\n\n  async togglePublishNote(event) {\n    await Utils.setStatePromise(this, {\n      disableEditButtons: true,\n      loadingPublish: true\n    });\n\n    await this.saveOrPublishNote(!this.state.published);\n  }\n\n  async toggleDeleteMenu(event) {\n    await Utils.setStatePromise(this, {\n      showDeleteMenu: !this.state.showDeleteMenu\n    });\n  }\n\n  handleTitleChange(event) {\n    this.title = event.target.value;\n  }\n\n  handleSolvedChange(event) {\n    this.solved = event.target.value;\n  }\n\n  handleContentChange(newContent) {\n    this.content = newContent;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const togglePublishText = this.state.published ? 'Unpublish' : 'Publish!';\n    let saveButtonClass = 'Askd-button Askd-not-fullwidth';\n    let publishButtonClass = 'Askd-button Askd-not-fullwidth';\n\n    if(this.state.loadingSave) saveButtonClass += ' Askd-form-loading';\n    if(this.state.loadingPublish) publishButtonClass += ' Askd-form-loading';\n\n    return (\n      <>\n        {\n          this.state.showDeleteMenu &&\n          <DeleteMenu exitCallback={this.toggleDeleteMenu}\n                      platform={this.props.platform} history={this.props.history}\n                      problemInfo={this.props.problemInfo} />\n        }\n        <form className=\"Edit-note-form Askd-form\">\n          <input className=\"Edit-note-title\" name=\"title\" type=\"text\"\n                 defaultValue={this.title} placeholder=\"Title\"\n                 onChange={this.handleTitleChange} />\n\n          <select name=\"solved\" id=\"note-solved\" onChange={this.handleSolvedChange}\n                  defaultValue={this.solved}>\n            <option value={SolvedState.SOLVED}>Solved</option>\n            <option value={SolvedState.UPSOLVED}>Upsolved</option>\n            <option value={SolvedState.UPSOLVED_HELP}>Upsolved with help</option>\n            <option value={SolvedState.UNSOLVED}>Unsolved</option>\n          </select>\n\n          <TextEditor initialContent={this.content}\n                      onChange={this.handleContentChange} />\n          <div className=\"Edit-note-bottom-buttons\">\n            <input className={saveButtonClass} type=\"button\" value=\"Save\"\n                   onClick={this.saveNote}\n                   disabled={this.state.disableEditButtons} />\n\n            <input className={publishButtonClass} type=\"button\"\n                   value={togglePublishText} onClick={this.togglePublishNote}\n                   disabled={this.state.disableEditButtons} />\n          </div>\n          <div className=\"Edit-note-delete\">\n            <button type=\"button\" className=\"Askd-form-link Askd-form-link-bottom\"\n                    onClick={this.toggleDeleteMenu}>\n              Permanently delete this note?\n            </button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default EditNoteForm;\n","import React, { Component } from 'react';\n\nclass ProblemInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    return (\n      <div className=\"Edit-note-problem-info\">\n        <div className=\"Module-info-box\">\n          <h4>\n            {this.props.platform} {info.problemCode} - {info.problemName}\n          </h4>\n          <p className=\"Edit-note-contest\">{info.contestName}</p>\n          <a className=\"Askd-form-link\" href={info.link}>Problem link</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProblemInfo;\n","import React, { Component } from 'react';\nimport EditNoteState from './EditNoteState';\nimport EditNoteForm from './EditNoteForm';\nimport ProblemInfo from './ProblemInfo';\nimport ProblemsApi from '../Api/ProblemsApi'\nimport NotesApi from '../Api/NotesApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport Utils from '../Utils';\nimport '../css/EditNote.css';\n\nclass EditNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: EditNoteState.LOADING,\n      problemInfo: null,\n      noteInfo: null\n    };\n  }\n\n  async loadProblemInfo() {\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    let problemInfo = await ProblemsApi.getProblemInfo(platform, problemId);\n    problemInfo.problemId = problemId;\n\n    return problemInfo;\n  }\n\n  async loadNoteInfo() {\n    const username = await UserAuthApi.getUsername();\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    const noteInfo = await NotesApi.getNoteInfo(username, platform, problemId);\n\n    return noteInfo;\n  }\n\n  async loadInfo() {\n    const problemInfo = await this.loadProblemInfo();\n    const noteInfo = await this.loadNoteInfo();\n    await Utils.setStatePromise(this, {\n      problemInfo: problemInfo,\n      noteInfo: noteInfo,\n      screen: EditNoteState.DONE\n    });\n  }\n\n  async componentDidMount() {\n    await this.loadInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const platform = this.props.match.params.platform;\n\n    return (\n      <div className=\"Module-wrapper\">\n        {\n          this.state.screen === EditNoteState.DONE &&\n          <>\n            <ProblemInfo info={this.state.problemInfo} platform={platform} />\n            <EditNoteForm problemInfo={this.state.problemInfo}\n                          noteInfo={this.state.noteInfo} platform={platform}\n                          history={this.props.history} />\n          </>\n        }\n      </div>\n    );\n  }\n}\n\nexport default EditNote;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './Header/Header';\nimport Home from './Home/Home';\nimport UserProfile from './UserProfile/UserProfile';\nimport EditNote from './EditNote/EditNote';\n\nimport './css/App.css';\nimport './css/Module.css';\nimport './css/Form.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/users/:username\" component={UserProfile} />\n          <Route exact path=\"/notes/edit/:platform/:contestId/:problemCode\"\n                 component={EditNote} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Amplify from 'aws-amplify';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport amplify_config from './amplify_config';\n\nAmplify.configure(amplify_config);\n\ndocument.body.addEventListener('mousedown', (event) => {\n  document.body.classList.add('Global-mouse-click');\n});\n\ndocument.body.addEventListener('keydown', (event) => {\n  if(event.keyCode === 9) {\n    document.body.classList.remove('Global-mouse-click');\n  }\n});\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}