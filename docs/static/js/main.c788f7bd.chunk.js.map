{"version":3,"sources":["Utils.js","Header/HeaderUtils.js","Api/UserAuthApi.js","Header/HeaderState.js","Header/RegisterForm.js","Header/LoginForm.js","Header/UserMenu.js","Header/HeaderAuth.js","Header/Header.js","TextEditor/Caret.js","TextEditor/ContentType.js","TextEditor/Toolbar.js","TextEditor/VirtualTextEditor.js","TextEditor/Block.js","TextEditor/TextEditorContent.js","TextEditor/registerEventHandlers.js","TextEditor/TextEditor.js","Home/CpNotes.js","Home/Home.js","UserProfile/UserInfo.js","SearchSelect/SearchSelect.js","Api/ApiConstants.js","Api/Api.js","Enum/SolvedState.js","Api/ProblemsApi.js","UserProfile/AddProblemForm.js","Api/NotesApi.js","UserProfile/UserNoteInfo.js","UserProfile/UserContestInfo.js","UserProfile/UserNotesTitleDropdown.js","Paginator/VirtualPaginator.js","Paginator/Paginator.js","UserProfile/UserNotesList.js","UserProfile/UserNotes.js","Api/UserApi.js","Enum/LoadState.js","UserProfile/UserProfile.js","EditNote/DeleteMenu.js","EditNote/EditNoteForm.js","EditNote/ProblemInfo.js","EditNote/EditNote.js","Api/LikesApi.js","Misc/LikeDislike.js","PublicNote/PublicNoteInfo.js","PublicNote/PublicNote.js","App.js","serviceWorker.js","index.js"],"names":["Utils","component","stateObject","Promise","resolve","reject","mounted","setState","object","property","hasOwnProperty","message","setError","setStatePromise","error","setSuccess","success","window","MathJax","typesetPromise","HeaderUtils","password","confirmPassword","componentSetError","length","UserAuthApi","Auth","currentAuthenticatedUser","username","email","signUp","attributes","info","codeDeliveryDetails","Destination","code","confirmSignUp","resendSignUp","CodeDeliveryDetails","forgotPassword","forgotPasswordSubmit","signIn","signOut","getProfile","profile","currentSession","getSignInUserSession","accessToken","getAccessToken","getJwtToken","HeaderState","Object","freeze","LOGIN","RECOVERY_USERNAME","RECOVERY_PASSWORD","RECOVERY_SUCCESS","REGISTER","REGISTER_VERIFY","REGISTER_SUCCESS","ERROR_TRIGGER_PREFIX","RegisterForm","props","screen","unverifiedAccountUsername","state","destination","unverifiedAccountDestination","close","bind","register","verifyEmail","resendVerificationEmail","this","exitCallback","startsWith","substring","event","preventDefault","form","target","value","checkPasswords","componentSetSuccess","currentForm","createAccountForm","className","onSubmit","htmlFor","autoComplete","type","name","id","verifyEmailForm","key","onClick","emailVerifiedBox","Component","LoginForm","login","enablePasswordRecovery","resetPassword","emailVerificationCallback","componentsSetError","loginForm","recoveryUsernameForm","recoveryPasswordForm","recoveryPasswordSuccess","UserMenu","logout","logoutCallback","closeCallback","to","HeaderAuth","showRegisterForm","showLoginForm","showUserMenu","refreshUsername","toggleRegisterForm","toggleLoginForm","toggleUserMenu","hideUserMenu","afterLogin","unverifiedAccount","suggestUserRegister","getUsername","focusedElement","relatedTarget","classList","contains","loggedIn","loginButtons","loggedInButton","tabIndex","onBlur","topRightButtons","Header","path","useLocation","pathname","small","outerClassName","Caret","a","b","c","d","selection","getSelection","anchorElement","anchorNode","parentElement","focusElement","focusNode","anchorIndex","Number","getAttribute","focusIndex","anchorOffset","focusOffset","rangeSelect","index","position","leftIndex","leftPosition","rightIndex","rightPosition","blockElement","document","getElementById","textNode","childNodes","createTextNode","appendChild","range","createRange","setStart","collapse","removeAllRanges","addRange","leftBlockElement","rightBlockElement","leftTextNode","rightTextNode","setEnd","ContentType","BOLD","ITALIC","UNDERLINE","Toolbar","mask","updatingMask","updateMask","bit","callback","boldSelected","italicSelected","underlineSelected","countCharacters","str","counter","character","VirtualTextEditor","initialContent","characters","globalCaretPosition","block","m","char","push","splice","updateBlocks","globalIndex","charactersScanned","i","blocks","blockLength","blockEndIndex","j","blockStarts","characterCounter","getGlobalIndex","insertedString","rightBuffer","getIndexAndPosition","globalLeftIndex","deleteLength","on","globalRightIndex","newLeftIndex","newLeftPosition","currentMask","characterBuffer","forEach","join","String","fromCharCode","getClassName","style","Block","editorId","suppressContentEditableWarning","TextEditorContent","content","editable","contentElements","contentEditable","spellCheck","registerEventHandlers","that","textEditor","addEventListener","composing","delete","insert","isComposing","inputType","caretInfo","dataTransfer","getData","data","pasteText","clipboardData","compositionIndex","compositionPosition","nextBlockElement","setAttribute","compositionInsert","selectionChanged","TextEditor","uniqueKey","virtualTextEditor","caret","contentChanged","getContent","editorMask","toolbarUpdate","updateText","newString","updateCaretInfo","rangeMaskUpdate","newMask","focus","newCaretInfo","getInfo","leftCharacterMask","getCharacterMask","junkNodes","node","nodeType","Node","TEXT_NODE","nodeName","removeChild","childElement","children","innerHTML","nodeValue","setRangePosition","setPosition","onChange","CpNotes","renderMathJax","Home","UserInfo","SearchSelect","loading","searchTerm","previousValidSearchTerm","showOptions","options","filteredOptions","handleChange","handleBlur","handleFocus","handleOptionSelect","option","optionStringArray","keys","toLowerCase","getOptionString","includes","prevProps","staticKey","search","filterOptions","sortKey","optionString","optionElements","displayString","displayKey","onFocus","disabled","ApiConstants","API_ENDPOINT","Api","err","Error","response","status","json","responseJson","createApiError","resource","method","fetch","body","JSON","stringify","headers","Authorization","manageResponseError","queryString","sendRequestBody","SolvedState","SOLVED","text","css","UPSOLVED","UPSOLVED_HELP","UNSOLVED","ProblemsApi","problems","prettySk","sk","replaceAll","platform","getJson","contestId","_prettifyProblems","problemId","solvedStateValue","parseInt","AddProblemForm","contestSortKey","problemSortKey","skipContestSearch","handlePlatformChange","toggleSkipContestSearch","updateProblemSortKey","updateContestSortKey","addProblem","searchContestFunction","searchContestKey","getContests","searchProblemFunction","searchProblemKey","getProblems","skipButtonText","defaultValue","NotesApi","forcePublished","postJson","title","solved","published","putJson","deleteJson","UserNoteInfo","solvedClass","getSolvedStateCssClass","problemUrl","problemSk","replace","publishedClass","timestamp","Date","editedTime","toLocaleDateString","authorUsername","loggedInUsername","problemCode","problemName","UserContestInfo","noteElements","notes","note","split","codeClassName","contestName","UserNotesTitleDropdown","innerContent","showing","toggleCallback","showText","VirtualPaginator","pageSize","setContent","activeItems","item","paginatorActive","indices","active","pageIndex","currentIndex","activeBufferSize","itemBuffer","pageCount","bufferSize","Paginator","currentPage","totalPages","pageIndices","after","increment","before","sort","paginatorButtons","buttonClassName","RecursionLevel","CONTEST","PLATFORM","compareByRecent","note1","note2","groupByAttributes","objectList","attributeGroups","obj","attributeValues","attribute","UserNotesList","page","sortNoteItems","virtualPaginator","sortedNoteItems","updatePage","firstNote","contestObject","contestCode","organizeBySolved","organizeByPlatform","recursionLevel","keyString","paginatorIndices","organizeByContest","contestGroups","createContestObject","organize","attributeString","dropdownShowing","dropdownIndices","sortByRecent","groups","innerKeyString","innerIndices","noteInfoElements","NoteComponent","renderNoteItems","getSolvedStateText","toggleActiveItems","getPageCount","forceUpdate","nextProps","nextState","importantProps","currentImportantProps","map","x","nextImportantProps","noteItems","paginator","UserNotes","showAddProblemForm","toggleAddProblemForm","toggleOrganizeBySolved","toggleOrganizeByPlatform","toggleOrganizeByContest","toggleSortByRecent","formComponent","userInfo","addNote","history","UserApi","LoadState","LOADING","DONE","NOT_FOUND","UserProfile","match","params","getUserInfo","getNotes","loadInfo","loadedContent","userNotFoundContent","DeleteMenu","randomCode","uuidv4","deleteNote","confirmCode","problemInfo","remindUserToSave","returnValue","EditNoteForm","noteInfo","parse","lastSaved","disableEditButtons","saved","loadingSave","loadingPublish","showDeleteMenu","saveNote","togglePublishNote","toggleDeleteMenu","handleTitleChange","handleSolvedChange","handleContentChange","editNote","onbeforeunload","saveOrPublishNote","newContent","savedText","toLocaleString","togglePublishText","saveButtonClass","publishButtonClass","when","placeholder","ProblemInfo","href","link","EditNote","getProblemInfo","getNoteInfo","loadProblemInfo","loadNoteInfo","noteNotFoundContent","LikesApi","noteAuthor","likedStatus","LikeDislike","initialScore","initialStatus","likeCallback","useState","score","setScore","setStatus","likeButtonClass","toggleStatus","PublicNoteInfo","editedTimestamp","sendLike","likeCount","PublicNote","ownerUsername","App","exact","Boolean","location","hostname","Amplify","configure","amplify_config","add","keyCode","remove","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"otBAkDeA,E,sJAjDgBC,EAAWC,G,0FAC/B,IAAIC,SAAQ,SAACC,EAASC,IACF,IAAtBJ,EAAUK,SACXL,EAAUM,SAASL,GAAa,WAC9BE,OAGJA,Q,kIAIWI,GACb,IAAI,IAAMC,KAAYD,EACpB,GAAGA,EAAOE,eAAeD,GACvB,OAAO,EAEX,OAAO,I,iFAGsBR,EAAWU,G,qEACrCV,EAAUW,S,gCACLX,EAAUW,SAASD,G,6CAGnBX,EAAMa,gBAAgBZ,EAAW,CACrCa,MAAM,UAAD,OAAYH,K,uLAKUV,EAAWU,G,qEACvCV,EAAUc,W,gCACLd,EAAUc,WAAWJ,G,6CAGrBX,EAAMa,gBAAgBZ,EAAW,CACrCa,MAAO,GACPE,QAASL,I,wPAMVM,OAAOC,Q,gCACFD,OAAOC,QAAQC,iB,wGCzBZC,E,qJAfenB,EAAWoB,EAAUC,G,oEAC5CD,IAAaC,E,gCACRtB,EAAMuB,kBAAkBtB,EAAW,+B,iCAClC,G,YAGNoB,EAASG,OATY,G,gCAUhBxB,EAAMuB,kBAAkBtB,EAAW,+B,iCAClC,G,iCAGF,G,sHCuDIwB,E,6OAlEIC,IAAKC,2B,iGAIX,M,sLAIWC,EAAUC,EAAOR,G,uFAClBK,IAAKI,OAAO,CAC7BF,WACAP,WACAU,WAAY,CACVF,MAAOA,K,cAJLG,E,yBASCA,EAAKC,oBAAoBC,a,iLAGTN,EAAUO,G,iFAC3BT,IAAKU,cAAcR,EAAUO,G,2LAGAP,G,uFAChBF,IAAKW,aAAaT,G,cAA/BI,E,yBACCA,EAAKM,oBAAoBJ,a,gLAGNN,G,uFACPF,IAAKa,eAAeX,G,cAAjCI,E,yBACCA,EAAKM,oBAAoBJ,a,+KAGPN,EAAUO,EAAMd,G,iFACnCK,IAAKc,qBAAqBZ,EAAUO,EAAMd,G,2KAG/BO,EAAUP,G,iFACrBK,IAAKe,OAAOb,EAAUP,G,6PAItBK,IAAKgB,U,qQAIWjB,EAAYkB,a,UAA5BC,E,gDAEG,M,gCAEFA,EAAQhB,U,4QAIOH,EAAYkB,a,UAA5BC,E,gDAEG,M,cAEHC,EAAiBD,EAAQE,uBACzBC,EAAcF,EAAeG,iB,kBAC5BD,EAAYE,e,wGCzDRC,EAVKC,OAAOC,OAAO,CAChCC,MAAO,EACPC,kBAAmB,EACnBC,kBAAmB,EACnBC,iBAAkB,EAClBC,SAAU,EACVC,gBAAiB,EACjBC,iBAAkB,ICEdC,G,OAAuB,+BAsMdC,E,kDAnMb,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GAEN,IAAMC,EAASD,EAAME,0BACNd,EAAYQ,gBAAkBR,EAAYO,SAJxC,OAKjB,EAAKQ,MAAQ,CACXnD,MAAO,GACPE,QAAS,GACTY,SAAUkC,EAAME,0BAChBE,YAAaJ,EAAMK,6BACnBJ,OAAQA,GAGV,EAAKK,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,wBAA0B,EAAKA,wBAAwBH,KAA7B,gBAhBd,E,oDAoBjBI,KAAKX,MAAMY,iB,wEAGE/D,G,wEACVA,EAAQgE,WAAWf,KACpBjD,EAAUA,EAAQiE,UAChBhB,EAAqBpC,OAAQb,EAAQa,OAAS,I,SAI5CxB,EAAMa,gBAAgB4D,KAAM,CAChC3D,MAAM,UAAD,OAAYH,GACjBK,QAAS,K,+KAIE6D,G,oFACbA,EAAMC,iBAEAC,EAAOF,EAAMG,OACbpD,EAAWmD,EAAKnD,SAASqD,MACzBpD,EAAQkD,EAAKlD,MAAMoD,MACnB5D,EAAW0D,EAAK1D,SAAS4D,MACzB3D,EAAkByD,EAAKzD,gBAAgB2D,MAEzCrD,GAAaC,GAAUR,GAAaC,E,iCAChCmD,KAAK7D,SAAS,sC,8CAInBgB,EAASJ,OAvDY,GAuDoBI,EAASJ,OAtD7B,I,kCAuDhBiD,KAAK7D,SACT,wCAzDoB,EAyDpB,mBAxDoB,GAwDpB,iB,2DAMsBQ,EAAY8D,eAAeT,KAAMpD,EAAUC,G,gGAKzCG,EAAY6C,SAAS1C,EAAUC,EAAOR,G,QAA1D6C,E,OACNlE,EAAMa,gBAAgB4D,KAAM,CAC1B3D,MAAO,GACPc,SAAUA,EACVsC,YAAaA,EACbH,OAAQb,EAAYQ,kB,oEAIhBe,KAAK7D,SAAS,KAAID,S,6LAIVkE,G,8EAChBA,EAAMC,iBAEA3C,EAAO0C,EAAMG,OAAO7C,KAAK8C,M,kBAEvBxD,EAAY8C,YAAYE,KAAKR,MAAMrC,SAAUO,G,OACnDnC,EAAMa,gBAAgB4D,KAAM,CAC1B3D,MAAO,GACPE,QAAS,GACT+C,OAAQb,EAAYS,mB,iEAIhBc,KAAK7D,SAAS,KAAID,S,uMAIEkE,G,0FAEpBpD,EAAY+C,wBAAwBC,KAAKR,MAAMrC,U,uBAC/C5B,EAAMmF,oBAAoBV,KAAM,gC,wEAGhCA,KAAK7D,SAAS,KAAID,S,6JAK1B8D,KAAKnE,SAAU,I,+BAIf,IA+DI8E,EA/DEC,EACJ,yBAAKC,UAAU,8BACXb,KAAKR,MAAMnD,OAAS,4BAAK2D,KAAKR,MAAMnD,OACtC,kDACA,0BAAMwE,UAAU,YAAYC,SAAUd,KAAKH,UACzC,2BAAOkB,QAAQ,qBAAf,YACA,2BAAOC,aAAa,MAAMC,KAAK,OAAOC,KAAK,WACpCC,GAAG,sBAEV,2BAAOJ,QAAQ,kBAAf,SACA,2BAAOC,aAAa,MAAMC,KAAK,OAAOC,KAAK,QACpCC,GAAG,mBAEV,2BAAOJ,QAAQ,qBAAf,YACA,2BAAOC,aAAa,MAAMC,KAAK,WAAWC,KAAK,WACxCC,GAAG,sBAEV,2BAAOJ,QAAQ,6BAAf,oBACA,2BAAOC,aAAa,MAAMC,KAAK,WAAWC,KAAK,kBACxCC,GAAG,8BAEV,2BAAON,UAAU,gCAAgCI,KAAK,SAC/CT,MAAM,eAKbY,EACJ,yBAAKP,UAAU,8BACXb,KAAKR,MAAMnD,OAAS,4BAAK2D,KAAKR,MAAMnD,OACpC2D,KAAKR,MAAMjD,SAAW,4BAAKyD,KAAKR,MAAMjD,SACxC,kDACA,iEACsCyD,KAAKR,MAAMC,YADjD,4HAKA,0BAAMoB,UAAU,YAAYC,SAAUd,KAAKF,aACzC,2BAAOiB,QAAQ,qBAAf,qBACA,2BAAOC,aAAa,MAAMC,KAAK,OAAOC,KAAK,OACpCG,IAAI,oBAAoBF,GAAG,sBAElC,4BAAQF,KAAK,SAASK,QAAStB,KAAKD,wBAC5Bc,UAAU,wCADlB,8CAKA,2BAAOA,UAAU,gCAAgCI,KAAK,SAC/CT,MAAM,aAKbe,EACJ,yBAAKV,UAAU,8BACb,qDACA,uBAAGA,UAAU,qBAAb,2IAQJ,OAAOb,KAAKR,MAAMF,QAChB,KAAKb,EAAYO,SACf2B,EAAcC,EACd,MACF,KAAKnC,EAAYQ,gBACf0B,EAAcS,EACd,MACF,KAAK3C,EAAYS,iBACfyB,EAAcY,EAKlB,OACE,yBAAKV,UAAU,kBACb,4BAAQS,QAAStB,KAAKL,MACdkB,UAAU,oDADlB,KAEEF,O,GA9LiBa,aC2OZC,E,kDA/Ob,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXnD,MAAO,GACPc,SAAU,KACVsC,YAAa,KACbH,OAAQD,EAAMC,QAAUb,EAAYG,OAGtC,EAAKe,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAK8B,MAAQ,EAAKA,MAAM9B,KAAX,gBACb,EAAK+B,uBAAyB,EAAKA,uBAAuB/B,KAA5B,gBAC9B,EAAK9B,eAAiB,EAAKA,eAAe8B,KAApB,gBACtB,EAAKgC,cAAgB,EAAKA,cAAchC,KAAnB,gBACrB,EAAKG,wBAA0B,EAAKA,wBAAwBH,KAA7B,gBAfd,E,oDAmBjBI,KAAKX,MAAMY,cAAa,K,qEAGdG,G,gFACVA,EAAMC,iBAEAC,EAAOF,EAAMG,OACbpD,EAAWmD,EAAKnD,SAASqD,MACzB5D,EAAW0D,EAAK1D,SAAS4D,MAE3BrD,GAAaP,E,gCACTrB,EAAMuB,kBAAkBkD,KAAM,sC,2EAM5BhD,EAAY0E,MAAMvE,EAAUP,G,QAClCoD,KAAKX,MAAMY,cAAa,G,qDAGR,8BAAb,KAAIvC,K,kCACqBV,EAAY+C,wBAAwB5C,G,eAAxDsC,E,iBACAO,KAAKX,MAAMwC,0BAA0B1E,EAAUsC,G,sHAQnDlE,EAAMuB,kBAAkBkD,KAAM,KAAI9D,S,8MAIfkE,G,iFACrB7E,EAAMa,gBAAgB4D,KAAM,CAChC3D,MAAO,GACPiD,OAAQb,EAAYI,oB,qLAIHuB,G,4EACnBA,EAAMC,iBAEAlD,EAAWiD,EAAMG,OAAOpD,SAASqD,M,gCAE/BjF,EAAMuG,mBAAmB9B,KAAM,+B,iEAKXhD,EAAYc,eAAeX,G,cAA/CsC,E,iBACAlE,EAAMa,gBAAgB4D,KAAM,CAChC3D,MAAO,GACPc,SAAUA,EACVsC,YAAaA,EACbH,OAAQb,EAAYK,oB,2EAIhBvD,EAAMuB,kBAAkBkD,KAAM,KAAI9D,S,8LAIxBkE,G,gFAClBA,EAAMC,iBAEAC,EAAOF,EAAMG,OACb7C,EAAO4C,EAAK5C,KAAK8C,MACjB5D,EAAW0D,EAAK1D,SAAS4D,MACzB3D,EAAkByD,EAAKzD,gBAAgB2D,MAEzC9C,GAASd,GAAaC,E,uBACxBtB,EAAMuB,kBAAkBkD,KAAM,sC,2CAINrD,EAAY8D,eAAeT,KAAMpD,EAAUC,G,gGAK7DG,EAAY4E,cAAc5B,KAAKR,MAAMrC,SAAUO,EAAMd,G,yBACrDrB,EAAMa,gBAAgB4D,KAAM,CAChC3D,MAAO,GACPE,QAAS,GACT+C,OAAQb,EAAYM,mB,4EAIhBxD,EAAMuB,kBAAkBkD,KAAM,KAAI9D,S,yMAIdkE,G,0FAEpBpD,EAAYc,eAAekC,KAAKR,MAAMrC,U,uBACtC5B,EAAMmF,oBAAoBV,KAAM,gC,wEAGhCzE,EAAMuB,kBAAkBkD,KAAM,KAAI9D,S,6JAK1C8D,KAAKnE,SAAU,I,+BAIf,IAmFI8E,EAnFEoB,EACJ,yBAAKlB,UAAU,8BACXb,KAAKR,MAAMnD,OAAS,4BAAK2D,KAAKR,MAAMnD,OACtC,sDACA,0BAAMwE,UAAU,YAAYC,SAAUd,KAAK0B,OACzC,2BAAOX,QAAQ,kBAAf,qBACA,2BAAOC,aAAa,MAAMC,KAAK,OAAOC,KAAK,WACpCG,IAAI,iBAAiBF,GAAG,mBAE/B,2BAAOJ,QAAQ,kBAAf,YACA,2BAAOC,aAAa,MAAMC,KAAK,WAAWC,KAAK,WACxCG,IAAI,iBAAiBF,GAAG,mBAE/B,4BAAQF,KAAK,SAASK,QAAStB,KAAK2B,uBAC5Bd,UAAU,wCADlB,yBAKA,2BAAOA,UAAU,cAAcI,KAAK,SAAST,MAAM,YAKnDwB,EACJ,yBAAKnB,UAAU,8BACXb,KAAKR,MAAMnD,OAAS,4BAAK2D,KAAKR,MAAMnD,OACtC,mDACA,2IAIA,0BAAMwE,UAAU,YAAYC,SAAUd,KAAKlC,gBACzC,2BAAOiD,QAAQ,kBAAf,qBACA,2BAAOC,aAAa,MAAMC,KAAK,OAAOC,KAAK,WACpCG,IAAI,iBAAiBF,GAAG,mBAE/B,2BAAON,UAAU,cAAcI,KAAK,SAAST,MAAM,aAKnDyB,EACJ,yBAAKpB,UAAU,8BACXb,KAAKR,MAAMnD,OAAS,4BAAK2D,KAAKR,MAAMnD,OACpC2D,KAAKR,MAAMjD,SAAW,4BAAKyD,KAAKR,MAAMjD,SACxC,mDACA,iEACuCyD,KAAKR,MAAMC,YADlD,8BAIA,0BAAMoB,UAAU,YAAYC,SAAUd,KAAK4B,eACzC,2BAAOb,QAAQ,cAAf,QACA,2BAAOC,aAAa,MAAMC,KAAK,OAAOC,KAAK,OACpCG,IAAI,aAAaF,GAAG,eAE3B,2BAAOJ,QAAQ,kBAAf,YACA,2BAAOC,aAAa,MAAMC,KAAK,WAAWC,KAAK,WACxCG,IAAI,iBAAiBF,GAAG,mBAE/B,2BAAOJ,QAAQ,0BAAf,oBACA,2BAAOC,aAAa,MAAMC,KAAK,WAAWC,KAAK,kBACxCG,IAAI,yBAAyBF,GAAG,2BAEvC,4BAAQF,KAAK,SAASK,QAAStB,KAAKD,wBAC5Bc,UAAU,wCADlB,8CAKA,2BAAOA,UAAU,cAAcI,KAAK,SAAST,MAAM,aAKnD0B,EACJ,yBAAKrB,UAAU,8BACb,uDACA,6GAQJ,OAAOb,KAAKR,MAAMF,QAChB,KAAKb,EAAYG,MACf+B,EAAcoB,EACd,MACF,KAAKtD,EAAYI,kBACf8B,EAAcqB,EACd,MACF,KAAKvD,EAAYK,kBACf6B,EAAcsB,EACd,MACF,KAAKxD,EAAYM,iBACf4B,EAAcuB,EAKlB,OACE,yBAAKrB,UAAU,kBACb,4BAAQS,QAAStB,KAAKL,MACdkB,UAAU,oDADlB,KAEEF,O,GA1Oca,aCsCTW,G,yDAtCb,WAAY9C,GAAQ,IAAD,8BACjB,cAAMA,IAED+C,OAAS,EAAKA,OAAOxC,KAAZ,gBAHG,E,+KAOX5C,EAAYoF,S,uBACZpC,KAAKX,MAAMgD,iB,qIAIjB,OACE,yBAAKxB,UAAU,aACb,4BACE,4BACE,kBAAC,IAAD,CAAMA,UAAU,qBAAqBS,QAAStB,KAAKX,MAAMiD,cACnDC,GAAE,iBAAYvC,KAAKX,MAAMlC,WAD/B,iBAKF,yBAAK0D,UAAU,sBACf,wBAAIA,UAAU,sBACZ,4BAAQA,UAAU,sBAAlB,aAIF,wBAAIA,UAAU,sBACZ,4BAAQA,UAAU,qBAAqBS,QAAStB,KAAKoC,QAArD,iB,GA7BWZ,cCsJRgB,E,kDAnJb,WAAYnD,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXrC,SAAU,KACVsF,kBAAkB,EAClBC,eAAe,EACfC,cAAc,EACdpD,0BAA2B,KAC3BG,6BAA8B,MAGhC,EAAKkD,gBAAkB,EAAKA,gBAAgBhD,KAArB,gBACvB,EAAKiD,mBAAqB,EAAKA,mBAAmBjD,KAAxB,gBAC1B,EAAKkD,gBAAkB,EAAKA,gBAAgBlD,KAArB,gBACvB,EAAKmD,eAAiB,EAAKA,eAAenD,KAApB,gBACtB,EAAKoD,aAAe,EAAKA,aAAapD,KAAlB,gBACpB,EAAKqD,WAAa,EAAKA,WAAWrD,KAAhB,gBAClB,EAAKsD,kBAAoB,EAAKA,kBAAkBtD,KAAvB,gBAEzBpD,OAAO2G,oBAAsB,EAAKN,mBApBjB,E,8LAwBM7F,EAAYoG,c,cAA7BjG,E,gBAEA5B,EAAMa,gBAAgB4D,KAAM,CAChC7C,SAAUA,EACVwF,cAAc,EACdpD,0BAA2B,O,0QAKvBS,KAAK4C,kB,wLAGYxC,G,qEACpBJ,KAAKR,MAAMiD,iB,gCACNlH,EAAMa,gBAAgB4D,KAAM,CAChCT,0BAA2B,KAC3BG,6BAA8B,O,uBAI5BnE,EAAMa,gBAAgB4D,KAAM,CAChCyC,kBAAmBzC,KAAKR,MAAMiD,mB,sLAIZrC,G,iFACd7E,EAAMa,gBAAgB4D,KAAM,CAChC0C,eAAgB1C,KAAKR,MAAMkD,gB,qLAIVtC,G,iFACb7E,EAAMa,gBAAgB4D,KAAM,CAChC2C,cAAe3C,KAAKR,MAAMmD,e,mLAIXvC,G,4EACXiD,EAAiBjD,EAAMkD,iBACRD,EAAeE,UAAUC,SAAS,sB,iEAGjDjI,EAAMa,gBAAgB4D,KAAM,CAChC2C,cAAc,I,iLAIDc,G,iFACTzD,KAAK8C,kB,WAERW,E,gCACKzD,KAAK4C,kB,wLAGSzF,EAAUsC,G,iFAC1BlE,EAAMa,gBAAgB4D,KAAM,CAChC0C,eAAe,EACfD,kBAAkB,EAClBlD,0BAA2BpC,EAC3BuC,6BAA8BD,I,sJAKhCO,KAAKnE,SAAU,I,+BAIf,IAAM6H,EACJ,yBAAK7C,UAAU,oBACb,4BAAQA,UAAU,qBAAqBS,QAAStB,KAAK8C,iBAArD,SAGA,0BAAMjC,UAAU,mBAChB,4BAAQA,UAAU,qBAAqBS,QAAStB,KAAK6C,oBAArD,sBAMEc,EACJ,yBAAK9C,UAAU,mBAAmB+C,SAAS,KACtCC,OAAQ7D,KAAKgD,cAChB,yBAAKnC,UAAU,oBACb,4BAAQA,UAAU,qBAAqBS,QAAStB,KAAK+C,gBACjD/C,KAAKR,MAAMrC,WAGjB,yBAAK0D,UAAU,oBAEXb,KAAKR,MAAMmD,cACX,kBAAC,EAAD,CAAUxF,SAAU6C,KAAKR,MAAMrC,SACrBmF,cAAetC,KAAK+C,eACpBV,eAAgBrC,KAAK4C,oBAMjCkB,EAAkB9D,KAAKR,MAAMrC,SAAWwG,EAAiBD,EAE/D,OACE,oCAEI1D,KAAKR,MAAMiD,kBACX,kBAAC,EAAD,CAAcxC,aAAcD,KAAK6C,mBACnBtD,0BACCS,KAAKR,MAAMD,0BACZG,6BACCM,KAAKR,MAAME,+BAG1BM,KAAKR,MAAMkD,eACX,kBAAC,EAAD,CAAWzC,aAAcD,KAAKiD,WACnBpB,0BAA2B7B,KAAKkD,oBAE3CY,O,GA9IetC,a,OCiBVuC,MAnBf,WACE,IAAMC,EAAOC,cAAcC,SACrBC,EAAkB,MAATH,GAAyB,UAATA,EACzBI,EAAiBD,EAAQ,SAAW,eAE1C,OACE,yBAAKtD,UAAWuD,GACZD,GAAS,6CACX,4BACE,4BACE,kBAAC,IAAD,CAAM5B,GAAG,SAAT,UAGJ,kBAAC,EAAD,MACA,0BAAM1B,UAAU,oB,oBC0DPwD,E,WAtEb,WAAYlD,GAAK,oBACfnB,KAAKmB,GAAKA,E,sDAIV,IAZcmD,EAAGC,EAAGC,EAAGC,EAYjBC,EAAYlI,OAAOmI,eACnBC,EAAgBF,EAAUG,WAAWC,cACrCC,EAAeL,EAAUM,UAAUF,cAErCG,EAAcC,OAAON,EAAcO,aAAa,UAChDC,EAAaF,OAAOH,EAAaI,aAAa,UAC9CE,EAAeX,EAAUW,aACzBC,EAAcZ,EAAUY,YAE5B,GAAGL,IAAgBG,GAAcC,IAAiBC,EAChD,MAAO,CACLC,aAAa,EACbC,MAAOP,EACPQ,SAAUJ,GAId,GA7BiBd,EA6BSc,EA7BHZ,EA6B6Ba,KA7BtChB,EA6BDW,MA7BOT,EA6BoBY,GA3BjCb,EAAIE,EACNH,EAAIE,GA0ByD,CAAC,IAAD,EAClC,CAAEY,EAAYH,GAA1CA,EAD8D,KACjDG,EADiD,WAEhC,CAAEE,EAAaD,GAA7CA,EAF8D,KAEhDC,EAFgD,KAKlE,MAAO,CACLC,aAAa,EACbG,UAAWT,EACXU,aAAcN,EACdO,WAAYR,EACZS,cAAeP,K,kCAIPE,EAAOC,GACjB,IAAMK,EAAeC,SAASC,eAAehG,KAAKmB,GAAKqE,GACnDS,EAAWH,EAAaI,WAAW,GAEnCD,IACFA,EAAWF,SAASI,eAAe,IACnCL,EAAaM,YAAYH,IAG3B,IAAII,EAAQN,SAASO,cACrBD,EAAME,SAASN,EAAUR,GACzBY,EAAMG,UAAS,GAEf,IAAI9B,EAAYlI,OAAOmI,eACvBD,EAAU+B,kBACV/B,EAAUgC,SAASL,K,uCAGJX,EAAWC,EAAcC,EAAYC,GACpD,IAAMc,EAAmBZ,SAASC,eAAehG,KAAKmB,GAAKuE,GACrDkB,EAAoBb,SAASC,eAAehG,KAAKmB,GAAKyE,GACtDiB,EAAeF,EAAiBT,WAAW,GAC3CY,EAAgBF,EAAkBV,WAAW,GAE/CG,EAAQN,SAASO,cACrBD,EAAME,SAASM,EAAclB,GAC7BU,EAAMU,OAAOD,EAAejB,GAE5B,IAAInB,EAAYlI,OAAOmI,eACvBD,EAAU+B,kBACV/B,EAAUgC,SAASL,O,KCnERW,EANKtI,OAAOC,OAAO,CAChCsI,KAAO,EACPC,OAAS,EACTC,UAAY,IC8DCC,E,kDA5Db,WAAY/H,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACX6H,KAAM,GAGR,EAAKC,cAAe,EACpB,EAAKC,WAAa,EAAKA,WAAW3H,KAAhB,gBARD,E,gGAWF4H,G,wEACfxH,KAAKsH,cAAe,E,SAEd/L,EAAMa,gBAAgB4D,KAAM,CAChCqH,KAAOrH,KAAKR,MAAM6H,KAAOG,I,OAG3BxH,KAAKX,MAAMoI,SAASD,GAAMxH,KAAKR,MAAM6H,KAAOG,GAAO,G,gQAIhDxH,KAAKsH,a,uBACNtH,KAAKsH,cAAe,E,6BAInBtH,KAAKX,MAAMgI,OAASrH,KAAKR,MAAM6H,K,gCAC1B9L,EAAMa,gBAAgB4D,KAAM,CAChCqH,KAAMrH,KAAKX,MAAMgI,O,qIAKb,IAAD,OACDK,GAAgB1H,KAAKR,MAAM6H,KAAOL,EAAYC,MAAQ,EACtDU,GAAkB3H,KAAKR,MAAM6H,KAAOL,EAAYE,QAAU,EAC1DU,GAAqB5H,KAAKR,MAAM6H,KAAOL,EAAYG,WAAa,EAEtE,OACE,yBAAKtG,UAAU,4BACb,4BACE,wBAAIA,UAAS,2BAAsB6G,IACjC,4BAAQzG,KAAK,SAASJ,UAAU,4BACxBS,QAAS,kBAAM,EAAKiG,WAAWP,EAAYC,UAErD,wBAAIpG,UAAS,2BAAsB8G,IACjC,4BAAQ1G,KAAK,SAASJ,UAAU,8BACxBS,QAAS,kBAAM,EAAKiG,WAAWP,EAAYE,YAErD,wBAAIrG,UAAS,2BAAsB+G,IACjC,4BAAQ3G,KAAK,SAASJ,UAAU,iCACxBS,QAAS,kBAAM,EAAKiG,WAAWP,EAAYG,qB,GArDzC3F,aCHtB,SAASqG,EAAgBC,GACvB,IAD4B,EACxBC,EAAU,EADc,cAELD,GAFK,IAE5B,IAAI,EAAJ,qBAA4B,CAAC,IAAnBE,EAAkB,QAC1B9C,OAAO8C,GACPD,KAJ0B,8BAM5B,OAAOA,E,IA+KME,E,WA3Kb,WAAYC,GAIV,GAJ2B,oBAC3BlI,KAAKmI,WAAa,GAClBnI,KAAKoI,oBAAsB,EAExBF,EAAgB,CAAC,IAAD,gBACEA,GADF,IACjB,IAAI,EAAJ,qBAAmC,CAAC,IAAD,EAAzBG,EAAyB,QAC3BhB,EAAOgB,EAAMC,EADc,cAEfD,EAAM7D,GAFS,IAEjC,IAAI,EAAJ,qBAA2B,CAAC,IAAlB+D,EAAiB,QACzBvI,KAAKmI,WAAWK,KAAK,CACnBF,EAAGjB,EACH7C,EAAG+D,KAL0B,gCADlB,8BAYjBvI,KAAKmI,WAAWM,OAAOzI,KAAKmI,WAAWpL,OAAS,GAGlDiD,KAAK0I,e,gEAGaC,GAElB,IADA,IAAIC,EAAoB,EAChBC,EAAI,EAAGA,EAAI7I,KAAK8I,OAAO/L,OAAQ8L,IAAK,CAC1C,IACME,EAAclB,EADN7H,KAAK8I,OAAOD,GACgBrE,GACpCwE,EAAgBJ,EAAoBG,EAE1C,GAAGJ,GAAeK,EAEhB,IADA,IAAIvD,EAAW,EACPwD,EAAIL,EAAmBK,GAAKD,EAAeC,IAAK,CACtD,GAAGN,IAAgBM,EACjB,MAAO,CAAEJ,EAAGpD,GAEdA,GAAYzF,KAAKmI,WAAWc,GAAGzE,EAAEzH,OAGrC6L,GAAqBG,EAGvB,MAAO,CAAE,KAAM,Q,qCAGFvD,EAAOC,GAGpB,IAFA,IAAIkD,EAAc3I,KAAKkJ,YAAY1D,GAC/B2D,EAAmB,EACjBA,EAAmB1D,GACvB0D,GAAoBnJ,KAAKmI,WAAWQ,GAAanE,EAAEzH,OACnD4L,IAGF,OAAGQ,IAAqB1D,EACfkD,EAEFA,EAAc,I,uCAGNnD,EAAOC,EAAUF,GAChC,IAAMoD,EAAc3I,KAAKoJ,eAAe5D,EAAOC,GAE/C,OAAmB,IAAhBkD,EACM3I,KAAKmI,WAAW,GAAGG,EAEpB/C,EACCvF,KAAKmI,WAAWQ,GAAaL,EAE/BtI,KAAKmI,WAAWQ,EAAc,GAAGL,I,6BAGnC9C,EAAOC,EAAU4D,EAAgBhC,GACtC,IAD4C,EACtCsB,EAAc3I,KAAKoJ,eAAe5D,EAAOC,GACzC6D,EAActJ,KAAKmI,WAAWM,OAAOE,GAFC,cAI1BU,GAJ0B,IAI5C,IAAI,EAAJ,qBAAkC,CAAC,IAAzBd,EAAwB,QAChCvI,KAAKmI,WAAWK,KAAK,CACnBF,EAAGjB,EACH7C,EAAG+D,KAPqC,8BAW5C,IAX4C,EAWtCH,EAAsBpI,KAAKmI,WAAWpL,OAXA,cAYrBuM,GAZqB,IAY5C,IAAI,EAAJ,qBAAoC,CAAC,IAA3BtB,EAA0B,QAClChI,KAAKmI,WAAWK,KAAKR,IAbqB,8BAiB5C,OADAhI,KAAK0I,eACE1I,KAAKuJ,oBAAoBnB,K,6BAG3B1C,EAAWC,EAAcC,EAAYC,GAC1C,IAAM2D,EAAkBxJ,KAAKoJ,eAAe1D,EAAWC,GAEjD8D,EADmBzJ,KAAKoJ,eAAexD,EAAYC,GACjB2D,EAExC,GAAGA,EAAkB,EACnB,MAAO,CAAE,EAAG,GAGdxJ,KAAKmI,WAAWM,OAAOe,EAAiBC,GACxC,IAAMrB,EAAsBoB,EAG5B,OADAxJ,KAAK0I,eACE1I,KAAKuJ,oBAAoBnB,K,sCAGlB1C,EAAWC,EAAcC,EAAYC,EAAe2B,EAAKkC,GAIvE,IAHA,IAAMF,EAAkBxJ,KAAKoJ,eAAe1D,EAAWC,GACjDgE,EAAmB3J,KAAKoJ,eAAexD,EAAYC,GAEjDgD,EAAIW,EAAiBX,EAAIc,EAAkBd,KAC7Ca,KAAQ1J,KAAKmI,WAAWU,GAAGP,EAAId,KAC9BkC,GAAO1J,KAAKmI,WAAWU,GAAGP,EAAId,KACjCxH,KAAKmI,WAAWU,GAAGP,EAAItI,KAAKmI,WAAWU,GAAGP,EAAId,GAIlDxH,KAAK0I,eAXsE,MAajC1I,KAAKuJ,oBAAoBC,GAbQ,mBAanEI,EAbmE,KAarDC,EAbqD,OAc/B7J,KAAKuJ,oBAAoBI,GAdM,mBAe3E,MAAO,CAAEC,EAAcC,EAfoD,a,qCAkB7D,IAAD,OACb,GAA8B,IAA3B7J,KAAKmI,WAAWpL,OAMjB,OALAiD,KAAK8I,OAAS,CACZ,CAAER,EAAG,EAAG9D,EAAG,UAEbxE,KAAKkJ,YAAc,CAAE,IAKvBlJ,KAAK8I,OAAS,GACd9I,KAAKkJ,YAAc,GAEnB,IAAIY,EAAc9J,KAAKmI,WAAW,GAAGG,EACjCyB,EAAkB,GACtB/J,KAAKmI,WAAW6B,SAAQ,SAAChC,EAAWa,GAC/Bb,EAAUM,IAAMwB,GACjB,EAAKhB,OAAON,KAAK,CACfF,EAAGwB,EACHtF,EAAGuF,EAAgBE,KAAK,MAE1B,EAAKf,YAAYV,KAAKK,EAAIkB,EAAgBhN,QAE1C+M,EAAc9B,EAAUM,EACxByB,EAAkB,CAAE/B,EAAUxD,IAG9BuF,EAAgBvB,KAAKR,EAAUxD,MAInCxE,KAAK8I,OAAON,KAAK,CACfF,EAAGwB,EACHtF,EAAGuF,EAAgBE,KAAK,MAE1BjK,KAAKkJ,YAAYV,KAAKxI,KAAKmI,WAAWpL,OAASgN,EAAgBhN,QAI/DiD,KAAK8I,OAAO9I,KAAK8I,OAAO/L,OAAS,GAAGyH,GAAK0F,OAAOC,aAAa,M,mCAI7D,OAAOnK,KAAK8I,W,KC/KhB,SAASsB,EAAa/C,GACpB,IAAIxG,EAAY,GAChB,IAAI,IAAMwJ,KAASrD,EACdK,EAAOL,EAAYqD,KACpBxJ,GAAS,kBAAewJ,EAAf,MAGb,OAAOxJ,E,IAkBMyJ,E,uKAbX,IAAMjC,EAAQrI,KAAKX,MAAMgJ,MACnBkC,EAAWvK,KAAKX,MAAM8B,GACtBqE,EAAQxF,KAAKX,MAAMmG,MAEzB,OACE,yBAAK3E,UAAWuJ,EAAa/B,EAAMC,GAAInH,GAAIoJ,EAAW/E,EACjDgF,+BAA+B,OAAOhF,MAAOA,GAC9C6C,EAAM7D,O,GATIhD,aCOLiJ,MAjBf,YAAuD,IAA1BC,EAAyB,EAAzBA,QAASvJ,EAAgB,EAAhBA,GAAIwJ,EAAY,EAAZA,SACpCC,EAAkB,GAOtB,OANAF,EAAQV,SAAQ,SAAC3B,EAAOQ,GACtB+B,EAAgBpC,KACd,kBAAC,EAAD,CAAOH,MAAOA,EAAOlH,GAAIA,EAAIqE,MAAOqD,EAAGxH,IAAKwH,QAK9C,yBAAKhI,UAAU,wBAAwBM,GAAIA,EAAIyC,SAAS,IACnDiH,gBAAiBF,EAAUH,+BAA+B,OAC1DM,WAAW,SACTF,ICkFIG,EAjGe,SAACC,GAC7BA,EAAKC,WAAWC,iBAAiB,UAAjC,uCAA4C,WAAO9K,GAAP,SAAAkE,EAAA,yDAEzB,WAAdlE,EAAMiB,IAFiC,gBAGxCjB,EAAMC,iBAHkC,0BAKpB,cAAdD,EAAMiB,KAAwB2J,EAAKG,UALD,iCAMlCH,EAAKI,SAN6B,OAOxChL,EAAMC,iBAPkC,2BASpB,UAAdD,EAAMiB,KAAoB2J,EAAKG,UATG,kCAUlCH,EAAKK,OAAOnB,OAAOC,aAAa,KAVE,QAWxC/J,EAAMC,iBAXkC,4CAA5C,uDAeA2K,EAAKC,WAAWC,iBAAiB,cAAjC,uCAAgD,WAAO9K,GAAP,eAAAkE,EAAA,0DAC3ClE,EAAMkL,cAAeN,EAAKG,UADiB,oDAK9C/K,EAAMC,iBAGiB,0BAApBD,EAAMmL,UARqC,wBAS5CP,EAAKQ,UAAUjG,aAAc,EACvB8D,EAAiBjJ,EAAMqL,aAAaC,QAAQ,QAVN,SAWtCV,EAAKK,OAAOhC,GAX0B,mCAetCjJ,EAAMuL,KAfgC,kCAgBtCX,EAAKK,OAAOjL,EAAMuL,MAhBoB,4CAAhD,uDAoBAX,EAAKC,WAAWC,iBAAiB,QAAjC,uCAA0C,WAAO9K,GAAP,eAAAkE,EAAA,6DACxClE,EAAMC,iBAEAuL,EAAYxL,EAAMyL,cAAcH,QAAQ,QAHN,SAIlCV,EAAKK,OAAOO,GAJsB,2CAA1C,uDAOAZ,EAAKC,WAAWC,iBAAiB,mBAAjC,uCAAqD,WAAO9K,GAAP,eAAAkE,EAAA,0DAChD0G,EAAKQ,UAAUjG,YADiC,gCAE3CyF,EAAKI,SAFsC,OAKnDJ,EAAKG,WAAY,EACjBH,EAAKc,iBAAmBd,EAAKQ,UAAUhG,MACvCwF,EAAKe,oBAAsBf,EAAKQ,UAAU/F,UAGtCuG,EAAmBjG,SAASC,eAAegF,EAAK7J,IACjD6J,EAAKc,iBAAmB,MAEzBE,EAAiBC,aAAa,kBAAmB,SAbA,2CAArD,uDAiBAjB,EAAKC,WAAWC,iBAAiB,iBAAjC,uCAAmD,WAAO9K,GAAP,eAAAkE,EAAA,yDAC7C0G,EAAKG,UADwC,wDAM7Ca,EAAmBjG,SAASC,eAAegF,EAAK7J,IACjD6J,EAAKc,iBAAmB,MAEzBE,EAAiBC,aAAa,kBAAmB,QAGnDjB,EAAKG,WAAY,EAZgC,SAa3CH,EAAKkB,kBAAkB9L,EAAMuL,MAbc,2CAAnD,uDAgBA5F,SAASmF,iBAAiB,kBAA1B,uCAA6C,WAAO9K,GAAP,mBAAAkE,EAAA,0DACxC0G,EAAKG,UADmC,6DAMnCzG,EAAYlI,OAAOmI,eACnBC,EAAgBF,EAAUG,WAAWC,cACrCA,EAAgBF,EAAcE,cAEjCF,EAAcO,aAAa,QAAU6F,EAAK7J,GAAK,KAC/C2D,EAAcK,aAAa,QAAU6F,EAAK7J,GAXJ,gCAYjC6J,EAAKmB,mBAZ4B,mHAA7C,wDC4IaC,G,yDA9Mb,WAAY/M,GAAQ,IAAD,8BACjB,cAAMA,IAED8B,GAAK,EAAK9B,MAAMgN,UAAX,0BACqB,EAAKhN,MAAMgN,WAAc,mBACxD,EAAKC,kBAAoB,IAAIrE,EAAkB,EAAK5I,MAAM6I,gBAC1D,EAAKqE,MAAQ,IAAIlI,EAAM,EAAKlD,IAE5B,EAAKqL,gBAAiB,EACtB,EAAKhB,UAAY,CACfjG,aAAa,EACbC,MAAO,EACPC,SAAU,GAGZ,EAAK0F,WAAY,EACjB,EAAKW,iBAAmB,KACxB,EAAKC,oBAAsB,KAE3B,EAAKvM,MAAQ,CACXkL,QAAS,EAAK4B,kBAAkBG,aAChCC,WAAY,GAGd,EAAKC,cAAgB,EAAKA,cAAc/M,KAAnB,gBAxBJ,E,kLA4BbI,KAAKwL,UAAUjG,aAMb,EACgDvF,KAAKsM,kBAAkBlB,OACzEpL,KAAKwL,UAAU9F,UAAW1F,KAAKwL,UAAU7F,aACzC3F,KAAKwL,UAAU5F,WAAY5F,KAAKwL,UAAU3F,eAHzC,mBACD7F,KAAKwL,UAAUhG,MADd,KACqBxF,KAAKwL,UAAU/F,SADpC,OAN4B,EACqBzF,KAAKsM,kBAAkBlB,OACzEpL,KAAKwL,UAAUhG,MAAOxF,KAAKwL,UAAU/F,SAAW,EAChDzF,KAAKwL,UAAUhG,MAAOxF,KAAKwL,UAAU/F,UAHT,mBAC5BzF,KAAKwL,UAAUhG,MADa,KACNxF,KAAKwL,UAAU/F,SADT,MAahCzF,KAAKwL,UAAUjG,aAAc,E,SACvBvF,KAAK4M,a,4KAGAC,G,4EACX7M,KAAK8M,mBAEF9M,KAAKwL,UAAUjG,Y,gCACVvF,KAAKoL,S,gBAGuCpL,KAAKsM,kBAAkBjB,OACzErL,KAAKwL,UAAUhG,MAAOxF,KAAKwL,UAAU/F,SAAUoH,EAC/C7M,KAAKR,MAAMkN,Y,mBAFX1M,KAAKwL,UAAUhG,M,KAAOxF,KAAKwL,UAAU/F,S,KAKvCzF,KAAKwL,UAAUjG,aAAc,E,UACvBvF,KAAK4M,a,yLAGWC,G,kFAC8B7M,KAAKsM,kBAAkBjB,OACzErL,KAAK8L,iBAAkB9L,KAAK+L,oBAAqBc,EACjD7M,KAAKR,MAAMkN,Y,mBAFX1M,KAAKwL,UAAUhG,M,KAAOxF,KAAKwL,UAAU/F,S,KAKvCzF,KAAKwL,UAAUjG,aAAc,E,SACvBvF,KAAK4M,a,sLAGSpF,EAAKkC,G,4EACrB1J,KAAKwL,UAAUjG,Y,0DAMnBvF,KAAKsM,kBAAkBS,gBACrB/M,KAAKwL,UAAU9F,UAAW1F,KAAKwL,UAAU7F,aACzC3F,KAAKwL,UAAU5F,WAAY5F,KAAKwL,UAAU3F,cAAe2B,EAAKkC,G,mBAJ9D1J,KAAKwL,UAAU9F,U,KAAW1F,KAAKwL,UAAU7F,a,KACzC3F,KAAKwL,UAAU5F,W,KAAY5F,KAAKwL,UAAU3F,c,eAMtC7F,KAAK4M,a,8PAIX5M,KAAKwM,gBAAiB,E,SAChBjR,EAAMa,gBAAgB4D,KAAM,CAChC0K,QAAS1K,KAAKsM,kBAAkBG,e,gLAInBO,G,iFACTzR,EAAMa,gBAAgB4D,KAAM,CAChC0M,WAAYM,I,oLAIIxF,EAAKkC,G,wEACvB1J,KAAKiL,WAAWgC,Q,SACVjN,KAAKuH,WAAWvH,KAAKR,MAAMkN,WAAalF,G,uBACxCxH,KAAK+M,gBAAgBvF,EAAKkC,G,iJAIhC,IAAMwD,EAAelN,KAAKuM,MAAMY,UAG7BD,EAAa3H,aACdvF,KAAKwL,UAAU9F,UAAYwH,EAAaxH,UACxC1F,KAAKwL,UAAU7F,aAAeuH,EAAavH,aAC3C3F,KAAKwL,UAAU5F,WAAasH,EAAatH,WACzC5F,KAAKwL,UAAU3F,cAAgBqH,EAAarH,cAC5C7F,KAAKwL,UAAUjG,aAAc,IAG7BvF,KAAKwL,UAAUhG,MAAQ0H,EAAa1H,MACpCxF,KAAKwL,UAAU/F,SAAWyH,EAAazH,SACvCzF,KAAKwL,UAAUjG,aAAc,K,gKAK/BvF,KAAK8M,kBAIHM,EADCpN,KAAKwL,UAAUjG,YACIvF,KAAKsM,kBAAkBe,iBACzCrN,KAAKwL,UAAU9F,UAAW1F,KAAKwL,UAAU7F,cAAc,GAIrC3F,KAAKsM,kBAAkBe,iBACzCrN,KAAKwL,UAAUhG,MAAOxF,KAAKwL,UAAU/F,UAAU,G,SAI7CzF,KAAKuH,WAAW6F,G,gJAItBpN,KAAKiL,WAAalF,SAASC,eAAehG,KAAKmB,IAC/C4J,EAAsB/K,Q,2CAItB,GAAIA,KAAKwM,eAAT,CAMA,IAPmB,EAOfc,EAAY,GAPG,cAQDtN,KAAKiL,WAAW/E,YARf,IAQnB,IAAI,EAAJ,qBAA8C,CAAC,IAArCqH,EAAoC,QACzCA,EAAKC,WAAaC,KAAKC,WAA+B,OAAlBH,EAAKI,UACvB,SAAlBJ,EAAKI,UACNL,EAAU9E,KAAK+E,IAXA,8BAenB,IAAI,IAAJ,MAAkBD,EAAlB,eAA6B,CAAzB,IAAMC,EAAI,KACZvN,KAAKiL,WAAW2C,YAAYL,GAG9B,IAAI,IAAI1E,EAAI,EAAGA,EAAI7I,KAAKR,MAAMkL,QAAQ3N,OAAQ8L,IAAK,CACjD,IAAIgF,EAAe7N,KAAKiL,WAAW6C,SAASjF,GACzCgF,EAAaE,YAAc/N,KAAKR,MAAMkL,QAAQ7B,GAAGrE,IAClDqJ,EAAa3H,WAAW,GAAG8H,UAAYhO,KAAKR,MAAMkL,QAAQ7B,GAAGrE,GAI9DxE,KAAKwL,UAAUjG,YAChBvF,KAAKuM,MAAM0B,iBACTjO,KAAKwL,UAAU9F,UAAW1F,KAAKwL,UAAU7F,aACzC3F,KAAKwL,UAAU5F,WAAY5F,KAAKwL,UAAU3F,eAI5C7F,KAAKuM,MAAM2B,YAAYlO,KAAKwL,UAAUhG,MAAOxF,KAAKwL,UAAU/F,UAG9DzF,KAAKwM,gBAAiB,EACtBxM,KAAK8M,kBAGF9M,KAAKX,MAAM8O,UACZnO,KAAKX,MAAM8O,SAASnO,KAAKR,MAAMkL,Y,6CAKjC1K,KAAKnE,SAAU,I,+BAIf,OACE,yBAAKgF,UAAU,mBAAmBM,GAAInB,KAAKmB,GAAK,KAC9C,kBAAC,EAAD,CAASkG,KAAMrH,KAAKR,MAAMkN,WAAYjF,SAAUzH,KAAK2M,gBACrD,kBAAC,EAAD,CAAmBjC,QAAS1K,KAAKR,MAAMkL,QAASvJ,GAAInB,KAAKmB,GACtCwJ,UAAU,S,GAzMZnJ,cCaV4M,E,4SAhBL7S,EAAM8S,gB,gIAIZ,OACE,yBAAKxN,UAAU,kBACb,yBAAKA,UAAU,kDACb,+IAGF,kBAAC,EAAD,W,GAZcW,aCOP8M,MARf,WACE,OACE,oCACE,kBAAC,EAAD,QCQSC,MAZf,YAA6B,IAAThR,EAAQ,EAARA,KAClB,OACE,oCACE,wBAAIsD,UAAU,kBAAkBtD,EAAKJ,UAEnCI,EAAKH,OACL,qCAAWG,EAAKH,MAAhB,4BCyJOoR,G,yDAzJb,WAAYnP,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXiP,SAAS,EACTC,WAAY,GACZC,wBAAyB,GACzBC,aAAa,EACbC,QAAS,GACTC,gBAAiB,IAGnB,EAAKC,aAAe,EAAKA,aAAanP,KAAlB,gBACpB,EAAKoP,WAAa,EAAKA,WAAWpP,KAAhB,gBAClB,EAAKqP,YAAc,EAAKA,YAAYrP,KAAjB,gBACnB,EAAKsP,mBAAqB,EAAKA,mBAAmBtP,KAAxB,gBAfT,E,4DAkBHuP,GACd,IADsB,EAChBC,EAAoB,GADJ,cAELpP,KAAKX,MAAMgQ,MAFN,IAEtB,IAAI,EAAJ,0BAAUhO,EAAV,QACE+N,EAAkB5G,KAAK2G,EAAO9N,KAHV,8BAKtB,OAAO+N,EAAkBnF,KAAK,S,oKAI1B6E,EAAkB,GAChBJ,EAAa1O,KAAKR,MAAMkP,WAAWY,c,cAErBtP,KAAKR,MAAMqP,S,4DAArBM,E,QAlCM,KAmCXL,EAAgB/R,O,uDAGEiD,KAAKuP,gBAAgBJ,GAC1BG,cAAcE,SAASd,G,wBACrCI,EAAgBtG,KAAK2G,G,8CAINnP,KAAKX,MAAMgQ,M,8DAAlBhO,E,SACL8N,EAAO9N,GAAKiO,cAAcE,SAASd,G,wBACpCI,EAAgBtG,KAAK2G,G,8TAMrB5T,EAAMa,gBAAgB4D,KAAM,CAChC8O,gBAAiBA,I,sNAIIW,G,2EACpBA,EAAUC,WAAc1P,KAAKX,MAAMqQ,U,gCAC9BnU,EAAMa,gBAAgB4D,KAAM,CAChC0O,WAAY,K,2CAKb1O,KAAKX,MAAMqQ,YAAcD,EAAUC,U,iEAGhCnU,EAAMa,gBAAgB4D,KAAM,CAChC0O,WAAY,GACZD,SAAS,I,wBAEWzO,KAAKX,MAAMsQ,S,eAA3Bd,E,iBAEAtT,EAAMa,gBAAgB4D,KAAM,CAChCyO,SAAS,EACTE,wBAAyB,GACzBE,QAASA,EACTD,aAAa,I,yBAGT5O,KAAK4P,gB,oLAGMxP,G,iFACX7E,EAAMa,gBAAgB4D,KAAM,CAChC0O,WAAYtO,EAAMG,OAAOC,Q,uBAGrBR,KAAK4P,gB,iLAGIxP,G,4EACTiD,EAAiBjD,EAAMkD,gBACRD,EAAelC,KAAf,yBAAwCnB,KAAKX,MAAM6B,M,iEAGlE3F,EAAMa,gBAAgB4D,KAAM,CAChC4O,aAAa,EACbF,WAAY1O,KAAKR,MAAMmP,0B,kLAITvO,G,iFACV7E,EAAMa,gBAAgB4D,KAAM,CAChC4O,aAAa,I,yLAIQiB,EAASC,G,iFAC1BvU,EAAMa,gBAAgB4D,KAAM,CAChC0O,WAAYoB,EACZnB,wBAAyBmB,EACzBlB,aAAa,I,uBAGT5O,KAAK4P,gB,OACX5P,KAAKX,MAAMoI,SAASoI,G,sJAIpB7P,KAAKnE,SAAU,I,+BAGP,IAAD,SACHkU,EAAiB,GADd,cAEa/P,KAAKR,MAAMsP,iBAFxB,yBAEGK,EAFH,QAGCW,EAAe,EAAKP,gBAAgBJ,GACpCa,EAAgBb,EAAO,EAAK9P,MAAM4Q,YAClCJ,EAAUV,EAAM,GACtBY,EAAevH,KACb,wBAAIlH,QAAS,kBAAM,EAAK4N,mBAAmBW,EAASG,IAChD3O,IAAKwO,GACJC,KAPT,IAAI,EAAJ,qBAAiD,IAF1C,8BAcP,OACE,yBAAKjM,OAAQ7D,KAAKgP,WAAYnO,UAAU,iBACtC,2BAAOA,UAAWb,KAAKR,MAAMiP,QAAU,oBAAsB,GACtDN,SAAUnO,KAAK+O,aAAc/N,aAAa,MAAMC,KAAK,OACrDT,MAAOR,KAAKR,MAAMkP,WAAYwB,QAASlQ,KAAKiP,YAC5C/N,KAAMlB,KAAKX,MAAM6B,KAAMC,GAAInB,KAAKX,MAAM8B,GACtCgP,UAAWnQ,KAAKX,MAAMsQ,QAAU3P,KAAKR,MAAMiP,UAEhDsB,EAAehT,OAAS,GAAKiD,KAAKR,MAAMoP,aACxC,wBAAIzN,GAAE,yBAAoBnB,KAAKX,MAAM6B,MAAQ0C,SAAS,KAClD/C,UAAU,yBACVkP,Q,GAlJavO,c,kBCHZ4O,EAJM1R,OAAOC,OAAO,CACjC0R,aAAc,iEC+DDC,E,4GA3DSpP,EAAMhF,GAC1B,IAAMqU,EAAMC,MAAMtU,GAGlB,OAFAqU,EAAIrP,KAAOA,EAEJqP,I,mFAGwBE,G,0EACR,MAApBA,EAASC,O,gCACiBD,EAASE,O,aAA9BC,E,OACAN,EAAIO,eAAeD,EAAa1P,KAAM0P,EAAa1U,S,UAE/B,MAApBuU,EAASC,O,sBACTF,MAAM,mB,iLAIaM,EAAUjC,EAASkC,G,yFACpB/T,EAAYuB,iB,cAAhCD,E,gBAEiB0S,MAAMZ,EAAaC,aAAeS,EAAU,CACjEC,OAAQA,EACRE,KAAMC,KAAKC,UAAUtC,GACrBuC,QAAS,CACPC,cAAe/S,K,cAJbmS,E,gBAQAH,EAAIgB,oBAAoBb,G,wBACjBA,EAASE,O,uNAGHG,EAAUjC,G,kFACvB7K,E,UAAU8M,E,YAAYS,IAAYJ,UAAUtC,I,SACxB7R,EAAYuB,iB,cAAhCD,E,gBAEiB0S,MAAMZ,EAAaC,aAAerM,EAAM,CAC7DoN,QAAS,CACPC,cAAe/S,K,cAFbmS,E,gBAMAH,EAAIgB,oBAAoBb,G,wBACjBA,EAASE,O,sNAGFG,EAAUjC,G,iFACjByB,EAAIkB,gBAAgBV,EAAUjC,EAAS,Q,mNAGjCiC,EAAUjC,G,iFAChByB,EAAIkB,gBAAgBV,EAAUjC,EAAS,O,sNAG9BiC,EAAUjC,G,iFACnByB,EAAIkB,gBAAgBV,EAAUjC,EAAS,U,mJCrDzC4C,EAPK/S,OAAOC,OAAO,CAChC+S,OAAQ,CAAElR,MAAO,EAAGmR,KAAM,SAAUC,IAAK,UACzCC,SAAU,CAAErR,MAAO,EAAGmR,KAAM,WAAYC,IAAK,YAC7CE,cAAe,CAAEtR,MAAO,EAAGmR,KAAM,qBAAsBC,IAAK,iBAC5DG,SAAU,CAAEvR,MAAO,EAAGmR,KAAM,WAAYC,IAAK,cCsDhCI,E,+GAtDYC,GACvB,IAAI,IAAIpJ,EAAI,EAAGA,EAAIoJ,EAASlV,OAAQ8L,IAClCoJ,EAASpJ,GAAGqJ,SAAWD,EAASpJ,GAAGsJ,GAAGC,WAAW,IAAK,M,2EAIjCC,G,8EACjBxD,EAAU,CACdwD,SAAUA,G,SAGC/B,EAAIgC,QAAQ,WAAYzD,G,qNAGdwD,EAAUE,G,gFAC3B1D,EAAU,CACdwD,SAAUA,EACVE,UAAWA,G,SAGQjC,EAAIgC,QAAQ,WAAYzD,G,cAAzCoD,E,OACJD,EAAYQ,kBAAkBP,G,kBAEvBA,G,kLAGmBI,EAAUI,G,8EAC9B5D,EAAU,CACdwD,SAAUA,EACVI,UAAWA,G,SAGAnC,EAAIgC,QAAQ,WAAYzD,G,qLAGb6D,GAExB,IAAI,IAAMlT,KADVkT,EAAmBC,SAASD,GACTjB,EACjB,GAAGA,EAAYjS,GAAOgB,QAAUkS,EAC9B,OAAOjB,EAAYjS,GAAOmS,O,6CAKFe,GAE5B,IAAI,IAAMlT,KADVkT,EAAmBC,SAASD,GACTjB,EACjB,GAAGA,EAAYjS,GAAOgB,QAAUkS,EAC9B,OAAOjB,EAAYjS,GAAOoS,Q,KCkFnBgB,G,yDA/Hb,WAAYvT,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXnD,MAAO,GACPgW,SAAU,KACVQ,eAAgB,KAChBC,eAAgB,KAChBC,mBAAmB,GAGrB,EAAKpT,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKoT,qBAAuB,EAAKA,qBAAqBpT,KAA1B,gBAC5B,EAAKqT,wBAA0B,EAAKA,wBAAwBrT,KAA7B,gBAC/B,EAAKsT,qBAAuB,EAAKA,qBAAqBtT,KAA1B,gBAC5B,EAAKuT,qBAAuB,EAAKA,qBAAqBvT,KAA1B,gBAC5B,EAAKwT,WAAa,EAAKA,WAAWxT,KAAhB,gBAhBD,E,oDAoBjBI,KAAKX,MAAMoI,SAAS,KAAM,KAAM,Q,oFAGPrH,G,iFACnB7E,EAAMa,gBAAgB4D,KAAM,CAChCqS,SAAUjS,EAAMG,OAAOC,Q,8LAIGJ,G,iFACtB7E,EAAMa,gBAAgB4D,KAAM,CAChC+S,mBAAoB/S,KAAKR,MAAMuT,kBAC/BF,eAAgB,KAChBC,eAAgB,O,2LAIOjD,G,iFACnBtU,EAAMa,gBAAgB4D,KAAM,CAChC6S,eAAgBhD,EAChBiD,eAAgB,O,2LAIOjD,G,iFACnBtU,EAAMa,gBAAgB4D,KAAM,CAChC8S,eAAgBjD,I,iLAIHzP,G,oEACfA,EAAMC,iBAEFL,KAAKR,MAAMsT,e,gCACPvX,EAAMuB,kBAAkBkD,KAAM,uC,wCAItCA,KAAKX,MAAMoI,SAASzH,KAAKR,MAAMsT,eAAgB9S,KAAKR,MAAM6S,SAAUrS,M,sIAG5D,IAAD,OACHqT,EAAwB,KACxBC,EAAmB,KACpBtT,KAAKR,MAAM6S,WAAarS,KAAKR,MAAMuT,oBACpCM,EAAwB,kBAAMrB,EAAYuB,YAAY,EAAK/T,MAAM6S,WACjEiB,EAAmBtT,KAAKR,MAAM6S,UAGhC,IAAImB,EAAwB,KACxBC,EAAmB,KACpBzT,KAAKR,MAAM6S,UAAYrS,KAAKR,MAAMqT,gBACnCW,EAAwB,kBACtBxB,EAAY0B,YAAY,EAAKlU,MAAM6S,SAAU,EAAK7S,MAAMqT,iBAC1DY,EAAmBzT,KAAKR,MAAM6S,SAAWrS,KAAKR,MAAMqT,gBAE9C7S,KAAKR,MAAM6S,UAAYrS,KAAKR,MAAMuT,oBACxCS,EAAwB,kBAAMxB,EAAY0B,YAAY,EAAKlU,MAAM6S,WACjEoB,EAAmBzT,KAAKR,MAAM6S,UAGhC,IAAIsB,EAAiB3T,KAAKR,MAAMuT,kBACX,6BACA,qCAErB,OACE,yBAAKlS,UAAU,kBACb,4BAAQS,QAAStB,KAAKL,MACdkB,UAAU,oDADlB,KAIA,yBAAKA,UAAU,iCACXb,KAAKR,MAAMnD,OAAS,4BAAK2D,KAAKR,MAAMnD,OACtC,8CACA,0BAAMwE,UAAU,YAAYC,SAAUd,KAAKoT,YACzC,2BAAOrS,QAAQ,eAAf,YACA,4BAAQ6S,aAAa,GAAGzF,SAAUnO,KAAKgT,qBAC/B9R,KAAK,WAAWC,GAAG,eACzB,4BAAQgP,UAAQ,EAAC3P,MAAM,KACvB,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,YAAd,aAGF,2BAAOO,QAAQ,cAAf,WACA,kBAAC,EAAD,CAAcG,KAAK,UAAUC,GAAG,aAAawO,OAAQ0D,EACvChE,KAAM,CAAC,KAAM,QAAS5H,SAAUzH,KAAKmT,qBACrClD,WAAW,OAAOP,UAAW4D,IAE3C,4BAAQhS,QAAStB,KAAKiT,wBACdhS,KAAK,SAASJ,UAAU,2CAC5B8S,GAGJ,2BAAO5S,QAAQ,YAAf,WACA,kBAAC,EAAD,CAAcG,KAAK,QAAQC,GAAG,WAAWwO,OAAQ6D,EACnCnE,KAAM,CAAC,WAAY,QAAS5H,SAAUzH,KAAKkT,qBAC3CjD,WAAW,OAAOP,UAAW+D,IAE3C,2BAAO5S,UAAU,gCAAgCI,KAAK,SAC/CT,MAAM,uB,GAxHIgB,cCoDdqS,E,+IAvDS1W,G,8EACd0R,EAAU,CACd1R,SAAUA,G,SAGCmT,EAAIgC,QAAQ,QAASzD,G,qNAGX1R,EAAUkV,EAAUI,EAAWqB,G,8EAChDjF,EAAU,CACd1R,SAAUA,EACVkV,SAAUA,EACVI,UAAWA,EACXqB,eAAgBA,G,SAGLxD,EAAIgC,QAAQ,QAASzD,G,uNAGf1R,EAAUkV,EAAUI,G,8EACjC5D,EAAU,CACd1R,SAAUA,EACVkV,SAAUA,EACVI,UAAWA,G,SAGAnC,EAAIyD,SAAS,QAASlF,G,sNAGf1R,EAAUkV,EAAUI,EAAWuB,EAAOC,EACtCvJ,EAASwJ,G,8EACvBrF,EAAU,CACd1R,SAAUA,EACVkV,SAAUA,EACVI,UAAWA,EACXuB,MAAOA,EACPC,OAAQA,EACRvJ,QAASA,EACTwJ,UAAWA,G,SAGA5D,EAAI6D,QAAQ,QAAStF,G,gOAGZ1R,EAAUkV,EAAUI,G,8EACpC5D,EAAU,CACd1R,SAAUA,EACVkV,SAAUA,EACVI,UAAWA,G,SAGAnC,EAAI8D,WAAW,QAASvF,G,8JCA1BwF,G,uKAhDX,IAAM9W,EAAOyC,KAAKX,MAAM9B,KAElB+W,EAActC,EAAYuC,uBAAuBhX,EAAK0W,QACtDO,EAAajX,EAAKkX,UAAUC,QAAQ,IAAK,KACzCC,EAAiBpX,EAAK2W,UAAY,YAAc,cAChDU,EAAa,IAAIC,KAAKtX,EAAKuX,YAAaC,qBACxCC,EAAiBzX,EAAKJ,SAE5B,OACE,wBAAI0D,UAAS,wCAAmCyT,IAC9C,wBAAIzT,UAAU,wBAEVb,KAAKX,MAAM4V,mBAAqBD,GAChC,4BACE,kBAAC,IAAD,CAAMnU,UAAU,iBACV0B,GAAE,sBAAiBhF,EAAK8U,SAAtB,YAAkCmC,IAD1C,SAOFjX,EAAK2W,WACL,4BACE,kBAAC,IAAD,CAAMrT,UAAU,iBACV0B,GAAE,iBAAYyS,EAAZ,YAA8BzX,EAAK8U,SAAnC,YAA+CmC,IADvD,UAON,4BACGjX,EAAK8U,SADR,IACmB9U,EAAK2X,YADxB,MACwC3X,EAAK4X,aAE7C,wBAAItU,UAAU,wBACXtD,EAAKyW,OAER,wBAAInT,UAAU,4BACX+T,GAEH,wBAAI/T,UAAU,uBACZ,wBAAIA,UAAU,kDACd,wBAAIA,UAAS,2CAAsC8T,W,GA3ClCnT,aCiEZ4T,G,uKA5DX,IAHA,IAAM7X,EAAOyC,KAAKX,MAAM9B,KAEpB8X,EAAe,GACXxM,EAAI,EAAGA,EAAItL,EAAK+X,MAAMvY,OAAQ8L,IAAK,CACzC,IAAM0M,EAAOhY,EAAK+X,MAAMzM,GAClBqM,EAAcK,EAAKd,UAAUe,MAAM,KAAK,GACxChB,EAAae,EAAKd,UAAUC,QAAQ,IAAK,KACzCM,EAAiBO,EAAKpY,SAExBsY,EAAgB,yBACjBP,EAAYnY,QAAU,IACvB0Y,GAAiB,UAGnB,IAAMnB,EAActC,EAAYuC,uBAAuBgB,EAAKtB,QAE5DoB,EAAa7M,KACX,wBAAInH,IAAKwH,EAAGhI,UAAS,mDAA8CyT,IACjE,wBAAIzT,UAAU,2BAEVb,KAAKX,MAAM4V,mBAAqBD,GAChC,4BACE,kBAAC,IAAD,CAAMnU,UAAU,iBACV0B,GAAE,sBAAiBgT,EAAKlD,SAAtB,YAAkCmC,IAD1C,SAOFe,EAAKrB,WACL,4BACE,kBAAC,IAAD,CAAMrT,UAAU,iBACV0B,GAAE,iBAAYyS,EAAZ,YAA8BO,EAAKlD,SAAnC,YAA+CmC,IADvD,UAON,0BAAM3T,UAAW4U,GACdP,KAMT,IAAMN,EAAa,IAAIC,KAAKtX,EAAKuX,YAAaC,qBAE9C,OACE,wBAAIlU,UAAU,kBACZ,4BACGtD,EAAKmY,aAER,wBAAI7U,UAAU,+BACX+T,GAEH,wBAAI/T,UAAU,2BACVwU,Q,GA1DkB7T,aCefmU,OAjBf,YAAmF,IAAjD3B,EAAgD,EAAhDA,MAAO4B,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,eACxDC,EAAWF,EAAU,OAAS,OAEpC,OACE,wBAAIhV,UAAU,6BACZ,4BAAQA,UAAU,oDACVS,QAASwU,GACbC,GAEJ,wBAAIlV,UAAU,qCACXmT,GAED6B,GAAWD,ICkEJI,G,WA/Eb,WAAYC,EAAUvL,GAAU,oBAC9B1K,KAAKiW,SAAWA,EAChBjW,KAAKkW,WAAWxL,G,uDAGPA,GACT1K,KAAK0K,QAAU,GACf1K,KAAKmW,YAAczL,EAAQ3N,OAE3B,IAAI,IAAI8L,EAAI,EAAGA,EAAI6B,EAAQ3N,OAAQ8L,IAAK,CACtC,IAAIuN,EAAO1L,EAAQ7B,GACnBuN,EAAKC,iBAAkB,EACvBrW,KAAK0K,QAAQlC,KAAK4N,M,wCAIJE,GAAU,IAAD,gBACNA,GADM,IACzB,IAAI,EAAJ,qBAA4B,CAAC,IAAnB9Q,EAAkB,QACpB+Q,EAASvW,KAAK0K,QAAQlF,GAAO6Q,gBACnCrW,KAAK0K,QAAQlF,GAAO6Q,iBAAmBE,EAEpCA,EACDvW,KAAKmW,cAGLnW,KAAKmW,eATgB,iC,iCAchBK,GACT,IADoB,EAChBC,EAAe,EACfC,EAAmB,EACnBC,EAAa,GAHG,cAKF3W,KAAK0K,SALH,IAKpB,IAAI,EAAJ,qBAAgC,CAAC,IAAvB0L,EAAsB,QAE9B,GADAO,EAAWnO,KAAK4N,GACbA,EAAKC,mBACNK,IACwB1W,KAAKiW,SAAU,CACrC,GAAGQ,IAAiBD,EAClB,OAAOG,EACTA,EAAa,GACbD,EAAmB,EACnBD,MAdc,8BAmBpB,GAAGA,IAAiBD,EAClB,OAAOG,EAGT,MAAMnG,MAAM,8B,qCAIZ,IADa,EACToG,EAAY,EACZC,EAAa,EACbH,EAAmB,EAHV,cAIK1W,KAAK0K,SAJV,IAIb,IAAI,EAAJ,qBAAgC,CAAC,IAAvB0L,EAAsB,QACZ,IAAfS,GACDD,IAGFC,IACGT,EAAKC,iBACNK,IAECA,IAAqB1W,KAAKiW,WAC3BS,EAAmB,EACnBG,EAAa,IAfJ,8BAmBb,OAAOD,M,YCzBIE,OAhDf,YAKE,IALyD,IAAtCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,WAAYvP,EAAY,EAAZA,SACxCwP,EAAc,CAAEF,GAEhBG,EAAQH,EAAc,EACtBI,EAAY,EACVD,EAAQF,GACZC,EAAYzO,KAAK0O,GACjBA,GAASC,EACTA,GAAa,EAGf,IAAIC,EAASL,EAAc,EAE3B,IADAI,EAAY,EACNC,EAAS,GACbH,EAAYzO,KAAK4O,GACjBA,GAAUD,EACVA,GAAa,EAGI,IAAhBJ,GACDE,EAAYzO,KAAK,GAChBuO,IAAgBC,GAAcA,EAAa,GAC5CC,EAAYzO,KAAKwO,GAEnBC,EAAYI,MAAK,SAAC/S,EAAGC,GAAJ,OAAUD,EAAIC,KAG/B,IADA,IAAI+S,EAAmB,GA1BiC,aA2BpD,IAAMd,EAAS,KACXe,EAAmBf,IAAcO,EACrC,0BAA4B,iBAC9BO,EAAiB9O,KACf,wBAAInH,IAAKmV,GACP,4BAAQ3V,UAAW0W,EAAiBjW,QAAS,kBAAMmG,EAAS+O,KACzDA,MANT,MAAuBS,EAAvB,eAAqC,IAYrC,OACE,yBAAKpW,UAAU,aACb,wBAAIA,UAAU,kBACVyW,KCnCJE,GAAiB9Y,OAAOC,OAAO,CACnC8Y,QAAS,EACTC,SAAU,EACVhG,OAAQ,IAIV,SAASiG,GAAgBC,EAAOC,GAC9B,OAAGD,EAAM9C,WAAa+C,EAAM/C,YAClB,EACH,EAGT,SAASgD,GAAkBC,EAAYza,GACrC,IADiD,EAC7C0a,EAAkB,GAD2B,cAEhCD,GAFgC,IAEjD,IAAI,EAAJ,qBAA6B,CAAC,IAAD,EAAnBE,EAAmB,QACvBC,EAAkB,GADK,cAEJ5a,GAFI,IAE3B,IAAI,EAAJ,qBAAmC,CAAC,IAA1B6a,EAAyB,QACjCD,EAAgB1P,KAAKyP,EAAIE,KAHA,8BAM3B,IAAM9W,EAAM6W,EAAgBjO,KAAK,KAC9B+N,EAAgB/b,eAAeoF,GAChC2W,EAAgB3W,GAAKmH,KAAKyP,GAG1BD,EAAgB3W,GAAO,CAAE4W,IAboB,8BAiBjD,OAAOD,E,IAuOMI,G,kDAnOb,WAAY/Y,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACX6Y,KAAM,EACNpD,iBAAkB,MAGpB,EAAKqD,cAAc,EAAKjZ,MAAMiW,OAC9B,EAAKiD,iBAAmB,IAAIvC,GAtCV,GAsC0C,EAAKwC,iBAEjE,EAAKC,WAAa,EAAKA,WAAW7Y,KAAhB,gBAXD,E,gMAec5C,EAAYoG,c,cAArC6R,E,gBACA1Z,EAAMa,gBAAgB4D,KAAM,CAChCiV,iBAAkBA,I,gJAIFK,GAClB,IAAMoD,EAAYpD,EAAM,GACpBqD,EAAgB,CAClBC,YAAaF,EAAUE,YACvBlD,YAAagD,EAAUhD,YACvBrD,SAAUqG,EAAUrG,SACpByC,WAAY4D,EAAU5D,WACtBQ,MAAO,IAGNtV,KAAKX,MAAMwZ,mBACZF,EAAc1E,OAASyE,EAAUzE,QAChCjU,KAAKX,MAAMyZ,qBACZH,EAActG,SAAWqG,EAAUrG,UAbZ,oBAePiD,GAfO,IAezB,IAAI,EAAJ,qBAAyB,CAAC,IAAhBC,EAAe,QACvBoD,EAAcrD,MAAM9M,KAAK+M,GACtBA,EAAKT,WAAa6D,EAAc7D,aACjC6D,EAAc7D,WAAaS,EAAKT,aAlBX,8BAsBzB,OAAO6D,I,oCAGKrD,GAAgE,IAAzDyD,EAAwD,uDAAvCvB,GAAe9F,OAAQsH,EAAgB,uDAAJ,GACnEC,EAAmB,GACvB,GAAGF,IAAmBvB,GAAeC,QACnC,GAAGzX,KAAKX,MAAM6Z,kBAAmB,CAC/B,IAAMC,EAAgBrB,GAAkBxC,EAAO,CAAC,WAAY,gBAC5D,IAAI,IAAMjU,KAAO8X,EAAe,CAC9B,IAAIR,EAAgB3Y,KAAKoZ,oBAAoBD,EAAc9X,IAC3D4X,EAAiBzQ,KAAKxI,KAAKwY,gBAAgBzb,QAC3CiD,KAAKwY,gBAAgBhQ,KAAKmQ,QAGzB,CAAC,IAAD,gBACerD,GADf,IACH,IAAI,EAAJ,qBAAyB,CAAC,IAAhBC,EAAe,QACvB0D,EAAiBzQ,KAAKxI,KAAKwY,gBAAgBzb,QAC3CiD,KAAKwY,gBAAgBhQ,KAAK+M,IAHzB,mCAOF,CACH,IAAI8D,EAAUC,EAkBd,GAjBGP,IAAmBvB,GAAe9F,QACnC1R,KAAKwY,gBAAkB,GACvBxY,KAAKuZ,gBAAkB,GACvBvZ,KAAKwZ,gBAAkB,GAEpBxZ,KAAKX,MAAMoa,eACZnE,EAAQ,YAAIA,GAAO+B,KAAKM,KAG1B0B,EAAWrZ,KAAKX,MAAMwZ,iBACtBS,EAAkB,WAGlBD,EAAWrZ,KAAKX,MAAMyZ,mBACtBQ,EAAkB,aAGjBD,EAgBD,OAAOrZ,KAAKsY,cAAchD,EAAOyD,EAAiB,EAAGC,GAfrD,IAAMU,EAAS5B,GAAkBxC,EAAO,CAACgE,IACzC,IAAI,IAAMjY,KAAOqY,EAAQ,CACvB,IAAMC,EAAc,UAAMX,EAAN,YAAmB3X,GACjCuY,EACJ5Z,KAAKsY,cAAcoB,EAAOrY,GAAM0X,EAAiB,EAAGY,GAEtD3Z,KAAKuZ,gBAAgBI,IAAkB,EACvC3Z,KAAKwZ,gBAAgBG,GAAkBC,EANhB,oBAQJA,GARI,IAQvB,IAAI,EAAJ,qBAAiC,CAAC,IAAxBpU,EAAuB,QAC/ByT,EAAiBzQ,KAAKhD,IATD,gCAkB7B,OAAOyT,I,sCAGO3D,GAAgE,IAAD,OAAxDyD,EAAwD,uDAAvCvB,GAAe9F,OAAQsH,EAAgB,uDAAJ,GACrEa,EAAmB,GACvB,GAAGd,IAAmBvB,GAAeC,QAInC,IAHA,IAAIqC,EACF9Z,KAAKX,MAAM6Z,kBAAoB9D,GAAkBf,GAE3CxL,EAAI,EAAGA,EAAIyM,EAAMvY,OAAQ8L,IAC/BgR,EAAiBrR,KACf,kBAACsR,EAAD,CAAezY,IAAKwH,EAAGtL,KAAM+X,EAAMzM,GACpBoM,iBAAkBjV,KAAKR,MAAMyV,wBAI7C,CACH,IAAIoE,EAAUC,EAUd,GATGP,IAAmBvB,GAAe9F,QACnC2H,EAAWrZ,KAAKX,MAAMwZ,iBACtBS,EAAkB,WAGlBD,EAAWrZ,KAAKX,MAAMyZ,mBACtBQ,EAAkB,aAGjBD,EA+BD,OAAOrZ,KAAK+Z,gBAAgBzE,EAAOyD,EAAiB,GA9BpD,IAAMW,EAAS5B,GAAkBxC,EAAO,CAACgE,IAD9B,WAEDjY,GACR,IAAMsY,EAAc,UAAMX,EAAN,YAAmB3X,GACjCuU,EACJ,EAAKmE,gBAAgBL,EAAOrY,GAAM0X,EAAiB,EAAGY,GAClD3F,EAAS+E,IAAmBvB,GAAe9F,OAC/CM,EAAYgI,mBAAmB3Y,GAAOA,EAElCwU,EAAU,EAAK0D,gBAAgBI,GAC/BC,EAAe,EAAKJ,gBAAgBG,GACpC7D,EAAc,uCAAG,4BAAAxR,EAAA,yDACrB,EAAKiU,iBAAiB0B,kBAAkBL,GACxC,EAAKL,gBAAgBI,IAAmB,EAAKJ,gBAAgBI,GAEvD3C,EAAa,EAAKuB,iBAAiB2B,iBACtC,EAAK1a,MAAM6Y,KAAOrB,GALA,gCAMb,EAAKyB,WAAWzB,GANH,OASrB,EAAKmD,cATgB,2CAAH,qDAYpBN,EAAiBrR,KACf,kBAAC,GAAD,CAAwBnH,IAAKA,EAAK2S,MAAOA,EACjB4B,aAAcA,EAAcC,QAASA,EACrCC,eAAgBA,MAxB5C,IAAI,IAAMzU,KAAOqY,EAAS,EAAhBrY,GAiCd,OACE,wBAAIR,UAAU,mBACVgZ,K,0EAKSxB,G,iFACT9c,EAAMa,gBAAgB4D,KAAM,CAChCqY,KAAMA,I,mJAIY+B,EAAWC,GAAY,IAAD,OAEpCC,EAAiB,CACrB,mBACA,qBACA,oBACA,gBAEIC,EAAwBD,EAAeE,KAAI,SAACC,GAAD,OAAO,EAAKpb,MAAMob,MAC7DC,EAAqBJ,EAAeE,KAAI,SAACC,GAAD,OAAOL,EAAUK,MAE/D,OAAGvJ,KAAKC,UAAUoJ,KAA2BrJ,KAAKC,UAAUuJ,KAC1D1a,KAAKX,MAAQ+a,EACbpa,KAAKsY,cAActY,KAAKX,MAAMiW,OAC9BtV,KAAKuY,iBAAiBrC,WAAWlW,KAAKwY,iBAEf,IAApBxY,KAAKR,MAAM6Y,QACZrY,KAAKyY,WAAW,IACT,K,+BAQX,GAA+B,IAA5BzY,KAAKX,MAAMiW,MAAMvY,OAClB,OACE,uBAAG8D,UAAU,sBAAb,oCAIJ,IAAM8Z,EAAY3a,KAAKuY,iBAAiB9L,WAAWzM,KAAKR,MAAM6Y,MACxDrB,EAAahX,KAAKuY,iBAAiB2B,eACnCU,EACJ,kBAAC,GAAD,CAAW7D,YAAa/W,KAAKR,MAAM6Y,KAAMrB,WAAYA,EAC1CvP,SAAUzH,KAAKyY,aAG5B,OACE,oCACImC,EACA5a,KAAK+Z,gBAAgBY,GACrBC,O,GA9NkBpZ,aCqFbqZ,I,yDAxHb,WAAYxb,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXsb,oBAAoB,EACpBjC,kBAAkB,EAClBC,oBAAoB,EACpBI,mBAAmB,EACnBO,cAAc,GAGhB,EAAKsB,qBAAuB,EAAKA,qBAAqBnb,KAA1B,gBAC5B,EAAKob,uBAAyB,EAAKA,uBAAuBpb,KAA5B,gBAC9B,EAAKqb,yBAA2B,EAAKA,yBAAyBrb,KAA9B,gBAChC,EAAKsb,wBAA0B,EAAKA,wBAAwBtb,KAA7B,gBAC/B,EAAKub,mBAAqB,EAAKA,mBAAmBvb,KAAxB,gBAC1B,EAAKwT,WAAa,EAAKA,WAAWxT,KAAhB,gBAhBD,E,6LAoBXrE,EAAMa,gBAAgB4D,KAAM,CAChC8a,oBAAqB9a,KAAKR,MAAMsb,qB,+QAK5Bvf,EAAMa,gBAAgB4D,KAAM,CAChC6Y,kBAAmB7Y,KAAKR,MAAMqZ,mB,iRAK1Btd,EAAMa,gBAAgB4D,KAAM,CAChC8Y,oBAAqB9Y,KAAKR,MAAMsZ,qB,gRAK5Bvd,EAAMa,gBAAgB4D,KAAM,CAChCkZ,mBAAoBlZ,KAAKR,MAAM0Z,oB,2QAK3B3d,EAAMa,gBAAgB4D,KAAM,CAChCyZ,cAAezZ,KAAKR,MAAMia,e,gLAIb3G,EAAgBT,EAAU+I,G,4EACrCtI,E,gCACI9S,KAAK+a,uB,wDAKL5d,EAAW6C,KAAKX,MAAMgc,SAASle,S,SAC/B0W,EAASyH,QAAQne,EAAUkV,EAAUS,G,OAErC0B,EAAa1B,EAAe4B,QAAQ,IAAK,KAC/C1U,KAAKX,MAAMkc,QAAQ/S,KAAnB,sBAAuC6J,EAAvC,YAAmDmC,I,mEAG7CjZ,EAAMuB,kBAAkBse,EAAe,KAAIlf,S,oJAKnD,OACE,oCACE,wBAAI2E,UAAU,kBAAd,YAEEb,KAAKR,MAAMsb,oBACX,kBAAC,EAAD,CAAgBrT,SAAUzH,KAAKoT,aAEjC,8BACE,yBAAKvS,UAAU,uBACb,+BACE,2CAEF,2BAAOI,KAAK,WAAWC,KAAK,SAASV,MAAM,SACpC2N,SAAUnO,KAAKgb,yBACtB,2BAAOja,QAAQ,UAAf,UACA,2BAAOE,KAAK,WAAWC,KAAK,WAAWV,MAAM,WACtC2N,SAAUnO,KAAKib,2BACtB,2BAAOla,QAAQ,YAAf,YACA,2BAAOE,KAAK,WAAWC,KAAK,UAAUV,MAAM,UACrC2N,SAAUnO,KAAKkb,0BACtB,2BAAOna,QAAQ,WAAf,YAEF,yBAAKF,UAAU,uBACb,2BAAOE,QAAQ,QACb,uCAEF,4BAAQ6S,aAAa,UAAU1S,KAAK,OAC5BiN,SAAUnO,KAAKmb,oBACrB,4BAAQ3a,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,aAIN,yBAAKK,UAAU,2BACb,kBAAC,GAAD,CAAegY,iBAAkB7Y,KAAKR,MAAMqZ,iBAC7BC,mBAAoB9Y,KAAKR,MAAMsZ,mBAC/BI,kBAAmBlZ,KAAKR,MAAM0Z,kBAC9BO,aAAczZ,KAAKR,MAAMia,aACzBnE,MAAOtV,KAAKX,MAAMiW,QAE/BtV,KAAKX,MAAMgc,SAASje,OACpB,4BAAQkE,QAAStB,KAAK+a,qBACdla,UAAU,mDADlB,W,GA9GYW,cCKTga,G,kJATYre,G,8EACjB0R,EAAU,CACd1R,SAAUA,G,SAGCmT,EAAIgC,QAAQ,UAAWzD,G,iJCFzB4M,GANG/c,OAAOC,OAAO,CAC9B+c,QAAS,EACTC,KAAM,EACNC,UAAW,ICwGEC,G,kDAlGb,WAAYxc,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXF,OAAQmc,GAAUC,QAClBL,SAAU,KACV/F,MAAO,MANQ,E,iLAWXnY,EAAW6C,KAAKX,MAAMyc,MAAMC,OAAO5e,S,SAC5Bqe,GAAQQ,YAAY7e,G,sSAI3BA,EAAW6C,KAAKX,MAAMyc,MAAMC,OAAO5e,S,SAC5B0W,EAASoI,SAAS9e,G,0TAKN6C,KAAKgc,c,cAAtBX,E,gBACcrb,KAAKic,W,cAAnB3G,E,gBACA/Z,EAAMa,gBAAgB4D,KAAM,CAChCV,OAAQmc,GAAUE,KAClBN,SAAUA,EACV/F,MAAOA,I,4DAIO,iBAAb,KAAIpU,K,kCACC3F,EAAMa,gBAAgB4D,KAAM,CAChCV,OAAQmc,GAAUG,Y,oRAOlB5b,KAAKkc,W,wLAGYzM,G,oEACpBA,EAAUqM,MAAMC,OAAO5e,WAAa6C,KAAKX,MAAMyc,MAAMC,OAAO5e,S,gCACvD5B,EAAMa,gBAAgB4D,KAAM,CAChCV,OAAQmc,GAAUC,QAClBne,KAAM,O,uBAEFyC,KAAKkc,W,oJAKblc,KAAKnE,SAAU,I,+BAIf,IAgBI6O,EAfEyR,EACJ,oCACE,yBAAKtb,UAAU,sBACb,kBAAC,EAAD,CAAUtD,KAAMyC,KAAKR,MAAM6b,YAE7B,kBAAC,GAAD,CAAWA,SAAUrb,KAAKR,MAAM6b,SAAU/F,MAAOtV,KAAKR,MAAM8V,MACjDiG,QAASvb,KAAKX,MAAMkc,WAG7Ba,EACJ,yBAAKvb,UAAU,sBACb,gDAKJ,OAAOb,KAAKR,MAAMF,QAChB,KAAKmc,GAAUC,QACbhR,EAnBmB,KAoBnB,MACF,KAAK+Q,GAAUE,KACbjR,EAAUyR,EACV,MACF,KAAKV,GAAUG,UACblR,EAAU0R,EAKd,OACE,oCACE,yBAAKvb,UAAU,kBACX6J,Q,GA5FclJ,a,UCgEX6a,G,kDAjEb,WAAYhd,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXnD,MAAO,IAET,EAAKigB,WAAaC,eAElB,EAAK5c,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAK4c,WAAa,EAAKA,WAAW5c,KAAhB,gBATD,E,oDAajBI,KAAKX,MAAMY,iB,0EAGIG,G,8EACfA,EAAMC,iBAEcD,EAAMG,OAAOkc,YAAYjc,QAC1BR,KAAKsc,W,gCAChB/gB,EAAMuB,kBAAkBkD,KAAM,yC,iEAKbhD,EAAYoG,c,cAA7BjG,E,OACAkV,EAAWrS,KAAKX,MAAMgT,SACtBI,EAAYzS,KAAKX,MAAMqd,YAAYjK,U,UAEnCoB,EAAS2I,WAAWrf,EAAUkV,EAAUI,G,QAC9CzS,KAAKX,MAAMkc,QAAQ/S,KAAnB,iBAAkCrL,I,mEAG5B5B,EAAMuB,kBAAkBkD,KAAM,KAAI9D,S,gJAK1C,OACE,yBAAK2E,UAAU,kBACb,4BAAQS,QAAStB,KAAKL,MACdkB,UAAU,oDADlB,KAIA,yBAAKA,UAAU,sCACXb,KAAKR,MAAMnD,OAAS,4BAAK2D,KAAKR,MAAMnD,OACtC,sFACA,6GAIA,0BAAMwE,UAAU,YAAYC,SAAUd,KAAKwc,YACzC,2BAAOzb,QAAQ,eAAef,KAAKsc,YACnC,2BAAOtb,aAAa,MAAMC,KAAK,OAAOC,KAAK,cACpCG,IAAI,cAAcF,GAAG,gBAE5B,2BAAON,UAAU,cAAcI,KAAK,SAAST,MAAM,kB,GA1DtCgB,aCGzB,SAASmb,GAAiBvc,GACxBA,EAAMC,iBACND,EAAMwc,YAAc,G,IA+JPC,G,kDA3Jb,WAAYxd,GAAQ,IAAD,sBAGjB,IAAMyd,GAFN,cAAMzd,IAEgBA,MAAMyd,SAHX,OAIjB,EAAK9I,MAAQ8I,EAAS9I,MACtB,EAAKC,OAAS6I,EAAS7I,OACvB,EAAKvJ,QAAUwG,KAAK6L,MAAMD,EAASpS,SACnC,EAAKsS,UAAY,IAAInI,KAAKiI,EAAShI,YAEnC,EAAKtV,MAAQ,CACX0U,UAAW4I,EAAS5I,UACpB+I,oBAAoB,EACpBC,OAAO,EACPC,aAAa,EACbC,gBAAgB,EAChBC,gBAAgB,GAGlB,EAAKC,SAAW,EAAKA,SAAS1d,KAAd,gBAChB,EAAK2d,kBAAoB,EAAKA,kBAAkB3d,KAAvB,gBACzB,EAAK4d,iBAAmB,EAAKA,iBAAiB5d,KAAtB,gBACxB,EAAK6d,kBAAoB,EAAKA,kBAAkB7d,KAAvB,gBACzB,EAAK8d,mBAAqB,EAAKA,mBAAmB9d,KAAxB,gBAC1B,EAAK+d,oBAAsB,EAAKA,oBAAoB/d,KAAzB,gBAvBV,E,uGA0BKsU,G,iGACClX,EAAYoG,c,cAA7BjG,E,OACAkV,EAAWrS,KAAKX,MAAMgT,SACtBI,EAAYzS,KAAKX,MAAMqd,YAAYjK,UACnCuB,EAAQhU,KAAKgU,MACbC,EAASjU,KAAKiU,OACdvJ,EAAUwG,KAAKC,UAAUnR,KAAK0K,S,UAE9BmJ,EAAS+J,SAASzgB,EAAUkV,EAAUI,EAAWuB,EAAOC,EACtCvJ,EAASwJ,G,eAEjClU,KAAKgd,UAAY,IAAInI,KACrBrY,OAAOqhB,eAAiB,K,UAElBtiB,EAAMa,gBAAgB4D,KAAM,CAChCkU,UAAWA,EACX+I,oBAAoB,EACpBC,OAAO,EACPC,aAAa,EACbC,gBAAgB,I,gLAILhd,G,iFACP7E,EAAMa,gBAAgB4D,KAAM,CAChCid,oBAAoB,EACpBE,aAAa,I,uBAGTnd,KAAK8d,kBAAkB9d,KAAKR,MAAM0U,W,wLAGlB9T,G,iFAChB7E,EAAMa,gBAAgB4D,KAAM,CAChCid,oBAAoB,EACpBG,gBAAgB,I,uBAGZpd,KAAK8d,mBAAmB9d,KAAKR,MAAM0U,W,uLAGpB9T,G,iFACf7E,EAAMa,gBAAgB4D,KAAM,CAChCqd,gBAAiBrd,KAAKR,MAAM6d,iB,+IAIdjd,GAChBJ,KAAKgU,MAAQ5T,EAAMG,OAAOC,Q,yCAGTJ,GACjBJ,KAAKiU,OAAS7T,EAAMG,OAAOC,Q,mFAGHud,G,oEACxB/d,KAAK0K,QAAUqT,GAEZ/d,KAAKR,MAAM0d,M,gCACN3hB,EAAMa,gBAAgB4D,KAAM,CAChCkd,OAAO,I,OAGT1gB,OAAOqhB,eAAiBlB,G,oJAK1B3c,KAAKnE,SAAU,I,+BAIf,IAAImiB,EAAYhe,KAAKR,MAAM0d,MAAQ,wBAA0B,iBAC7Dc,GAAahe,KAAKgd,UAAUiB,iBAE5B,IAAMC,EAAoBle,KAAKR,MAAM0U,UAAY,YAAc,WAC3DiK,EAAkB,iCAClBC,EAAqB,iCAKzB,OAHGpe,KAAKR,MAAM2d,cAAagB,GAAmB,sBAC3Cne,KAAKR,MAAM4d,iBAAgBgB,GAAsB,sBAGlD,oCACE,kBAAC,IAAD,CAAQC,MAAOre,KAAKR,MAAM0d,MAClBhhB,QAAQ,8DAEd8D,KAAKR,MAAM6d,gBACX,kBAAC,GAAD,CAAYpd,aAAcD,KAAKwd,iBACnBnL,SAAUrS,KAAKX,MAAMgT,SAAUkJ,QAASvb,KAAKX,MAAMkc,QACnDmB,YAAa1c,KAAKX,MAAMqd,cAEtC,0BAAM7b,UAAU,4BACd,2BAAOA,UAAU,kBAAkBK,KAAK,QAAQD,KAAK,OAC9C2S,aAAc5T,KAAKgU,MAAOsK,YAAY,QACtCnQ,SAAUnO,KAAKyd,oBAEtB,4BAAQvc,KAAK,SAASC,GAAG,cAAcgN,SAAUnO,KAAK0d,mBAC9C9J,aAAc5T,KAAKiU,QACzB,4BAAQzT,MAAOiR,EAAYC,OAAOlR,OAAlC,UACA,4BAAQA,MAAOiR,EAAYI,SAASrR,OAApC,YACA,4BAAQA,MAAOiR,EAAYK,cAActR,OAAzC,sBACA,4BAAQA,MAAOiR,EAAYM,SAASvR,OAApC,aAGF,kBAAC,EAAD,CAAY0H,eAAgBlI,KAAK0K,QACrByD,SAAUnO,KAAK2d,sBAC3B,uBAAG9c,UAAU,wBAAwBmd,GACrC,yBAAKnd,UAAU,4BACb,2BAAOA,UAAWsd,EAAiBld,KAAK,SAAST,MAAM,OAChDc,QAAStB,KAAKsd,SACdnN,SAAUnQ,KAAKR,MAAMyd,qBAE5B,2BAAOpc,UAAWud,EAAoBnd,KAAK,SACpCT,MAAO0d,EAAmB5c,QAAStB,KAAKud,kBACxCpN,SAAUnQ,KAAKR,MAAMyd,sBAE9B,yBAAKpc,UAAU,oBACb,4BAAQI,KAAK,SAASJ,UAAU,uCACxBS,QAAStB,KAAKwd,kBADtB,wC,GAjJehc,aCMZ+c,G,uKAhBX,IAAMhhB,EAAOyC,KAAKX,MAAM9B,KAExB,OACE,yBAAKsD,UAAU,0BACb,yBAAKA,UAAU,mBACb,4BACGb,KAAKX,MAAMgT,SADd,IACyB9U,EAAK2X,YAD9B,MAC8C3X,EAAK4X,aAEnD,uBAAGtU,UAAU,qBAAqBtD,EAAKmY,aACvC,uBAAG7U,UAAU,iBAAiB2d,KAAMjhB,EAAKkhB,MAAzC,sB,GAXgBjd,aCsGXkd,I,yDA7Fb,WAAYrf,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXF,OAAQmc,GAAUC,QAClBgB,YAAa,KACbI,SAAU,MANK,E,6LAWXzK,EAAWrS,KAAKX,MAAMyc,MAAMC,OAAO1J,SACnCE,EAAYvS,KAAKX,MAAMyc,MAAMC,OAAOxJ,UACpC2C,EAAclV,KAAKX,MAAMyc,MAAMC,OAAO7G,YACtCzC,E,UAAeF,E,YAAa2C,G,SAEVlD,EAAY2M,eAAetM,EAAUI,G,cAAzDiK,E,QACQjK,UAAYA,E,kBAEjBiK,G,qRAIgB1f,EAAYoG,c,cAA7BjG,E,OACAkV,EAAWrS,KAAKX,MAAMyc,MAAMC,OAAO1J,SACnCE,EAAYvS,KAAKX,MAAMyc,MAAMC,OAAOxJ,UACpC2C,EAAclV,KAAKX,MAAMyc,MAAMC,OAAO7G,YACtCzC,E,UAAeF,E,YAAa2C,G,SAEXrB,EAAS+K,YAAYzhB,EAAUkV,EAAUI,G,cAA1DqK,E,yBAECA,G,0QAImB9c,KAAK6e,kB,cAAzBnC,E,gBACiB1c,KAAK8e,e,cAAtBhC,E,gBAEAvhB,EAAMa,gBAAgB4D,KAAM,CAChC0c,YAAaA,EACbI,SAAUA,EACVxd,OAAQmc,GAAUE,O,0QAKd3b,KAAKkc,W,mJAIXlc,KAAKnE,SAAU,I,+BAIf,IAiBI6O,EAjBE2H,EAAWrS,KAAKX,MAAMyc,MAAMC,OAAO1J,SAGnC8J,EACJ,oCACE,kBAAC,GAAD,CAAa5e,KAAMyC,KAAKR,MAAMkd,YAAarK,SAAUA,IACrD,kBAAC,GAAD,CAAcqK,YAAa1c,KAAKR,MAAMkd,YACxBI,SAAU9c,KAAKR,MAAMsd,SAAUzK,SAAUA,EACzCkJ,QAASvb,KAAKX,MAAMkc,WAGhCwD,EACJ,yBAAKle,UAAU,sBACb,qDAKJ,OAAOb,KAAKR,MAAMF,QAChB,KAAKmc,GAAUC,QACbhR,EAlBmB,KAmBnB,MACF,KAAK+Q,GAAUE,KACbjR,EAAUyR,EACV,MACF,KAAKV,GAAUG,UACblR,EAAUqU,EAKd,OACE,yBAAKle,UAAU,kBACX6J,O,GAxFalJ,cCMRwd,G,+IAbS7hB,EAAU8hB,EAAY5M,EAAUI,EAAWyM,G,8EACzDrQ,EAAU,CACd1R,SAAUA,EACV8hB,WAAYA,EACZ5M,SAAUA,EACVI,UAAWA,EACXyM,YAAaA,G,SAGF5O,EAAI6D,QAAQ,cAAetF,G,gKC6B7BsQ,OArCf,YAAqE,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,aAAgB,EACxCC,mBAASH,GAD+B,mBAC5DI,EAD4D,KACrDC,EADqD,OAEtCF,mBAASF,GAF6B,mBAE5D3O,EAF4D,KAEpDgP,EAFoD,KAI9DC,EAAkB,cACnBjP,EAAS,IACViP,GAAmB,sBAGrB,IAAIC,EAAY,uCAAG,sBAAAtb,EAAA,sEACMtH,EAAYoG,cADlB,wCAGf5G,OAAO2G,sBAHQ,0BAOduN,EAAS,GACVgP,EAAU,GACVD,EAASD,EAAQ,GACjBF,EAAa,KAGbI,EAAU,GACVD,EAASD,EAAQ,GACjBF,EAAa,IAfE,2CAAH,qDAmBhB,OACE,yBAAKze,UAAU,gBACb,4BAAQA,UAAW8e,EAAiBre,QAASse,GAC3C,0BAAM/e,UAAU,sBAAhB,IAAuC2e,GADzC,mB,OCcSK,OAvCf,YAAmC,IAATtiB,EAAQ,EAARA,KAClBmN,EAAUwG,KAAK6L,MAAMxf,EAAKmN,SAC1BoV,EAAmB,IAAIjL,KAAKtX,EAAKuX,YAAamJ,iBAC9C3J,EAActC,EAAYuC,uBAAuBhX,EAAK0W,QAExDqL,EAAY,uCAAG,WAAOJ,GAAP,qBAAA5a,EAAA,sEACMtH,EAAYoG,cADlB,cACXjG,EADW,OAEX8hB,EAAa1hB,EAAKJ,SAClBkV,EAAW9U,EAAK8U,SAChBI,EAAYlV,EAAKkX,UAJN,SAMXuK,GAASe,SAAS5iB,EAAU8hB,EAAY5M,EAAUI,EAAWyM,GANlD,2CAAH,sDAShB,OACE,yBAAKre,UAAU,oDACb,wBAAIA,UAAU,wBACZ,0BAAMA,UAAS,gDAA2CyT,IACxD,0BAAMzT,UAAU,mDAEjBtD,EAAKyW,OAER,uBAAGnT,UAAU,qBAAb,cACa,kBAAC,IAAD,CAAMA,UAAU,iBAAiB0B,GAAE,iBAAYhF,EAAKJ,WAC5DI,EAAKJ,WAGV,yBAAK0D,UAAU,oBACb,kBAAC,EAAD,CAAmB6J,QAASA,EAASvJ,GAAI,KAAMwJ,UAAU,KAE3D,uBAAG9J,UAAU,qBAAb,kBACkBif,GAElB,kBAAC,GAAD,CAAaV,aAAc7hB,EAAKyiB,UAAWX,cAAe9hB,EAAK2hB,YAClDI,aAAcA,MCwDlBW,G,kDA1Fb,WAAY5gB,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXF,OAAQmc,GAAUC,QAClBgB,YAAa,KACbI,SAAU,MANK,E,6LAWXzK,EAAWrS,KAAKX,MAAMyc,MAAMC,OAAO1J,SACnCE,EAAYvS,KAAKX,MAAMyc,MAAMC,OAAOxJ,UACpC2C,EAAclV,KAAKX,MAAMyc,MAAMC,OAAO7G,YACtCzC,E,UAAeF,E,YAAa2C,G,SAEVlD,EAAY2M,eAAetM,EAAUI,G,cAAzDiK,E,QACQjK,UAAYA,E,kBAEjBiK,G,4QAIDwD,EAAgBlgB,KAAKX,MAAMyc,MAAMC,OAAOmE,cACxC7N,EAAWrS,KAAKX,MAAMyc,MAAMC,OAAO1J,SACnCE,EAAYvS,KAAKX,MAAMyc,MAAMC,OAAOxJ,UACpC2C,EAAclV,KAAKX,MAAMyc,MAAMC,OAAO7G,YACtCzC,E,UAAeF,E,YAAa2C,G,SAEXrB,EAAS+K,YAAYsB,EAAe7N,EAAUI,GAAW,G,cAA1EqK,E,yBACCA,G,yQAImB9c,KAAK6e,kB,cAAzBnC,E,gBACiB1c,KAAK8e,e,cAAtBhC,E,gBAEAvhB,EAAMa,gBAAgB4D,KAAM,CAChC0c,YAAaA,EACbI,SAAUA,EACVxd,OAAQmc,GAAUE,O,0QAKd3b,KAAKkc,W,mJAIXlc,KAAKnE,SAAU,I,+BAIf,IAeI6O,EAfE2H,EAAWrS,KAAKX,MAAMyc,MAAMC,OAAO1J,SAGnC8J,EACJ,oCACE,kBAAC,GAAD,CAAa5e,KAAMyC,KAAKR,MAAMkd,YAAarK,SAAUA,IACrD,kBAAC,GAAD,CAAgB9U,KAAMyC,KAAKR,MAAMsd,YAG/BiC,EACJ,yBAAKle,UAAU,sBACb,8EAKJ,OAAOb,KAAKR,MAAMF,QAChB,KAAKmc,GAAUC,QACbhR,EAhBmB,KAiBnB,MACF,KAAK+Q,GAAUE,KACbjR,EAAUyR,EACV,MACF,KAAKV,GAAUG,UACblR,EAAUqU,EAKd,OACE,yBAAKle,UAAU,kBACX6J,O,GArFelJ,a,qBCuBV2e,OAnBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKtf,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuf,OAAK,EAACpc,KAAK,IAAIxI,UAAW8S,IACjC,kBAAC,IAAD,CAAO8R,OAAK,EAACpc,KAAK,QAAQxI,UAAW8S,IACrC,kBAAC,IAAD,CAAO8R,OAAK,EAACpc,KAAK,mBAAmBxI,UAAWqgB,KAChD,kBAAC,IAAD,CAAOuE,OAAK,EAACpc,KAAK,gDACXxI,UAAWkjB,KAClB,kBAAC,IAAD,CAAO0B,OAAK,EAACpc,KAAK,0DACXxI,UAAWykB,SCZRI,QACW,cAA7B7jB,OAAO8jB,SAASC,UAEe,UAA7B/jB,OAAO8jB,SAASC,UAEhB/jB,OAAO8jB,SAASC,SAASzE,MACvB,2D,cCXN0E,UAAQC,UAAUC,IAElB3a,SAASkL,KAAK/F,iBAAiB,aAAa,SAAC9K,GAC3C2F,SAASkL,KAAK1N,UAAUod,IAAI,yBAG9B5a,SAASkL,KAAK/F,iBAAiB,WAAW,SAAC9K,GACpB,IAAlBA,EAAMwgB,SACP7a,SAASkL,KAAK1N,UAAUsd,OAAO,yBAInCC,IAASC,OACP,kBAAC,GAAD,MACAhb,SAASC,eAAe,SD8GpB,kBAAmBgb,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAjlB,GACLklB,QAAQllB,MAAMA,EAAMH,c","file":"static/js/main.c788f7bd.chunk.js","sourcesContent":["class Utils {\n  static async setStatePromise(component, stateObject) {\n    return new Promise((resolve, reject) => {\n      if(component.mounted !== false) {\n        component.setState(stateObject, () => {\n          resolve();\n        });\n      }\n      resolve();\n    });\n  }\n\n  static isEmpty(object) {\n    for(const property in object) {\n      if(object.hasOwnProperty(property))\n        return false;\n    }\n    return true;\n  }\n\n  static async componentSetError(component, message) {\n    if(component.setError) {\n      await component.setError(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: `Error: ${message}`\n      });\n    }\n  }\n\n  static async componentSetSuccess(component, message) {\n    if(component.setSuccess) {\n      await component.setSuccess(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: '',\n        success: message\n      });\n    }\n  }\n\n  static async renderMathJax() {\n    if(window.MathJax) {\n      await window.MathJax.typesetPromise();\n    }\n  }\n}\n\nexport default Utils;\n","import Utils from '../Utils';\n\nconst MIN_PASSWORD_LENGTH = 6;\n\nclass HeaderUtils {\n  static async checkPasswords(component, password, confirmPassword) {\n    if(password !== confirmPassword) {\n      await Utils.componentSetError(component, \"Your passwords don't match!\");\n      return false;\n    }\n\n    if(password.length < MIN_PASSWORD_LENGTH) {\n      await Utils.componentSetError(component, 'Your password is too short!');\n      return false;\n    }\n\n    return true;\n  }\n}\n\nexport default HeaderUtils;\n","import { Auth } from 'aws-amplify';\n\nclass UserAuthApi {\n  static async getProfile() {\n    try {\n      return await Auth.currentAuthenticatedUser();\n    }\n    catch(err) {\n      // currentAuthenticatedUser() throws this error if the user is not logged in\n      return null;\n    }\n  }\n\n  static async register(username, email, password) {\n    const info = await Auth.signUp({\n      username,\n      password,\n      attributes: {\n        email: email\n      }\n    });\n\n    // I like how Amplify makes this one inconsistently lowercase... lol\n    return info.codeDeliveryDetails.Destination;\n  }\n\n  static async verifyEmail(username, code) {\n    await Auth.confirmSignUp(username, code);\n  }\n\n  static async resendVerificationEmail(username) {\n    const info = await Auth.resendSignUp(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async forgotPassword(username) {\n    const info = await Auth.forgotPassword(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async resetPassword(username, code, password) {\n    await Auth.forgotPasswordSubmit(username, code, password);\n  }\n\n  static async login(username, password) {\n    await Auth.signIn(username, password);\n  }\n\n  static async logout() {\n    await Auth.signOut();\n  }\n\n  static async getUsername() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    return profile.username;\n  }\n\n  static async getAccessToken() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    const currentSession = profile.getSignInUserSession();\n    const accessToken = currentSession.getAccessToken();\n    return accessToken.getJwtToken();\n  }\n}\n\nexport default UserAuthApi;\n","const HeaderState = Object.freeze({\n  LOGIN: 0,\n  RECOVERY_USERNAME: 1,\n  RECOVERY_PASSWORD: 2,\n  RECOVERY_SUCCESS: 3,\n  REGISTER: 4,\n  REGISTER_VERIFY: 5,\n  REGISTER_SUCCESS: 6\n});\n\nexport default HeaderState;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\nimport '../css/RegisterForm.css';\n\nconst USERNAME_MIN_LENGTH = 3;\nconst USERNAME_MAX_LENGTH = 20;\nconst ERROR_TRIGGER_PREFIX = 'PreSignUp failed with error';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const screen = props.unverifiedAccountUsername ?\n                   HeaderState.REGISTER_VERIFY : HeaderState.REGISTER;\n    this.state = {\n      error: '',\n      success: '',\n      username: props.unverifiedAccountUsername,\n      destination: props.unverifiedAccountDestination,\n      screen: screen\n    };\n\n    this.close = this.close.bind(this);\n    this.register = this.register.bind(this);\n    this.verifyEmail = this.verifyEmail.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async setError(message) {\n    if(message.startsWith(ERROR_TRIGGER_PREFIX)) {\n      message = message.substring(\n        ERROR_TRIGGER_PREFIX.length, message.length - 1\n      );\n    }\n\n    await Utils.setStatePromise(this, {\n      error: `Error: ${message}`,\n      success: ''\n    });\n  }\n\n  async register(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const email = form.email.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!username || !email || !password || !confirmPassword) {\n      await this.setError('Please fill out all of the fields.')\n      return;\n    }\n\n    if(username.length < USERNAME_MIN_LENGTH || username.length > USERNAME_MAX_LENGTH) {\n      await this.setError(\n        `Your username must be between ${USERNAME_MIN_LENGTH} ` +\n        `and ${USERNAME_MAX_LENGTH} characters!`\n      );\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      const destination = await UserAuthApi.register(username, email, password);\n      Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.REGISTER_VERIFY\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async verifyEmail(event) {\n    event.preventDefault();\n\n    const code = event.target.code.value;\n    try {\n      await UserAuthApi.verifyEmail(this.state.username, code);\n      Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.REGISTER_SUCCESS\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.resendVerificationEmail(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const createAccountForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Create an account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.register}>\n          <label htmlFor=\"register-username\">Username</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 id=\"register-username\" />\n\n          <label htmlFor=\"register-email\">Email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"email\"\n                 id=\"register-email\" />\n\n          <label htmlFor=\"register-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 id=\"register-password\" />\n\n          <label htmlFor=\"register-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 id=\"register-confirm-password\" />\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Register\" />\n        </form>\n      </div>\n    );\n\n    const verifyEmailForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Verify your email!</h2>\n        <p>\n          You should've received an email at {this.state.destination} with a\n          verification code. If it isn't convenient for you to verify your\n          account now, you may do so later by logging in.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.verifyEmail}>\n          <label htmlFor=\"verification-code\">Verification code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"verification-code\" id=\"verification-code\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const emailVerifiedBox = (\n      <div className=\"Register-form Module-popup\">\n        <h2>Verification success!</h2>\n        <p className=\"Module-popup-last\">\n          Your email was successfully verified! Click the 'X' button in the\n          top-right corner to return to the site, and you'll be able to login.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.REGISTER:\n        currentForm = createAccountForm;\n        break;\n      case HeaderState.REGISTER_VERIFY:\n        currentForm = verifyEmailForm;\n        break;\n      case HeaderState.REGISTER_SUCCESS:\n        currentForm = emailVerifiedBox;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      username: null,\n      destination: null,\n      screen: props.screen || HeaderState.LOGIN\n    }\n\n    this.close = this.close.bind(this);\n    this.login = this.login.bind(this);\n    this.enablePasswordRecovery = this.enablePasswordRecovery.bind(this);\n    this.forgotPassword = this.forgotPassword.bind(this);\n    this.resetPassword = this.resetPassword.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback(false);\n  }\n\n  async login(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const password = form.password.value;\n\n    if(!username || !password) {\n      await Utils.componentSetError(this, \"Please fill out all of the fields.\");\n      return;\n    }\n\n    try {\n      try {\n        await UserAuthApi.login(username, password);\n        this.props.exitCallback(true);\n      }\n      catch(err) {\n        if(err.code === 'UserNotConfirmedException') {\n          const destination = await UserAuthApi.resendVerificationEmail(username);\n          await this.props.emailVerificationCallback(username, destination);\n        }\n        else {\n          throw err;\n        }\n      }\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async enablePasswordRecovery(event) {\n    await Utils.setStatePromise(this, {\n      error: '',\n      screen: HeaderState.RECOVERY_USERNAME\n    });\n  }\n\n  async forgotPassword(event) {\n    event.preventDefault();\n\n    const username = event.target.username.value;\n    if(!username) {\n      await Utils.componentsSetError(this, 'Please input your username.');\n      return;\n    }\n\n    try {\n      const destination = await UserAuthApi.forgotPassword(username);\n      await Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.RECOVERY_PASSWORD\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async resetPassword(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const code = form.code.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!code || !password || !confirmPassword) {\n      Utils.componentSetError(this, 'Please fill out all of the fields.');\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      await UserAuthApi.resetPassword(this.state.username, code, password);\n      await Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.RECOVERY_SUCCESS\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.forgotPassword(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loginForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Login to your account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.login}>\n          <label htmlFor=\"login-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"login-username\" id=\"login-username\" />\n\n          <label htmlFor=\"login-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"login-password\" id=\"login-password\" />\n\n          <button type=\"button\" onClick={this.enablePasswordRecovery}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Forgot your password?\n          </button>\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    );\n\n    const recoveryUsernameForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          Please provide your username or email, so that you can reset your\n          password via an emailed confirmation code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.forgotPassword}>\n          <label htmlFor=\"reset-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"reset-username\" id=\"reset-username\" />\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          You should've received an email at { this.state.destination } with a\n          verification code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.resetPassword}>\n          <label htmlFor=\"reset-code\">Code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"reset-code\" id=\"reset-code\" />\n\n          <label htmlFor=\"reset-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"reset-password\" id=\"reset-password\" />\n\n          <label htmlFor=\"reset-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 key=\"reset-confirm-password\" id=\"reset-confirm-password\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordSuccess= (\n      <div className=\"Register-form Module-popup\">\n        <h2>Password reset success!</h2>\n        <p>\n          Your password has been reset successfully. You'll now be able to\n          login again.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.LOGIN:\n        currentForm = loginForm;\n        break;\n      case HeaderState.RECOVERY_USERNAME:\n        currentForm = recoveryUsernameForm;\n        break;\n      case HeaderState.RECOVERY_PASSWORD:\n        currentForm = recoveryPasswordForm;\n        break;\n      case HeaderState.RECOVERY_SUCCESS:\n        currentForm = recoveryPasswordSuccess;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/UserMenu.css'\n\nclass UserMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = this.logout.bind(this);\n  }\n\n  async logout() {\n    await UserAuthApi.logout();\n    await this.props.logoutCallback();\n  }\n\n  render() {\n    return (\n      <div className=\"User-menu\">\n        <ol>\n          <li>\n            <Link className=\"Header-menu-button\" onClick={this.props.closeCallback}\n                  to={`/users/${this.props.username}`}>\n                  Your profile\n            </Link>\n          </li>\n          <div className=\"User-menu-divider\"></div>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\">\n              Settings\n            </button>\n          </li>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\" onClick={this.logout}>\n              Logout\n            </button>\n          </li>\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default UserMenu;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport UserMenu from './UserMenu';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nclass HeaderAuth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      showRegisterForm: false,\n      showLoginForm: false,\n      showUserMenu: false,\n      unverifiedAccountUsername: null,\n      unverifiedAccountDestination: null\n    };\n\n    this.refreshUsername = this.refreshUsername.bind(this);\n    this.toggleRegisterForm = this.toggleRegisterForm.bind(this);\n    this.toggleLoginForm = this.toggleLoginForm.bind(this);\n    this.toggleUserMenu = this.toggleUserMenu.bind(this);\n    this.hideUserMenu = this.hideUserMenu.bind(this);\n    this.afterLogin = this.afterLogin.bind(this);\n    this.unverifiedAccount = this.unverifiedAccount.bind(this);\n\n    window.suggestUserRegister = this.toggleRegisterForm;\n  }\n\n  async refreshUsername() {\n    const username = await UserAuthApi.getUsername();\n\n    await Utils.setStatePromise(this, {\n      username: username,\n      showUserMenu: false,\n      unverifiedAccountUsername: null\n    });\n  }\n\n  async componentDidMount() {\n    await this.refreshUsername();\n  }\n\n  async toggleRegisterForm(event) {\n    if(this.state.showRegisterForm) {\n      await Utils.setStatePromise(this, {\n        unverifiedAccountUsername: null,\n        unverifiedAccountDestination: null\n      });\n    }\n\n    await Utils.setStatePromise(this, {\n      showRegisterForm: !this.state.showRegisterForm\n    });\n  }\n\n  async toggleLoginForm(event) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: !this.state.showLoginForm\n    });\n  }\n\n  async toggleUserMenu(event) {\n    await Utils.setStatePromise(this, {\n      showUserMenu: !this.state.showUserMenu\n    });\n  }\n\n  async hideUserMenu(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.classList.contains('Header-menu-button'))\n      return;\n\n    await Utils.setStatePromise(this, {\n      showUserMenu: false\n    });\n  }\n\n  async afterLogin(loggedIn) {\n    await this.toggleLoginForm();\n\n    if(loggedIn)\n      await this.refreshUsername();\n  }\n\n  async unverifiedAccount(username, destination) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: false,\n      showRegisterForm: true,\n      unverifiedAccountUsername: username,\n      unverifiedAccountDestination: destination\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loginButtons = (\n      <div className=\"Header-top-right\">\n        <button className=\"Header-menu-button\" onClick={this.toggleLoginForm}>\n          Login\n        </button>\n        <span className=\"Header-divider\"></span>\n        <button className=\"Header-menu-button\" onClick={this.toggleRegisterForm}>\n          Create an account\n        </button>\n      </div>\n    );\n\n    const loggedInButton = (\n      <div className=\"Header-logged-in\" tabIndex=\"-1\"\n           onBlur={this.hideUserMenu}>\n        <div className=\"Header-top-right\">\n          <button className=\"Header-menu-button\" onClick={this.toggleUserMenu}>\n            { this.state.username }\n          </button>\n        </div>\n        <div className=\"Header-user-menu\">\n          {\n            this.state.showUserMenu &&\n            <UserMenu username={this.state.username}\n                      closeCallback={this.toggleUserMenu}\n                      logoutCallback={this.refreshUsername} />\n          }\n        </div>\n      </div>\n    );\n\n    const topRightButtons = this.state.username ? loggedInButton : loginButtons;\n\n    return (\n      <>\n        {\n          this.state.showRegisterForm &&\n          <RegisterForm exitCallback={this.toggleRegisterForm}\n                        unverifiedAccountUsername=\n                        {this.state.unverifiedAccountUsername}\n                        unverifiedAccountDestination=\n                        {this.state.unverifiedAccountDestination} />\n        }\n        {\n          this.state.showLoginForm &&\n          <LoginForm exitCallback={this.afterLogin}\n                     emailVerificationCallback={this.unverifiedAccount} />\n        }\n        { topRightButtons }\n      </>\n    );\n  }\n}\n\nexport default HeaderAuth;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport HeaderAuth from './HeaderAuth';\nimport '../css/Header.css';\n\nfunction Header() {\n  const path = useLocation().pathname;\n  const small = (path === '/' || path === '/home');\n  const outerClassName = small ? 'Header' : 'Header-small';\n\n  return (\n    <div className={outerClassName}>\n      { small && <h1>cp-notes beta</h1> }\n      <ul>\n        <li>\n          <Link to=\"/home\">Home</Link>\n        </li>\n      </ul>\n      <HeaderAuth />\n      <span className=\"Header-bottom\"></span>\n    </div>\n  );\n}\n\nexport default Header;\n","function lessThan(a, b, c, d) {\n  if(a === c)\n    return b < d;\n  return a < c;\n}\n\nclass Caret {\n  constructor(id) {\n    this.id = id;\n  }\n\n  getInfo() {\n    const selection = window.getSelection();\n    const anchorElement = selection.anchorNode.parentElement;\n    const focusElement = selection.focusNode.parentElement;\n\n    let anchorIndex = Number(anchorElement.getAttribute('index'));\n    let focusIndex = Number(focusElement.getAttribute('index'));\n    let anchorOffset = selection.anchorOffset;\n    let focusOffset = selection.focusOffset;\n\n    if(anchorIndex === focusIndex && anchorOffset === focusOffset) {\n      return {\n        rangeSelect: false,\n        index: anchorIndex,\n        position: anchorOffset\n      };\n    }\n\n    if(!lessThan(anchorIndex, anchorOffset, focusIndex, focusOffset)) {\n      [ anchorIndex, focusIndex ] = [ focusIndex, anchorIndex ];\n      [ anchorOffset, focusOffset ] = [ focusOffset, anchorOffset ];\n    }\n\n    return {\n      rangeSelect: true,\n      leftIndex: anchorIndex,\n      leftPosition: anchorOffset,\n      rightIndex: focusIndex,\n      rightPosition: focusOffset\n    };\n  }\n\n  setPosition(index, position) {\n    const blockElement = document.getElementById(this.id + index);\n    let textNode = blockElement.childNodes[0];\n\n    if(!textNode) {\n      textNode = document.createTextNode('');\n      blockElement.appendChild(textNode);\n    }\n\n    let range = document.createRange();\n    range.setStart(textNode, position);\n    range.collapse(true);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  setRangePosition(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const leftBlockElement = document.getElementById(this.id + leftIndex);\n    const rightBlockElement = document.getElementById(this.id + rightIndex);\n    const leftTextNode = leftBlockElement.childNodes[0];\n    const rightTextNode = rightBlockElement.childNodes[0];\n\n    let range = document.createRange();\n    range.setStart(leftTextNode, leftPosition);\n    range.setEnd(rightTextNode, rightPosition);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport default Caret;\n","const ContentType = Object.freeze({\n  BOLD: (1 << 1),\n  ITALIC: (1 << 2),\n  UNDERLINE: (1 << 3)\n});\n\nexport default ContentType;\n","import React, { Component } from 'react';\nimport ContentType from './ContentType';\nimport Utils from '../Utils';\n\nclass Toolbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mask: 0\n    };\n\n    this.updatingMask = false;\n    this.updateMask = this.updateMask.bind(this);\n  }\n\n  async updateMask(bit) {\n    this.updatingMask = true;\n\n    await Utils.setStatePromise(this, {\n      mask : this.state.mask ^ bit\n    });\n\n    this.props.callback(bit, (this.state.mask & bit) > 0);\n  }\n\n  async componentDidUpdate() {\n    if(this.updatingMask) {\n      this.updatingMask = false;\n      return;\n    }\n\n    if(this.props.mask !== this.state.mask) {\n      await Utils.setStatePromise(this, {\n        mask: this.props.mask\n      });\n    }\n  }\n\n  render() {\n    const boldSelected = (this.state.mask & ContentType.BOLD) > 0;\n    const italicSelected = (this.state.mask & ContentType.ITALIC) > 0;\n    const underlineSelected = (this.state.mask & ContentType.UNDERLINE) > 0;\n\n    return (\n      <div className=\"Askd-text-editor-toolbar\">\n        <ul>\n          <li className={`Askd-tb-selected-${boldSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-BOLD\"\n                    onClick={() => this.updateMask(ContentType.BOLD)} />\n          </li>\n          <li className={`Askd-tb-selected-${italicSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-ITALIC\"\n                    onClick={() => this.updateMask(ContentType.ITALIC)} />\n          </li>\n          <li className={`Askd-tb-selected-${underlineSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-UNDERLINE\"\n                    onClick={() => this.updateMask(ContentType.UNDERLINE)} />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","// This is different from str.length; for example emojis use up 2\nfunction countCharacters(str) {\n  let counter = 0;\n  for(const character of str) {\n    Number(character);  // Silence unused variable warning\n    counter++;\n  }\n  return counter;\n}\n\nclass VirtualTextEditor {\n  constructor(initialContent) {\n    this.characters = [];\n    this.globalCaretPosition = 0;\n\n    if(initialContent) {\n      for(const block of initialContent) {\n        const mask = block.m;\n        for(const char of block.c) {\n          this.characters.push({\n            m: mask,\n            c: char\n          });\n        }\n      }\n\n      /* Remove extra newline character */\n      this.characters.splice(this.characters.length - 1);\n    }\n\n    this.updateBlocks();\n  }\n\n  getIndexAndPosition(globalIndex) {\n    let charactersScanned = 0;\n    for(let i = 0; i < this.blocks.length; i++) {\n      const block = this.blocks[i];\n      const blockLength = countCharacters(block.c);\n      const blockEndIndex = charactersScanned + blockLength;\n\n      if(globalIndex <= blockEndIndex) {\n        let position = 0;\n        for(let j = charactersScanned; j <= blockEndIndex; j++) {\n          if(globalIndex === j) {\n            return [ i, position ];\n          }\n          position += this.characters[j].c.length;\n        }\n      }\n      charactersScanned += blockLength;\n    }\n\n    return [ null, null ];\n  }\n\n  getGlobalIndex(index, position) {\n    let globalIndex = this.blockStarts[index];\n    let characterCounter = 0;\n    while(characterCounter < position) {\n      characterCounter += this.characters[globalIndex].c.length;\n      globalIndex++;\n    }\n\n    if(characterCounter === position)\n      return globalIndex;\n\n    return globalIndex - 1;\n  }\n\n  getCharacterMask(index, position, rangeSelect) {\n    const globalIndex = this.getGlobalIndex(index, position);\n\n    if(globalIndex === 0) {\n      return this.characters[0].m;\n    }\n    else if(rangeSelect) {\n      return this.characters[globalIndex].m;\n    }\n    return this.characters[globalIndex - 1].m;\n  }\n\n  insert(index, position, insertedString, mask) {\n    const globalIndex = this.getGlobalIndex(index, position);\n    const rightBuffer = this.characters.splice(globalIndex);\n\n    for(const char of insertedString) {\n      this.characters.push({\n        m: mask,\n        c: char\n      });\n    }\n\n    const globalCaretPosition = this.characters.length;\n    for(const character of rightBuffer) {\n      this.characters.push(character);\n    }\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  delete(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n    const deleteLength = globalRightIndex - globalLeftIndex;\n\n    if(globalLeftIndex < 0) {\n      return [ 0, 0 ];\n    }\n\n    this.characters.splice(globalLeftIndex, deleteLength);\n    const globalCaretPosition = globalLeftIndex;\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  rangeMaskUpdate(leftIndex, leftPosition, rightIndex, rightPosition, bit, on) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n\n    for(let i = globalLeftIndex; i < globalRightIndex; i++) {\n      if((on && !(this.characters[i].m & bit)) ||\n         (!on && (this.characters[i].m & bit))) {\n        this.characters[i].m = this.characters[i].m ^ bit;\n      }\n    }\n\n    this.updateBlocks();\n\n    const [ newLeftIndex, newLeftPosition ] = this.getIndexAndPosition(globalLeftIndex);\n    const [ newRightIndex, newRightPosition ] = this.getIndexAndPosition(globalRightIndex);\n    return [ newLeftIndex, newLeftPosition, newRightIndex, newRightPosition ];\n  }\n\n  updateBlocks() {\n    if(this.characters.length === 0) {\n      this.blocks = [\n        { m: 0, c: '' }\n      ];\n      this.blockStarts = [ 0 ];\n\n      return;\n    }\n\n    this.blocks = [];\n    this.blockStarts = [];\n\n    let currentMask = this.characters[0].m;\n    let characterBuffer = [];\n    this.characters.forEach((character, i) => {\n      if(character.m !== currentMask) {\n        this.blocks.push({\n          m: currentMask,\n          c: characterBuffer.join('')\n        });\n        this.blockStarts.push(i - characterBuffer.length);\n\n        currentMask = character.m;\n        characterBuffer = [ character.c ];\n      }\n      else {\n        characterBuffer.push(character.c);\n      }\n    });\n\n    this.blocks.push({\n      m: currentMask,\n      c: characterBuffer.join('')\n    });\n    this.blockStarts.push(this.characters.length - characterBuffer.length);\n\n    /* Strange hack - extra newline character sets correct caret positioning;\n       this extra character also somehow can't be selected */\n    this.blocks[this.blocks.length - 1].c += String.fromCharCode(10);\n  }\n\n  getContent() {\n    return this.blocks;\n  }\n}\n\nexport default VirtualTextEditor;\n","import React, { Component } from 'react';\nimport ContentType from './ContentType';\n\nfunction getClassName(mask) {\n  let className = '';\n  for(const style in ContentType) {\n    if(mask & ContentType[style]) {\n      className += `Askd-te-${style} `;\n    }\n  }\n  return className;\n}\n\nclass Block extends Component {\n  render() {\n    const block = this.props.block;\n    const editorId = this.props.id;\n    const index = this.props.index;\n\n    return (\n      <div className={getClassName(block.m)} id={editorId + index}\n           suppressContentEditableWarning=\"true\" index={index}>\n        { block.c }\n      </div>\n    );\n  }\n}\n\nexport default Block;\n","import React from 'react';\nimport Block from './Block';\n\nfunction TextEditorContent({ content, id, editable }) {\n  let contentElements = [];\n  content.forEach((block, i) => {\n    contentElements.push(\n      <Block block={block} id={id} index={i} key={i} />\n    );\n  });\n\n  return (\n    <div className=\"Askd-text-editor-text\" id={id} tabIndex=\"0\"\n         contentEditable={editable} suppressContentEditableWarning=\"true\"\n         spellCheck=\"false\">\n         { contentElements }\n    </div>\n  );\n}\n\nexport default TextEditorContent;\n","const registerEventHandlers = (that) => {\n  that.textEditor.addEventListener('keydown', async (event) => {\n    /* TBD, bro who even uses that button lol */\n    if(event.key === 'Delete') {\n      event.preventDefault();\n    }\n    else if(event.key === 'Backspace' && !that.composing) {\n      await that.delete();\n      event.preventDefault();\n    }\n    else if(event.key === 'Enter' && !that.composing) {\n      await that.insert(String.fromCharCode(10));\n      event.preventDefault();\n    }\n  });\n\n  that.textEditor.addEventListener('beforeinput', async (event) => {\n    if(event.isComposing || that.composing) {\n      return;\n    }\n\n    event.preventDefault();\n\n    /* Mobile autocorrect and word selection from a menu */\n    if(event.inputType === 'insertReplacementText') {\n      that.caretInfo.rangeSelect = true;\n      const insertedString = event.dataTransfer.getData('text');\n      await that.insert(insertedString);\n    }\n    /* Generic event with a valid 'data'; things like undo/redo operations and\n       drag and drop are TBD */\n    else if(event.data) {\n      await that.insert(event.data);\n    }\n  });\n\n  that.textEditor.addEventListener('paste', async (event) => {\n    event.preventDefault();\n\n    const pasteText = event.clipboardData.getData('Text');\n    await that.insert(pasteText);\n  });\n\n  that.textEditor.addEventListener('compositionstart', async (event) => {\n    if(that.caretInfo.rangeSelect) {\n      await that.delete();\n    }\n\n    that.composing = true;\n    that.compositionIndex = that.caretInfo.index;\n    that.compositionPosition = that.caretInfo.position;\n\n    /* Prevent browser from overwriting the next block */\n    let nextBlockElement = document.getElementById(that.id +\n      (that.compositionIndex + 1));\n    if(nextBlockElement) {\n      nextBlockElement.setAttribute('contenteditable', 'false');\n    }\n  });\n\n  that.textEditor.addEventListener('compositionend', async (event) => {\n    if(!that.composing) {\n      return;\n    }\n\n    /* Composition has ended; set the next block to be editable again */\n    let nextBlockElement = document.getElementById(that.id +\n      (that.compositionIndex + 1));\n    if(nextBlockElement) {\n      nextBlockElement.setAttribute('contenteditable', 'true');\n    }\n\n    that.composing = false;\n    await that.compositionInsert(event.data);\n  });\n\n  document.addEventListener('selectionchange', async (event) => {\n    if(that.composing) {\n      return;\n    }\n\n    try {\n      const selection = window.getSelection();\n      const anchorElement = selection.anchorNode.parentElement;\n      const parentElement = anchorElement.parentElement;\n\n      if(anchorElement.getAttribute('id') === that.id + '!' ||\n         parentElement.getAttribute('id') === that.id) {\n        await that.selectionChanged();\n      }\n    }\n    catch(err) {\n      /* anchorElement isn't a div inside the text editor */\n    }\n  });\n}\n\nexport default registerEventHandlers;\n","import React, { Component } from 'react';\nimport Caret from './Caret';\nimport Toolbar from './Toolbar';\nimport VirtualTextEditor from './VirtualTextEditor';\nimport TextEditorContent from './TextEditorContent';\nimport Utils from '../Utils';\nimport registerEventHandlers from './registerEventHandlers';\nimport '../css/TextEditor.css';\n\nclass TextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.id = this.props.uniqueKey ?\n                `Askd-text-editor${this.props.uniqueKey}` : 'Askd-text-editor';\n    this.virtualTextEditor = new VirtualTextEditor(this.props.initialContent);\n    this.caret = new Caret(this.id);\n\n    this.contentChanged = false;\n    this.caretInfo = {\n      rangeSelect: false,\n      index: 0,\n      position: 0\n    };\n\n    this.composing = false;\n    this.compositionIndex = null;\n    this.compositionPosition = null;\n\n    this.state = {\n      content: this.virtualTextEditor.getContent(),\n      editorMask: 0\n    };\n\n    this.toolbarUpdate = this.toolbarUpdate.bind(this);\n  }\n\n  async delete() {\n    if(!this.caretInfo.rangeSelect) {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.index, this.caretInfo.position - 1,\n        this.caretInfo.index, this.caretInfo.position\n      );\n    }\n    else {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n        this.caretInfo.rightIndex, this.caretInfo.rightPosition\n      );\n    }\n\n    this.caretInfo.rangeSelect = false;\n    await this.updateText();\n  }\n\n  async insert(newString) {\n    this.updateCaretInfo();\n\n    if(this.caretInfo.rangeSelect) {\n      await this.delete();\n    }\n\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.caretInfo.index, this.caretInfo.position, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.updateText();\n  }\n\n  async compositionInsert(newString) {\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.compositionIndex, this.compositionPosition, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.updateText();\n  }\n\n  async rangeMaskUpdate(bit, on) {\n    if(!this.caretInfo.rangeSelect) {\n      return;\n    }\n\n    [ this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition ] =\n    this.virtualTextEditor.rangeMaskUpdate(\n      this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition, bit, on\n    );\n\n    await this.updateText();\n  }\n\n  async updateText() {\n    this.contentChanged = true;\n    await Utils.setStatePromise(this, {\n      content: this.virtualTextEditor.getContent()\n    });\n  }\n\n  async updateMask(newMask) {\n    await Utils.setStatePromise(this, {\n      editorMask: newMask\n    });\n  }\n\n  async toolbarUpdate(bit, on) {\n    this.textEditor.focus();\n    await this.updateMask(this.state.editorMask ^ bit);\n    await this.rangeMaskUpdate(bit, on);\n  }\n\n  updateCaretInfo() {\n    const newCaretInfo = this.caret.getInfo();\n\n    /* Maintain previous info for the other selection type */\n    if(newCaretInfo.rangeSelect) {\n      this.caretInfo.leftIndex = newCaretInfo.leftIndex;\n      this.caretInfo.leftPosition = newCaretInfo.leftPosition;\n      this.caretInfo.rightIndex = newCaretInfo.rightIndex;\n      this.caretInfo.rightPosition = newCaretInfo.rightPosition;\n      this.caretInfo.rangeSelect = true;\n    }\n    else {\n      this.caretInfo.index = newCaretInfo.index;\n      this.caretInfo.position = newCaretInfo.position;\n      this.caretInfo.rangeSelect = false;\n    }\n  }\n\n  async selectionChanged() {\n    this.updateCaretInfo();\n\n    let leftCharacterMask;\n    if(this.caretInfo.rangeSelect) {\n      leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition, true\n      );\n    }\n    else {\n      leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.index, this.caretInfo.position, false\n      );\n    }\n\n    await this.updateMask(leftCharacterMask);\n  }\n\n  componentDidMount() {\n    this.textEditor = document.getElementById(this.id);\n    registerEventHandlers(this);\n  }\n\n  componentDidUpdate() {\n    if(!this.contentChanged) {\n      return;\n    }\n\n    /* The rendered text must be manually sanitized since there's no way to\n       preventDefault a compositionend event in some browsers... */\n    let junkNodes = [];\n    for(const node of this.textEditor.childNodes) {\n      if(node.nodeType === Node.TEXT_NODE || node.nodeName === 'BR' ||\n         node.nodeName === 'SPAN') {\n        junkNodes.push(node);\n      }\n    }\n\n    for(const node of junkNodes) {\n      this.textEditor.removeChild(node);\n    }\n\n    for(let i = 0; i < this.state.content.length; i++) {\n      let childElement = this.textEditor.children[i];\n      if(childElement.innerHTML !== this.state.content[i].c) {\n        childElement.childNodes[0].nodeValue = this.state.content[i].c;\n      }\n    }\n\n    if(this.caretInfo.rangeSelect) {\n      this.caret.setRangePosition(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n        this.caretInfo.rightIndex, this.caretInfo.rightPosition\n      );\n    }\n    else {\n      this.caret.setPosition(this.caretInfo.index, this.caretInfo.position);\n    }\n\n    this.contentChanged = false;\n    this.updateCaretInfo();\n\n    /* Callback with new content */\n    if(this.props.onChange) {\n      this.props.onChange(this.state.content);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"Askd-text-editor\" id={this.id + '!'}>\n        <Toolbar mask={this.state.editorMask} callback={this.toolbarUpdate} />\n        <TextEditorContent content={this.state.content} id={this.id}\n                           editable={true} />\n      </div>\n    );\n  }\n}\n\nexport default TextEditor;\n","import React, { Component } from 'react';\nimport TextEditor from '../TextEditor/TextEditor';\nimport Utils from '../Utils';\n\nclass CpNotes extends Component {\n  async componentDidMount() {\n    await Utils.renderMathJax();\n  }\n\n  render() {\n    return (\n      <div className=\"Module-wrapper\">\n        <div className=\"Module-description Module-description-centered\">\n          <p>A work-in-progress web application for storing publicly\n          accessible competitive programming notes! \\[\\LaTeX\\]</p>\n        </div>\n        <TextEditor />\n      </div>\n    );\n  }\n}\n\nexport default CpNotes;\n","import React from 'react';\nimport CpNotes from '../Home/CpNotes';\n\nfunction Home() {\n  return (\n    <>\n      <CpNotes />\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction UserInfo({ info }) {\n  return (\n    <>\n      <h2 className=\"Module-heading\">{info.username}</h2>\n      {\n        info.email &&\n        <p>Email: {info.email} (only visible to you)</p>\n      }\n    </>\n  );\n}\n\nexport default UserInfo;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport '../css/SearchSelect.css';\n\nconst MAX_OPTIONS = 10;\nconst GLOBAL_SORT_KEY = 'sk';\n\nclass SearchSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchTerm: '',\n      previousValidSearchTerm: '',\n      showOptions: false,\n      options: [],\n      filteredOptions: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleOptionSelect = this.handleOptionSelect.bind(this);\n  }\n\n  getOptionString(option) {\n    const optionStringArray = [];\n    for(const key of this.props.keys)\n      optionStringArray.push(option[key]);\n\n    return optionStringArray.join(' - ');\n  }\n\n  async filterOptions() {\n    var filteredOptions = [];\n    const searchTerm = this.state.searchTerm.toLowerCase();\n\n    for(const option of this.state.options) {\n      if(filteredOptions.length === MAX_OPTIONS)\n        break;\n\n      const optionString = this.getOptionString(option);\n      if(optionString.toLowerCase().includes(searchTerm)) {\n        filteredOptions.push(option);\n        continue;\n      }\n\n      for(const key of this.props.keys) {\n        if(option[key].toLowerCase().includes(searchTerm)) {\n          filteredOptions.push(option);\n          break;\n        }\n      }\n    }\n\n    await Utils.setStatePromise(this, {\n      filteredOptions: filteredOptions\n    });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.staticKey && !this.props.staticKey) {\n      await Utils.setStatePromise(this, {\n        searchTerm: ''\n      });\n      return;\n    }\n\n    if(this.props.staticKey === prevProps.staticKey)\n      return;\n\n    await Utils.setStatePromise(this, {\n      searchTerm: '',\n      loading: true\n    });\n    const options = await this.props.search();\n\n    await Utils.setStatePromise(this, {\n      loading: false,\n      previousValidSearchTerm: '',\n      options: options,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleChange(event) {\n    await Utils.setStatePromise(this, {\n      searchTerm: event.target.value,\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleBlur(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.id === `Select-options-${this.props.name}`)\n      return;\n\n    await Utils.setStatePromise(this, {\n      showOptions: false,\n      searchTerm: this.state.previousValidSearchTerm\n    });\n  }\n\n  async handleFocus(event) {\n    await Utils.setStatePromise(this, {\n      showOptions: true\n    });\n  }\n\n  async handleOptionSelect(sortKey, optionString) {\n    await Utils.setStatePromise(this, {\n      searchTerm: optionString,\n      previousValidSearchTerm: optionString,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n    this.props.callback(sortKey);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    var optionElements = [];\n    for(const option of this.state.filteredOptions) {\n      const optionString = this.getOptionString(option);\n      const displayString = option[this.props.displayKey];\n      const sortKey = option[GLOBAL_SORT_KEY];\n      optionElements.push(\n        <li onClick={() => this.handleOptionSelect(sortKey, displayString)}\n            key={sortKey}>\n            {optionString}\n        </li>\n      );\n    }\n\n    return (\n      <div onBlur={this.handleBlur} className=\"Search-select\">\n        <input className={this.state.loading ? \"Askd-form-loading\" : \"\"}\n               onChange={this.handleChange} autoComplete=\"off\" type=\"text\"\n               value={this.state.searchTerm} onFocus={this.handleFocus}\n               name={this.props.name} id={this.props.id}\n               disabled={!this.props.search || this.state.loading} />\n        {\n          optionElements.length > 0 && this.state.showOptions &&\n          <ol id={`Select-options-${this.props.name}`} tabIndex=\"-1\"\n              className=\"Search-select-options\">\n            { optionElements }\n          </ol>\n        }\n      </div>\n    );\n  }\n}\n\nexport default SearchSelect;\n","const ApiConstants = Object.freeze({\n  API_ENDPOINT: 'https://qqmeusmrfk.execute-api.us-east-1.amazonaws.com/prod/'\n});\n\nexport default ApiConstants;\n","import queryString from 'query-string';\nimport ApiConstants from './ApiConstants';\nimport UserAuthApi from './UserAuthApi';\n\nclass Api {\n  static createApiError(name, message) {\n    const err = Error(message);\n    err.name = name;\n\n    return err;\n  }\n\n  static async manageResponseError(response) {\n    if(response.status === 400) {\n      const responseJson = await response.json();\n      throw Api.createApiError(responseJson.name, responseJson.message);\n    }\n    else if(response.status !== 200) {\n      throw Error('Request failed!');\n    }\n  }\n\n  static async sendRequestBody(resource, options, method) {\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + resource, {\n      method: method,\n      body: JSON.stringify(options),\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async getJson(resource, options) {\n    const path = `${resource}?${queryString.stringify(options)}`;\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + path, {\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async postJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'POST');\n  }\n\n  static async putJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'PUT');\n  }\n\n  static async deleteJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'DELETE');\n  }\n}\n\nexport default Api;\n","const SolvedState = Object.freeze({\n  SOLVED: { value: 0, text: 'Solved', css: 'solved' },\n  UPSOLVED: { value: 1, text: 'Upsolved', css: 'upsolved' },\n  UPSOLVED_HELP: { value: 2, text: 'Upsolved with help', css: 'upsolved-help' },\n  UNSOLVED: { value: 3, text: 'Unsolved', css: 'unsolved' }\n});\n\nexport default SolvedState;\n","import Api from './Api';\nimport SolvedState from '../Enum/SolvedState';\n\nclass ProblemsApi {\n  static _prettifyProblems(problems) {\n    for(let i = 0; i < problems.length; i++) {\n      problems[i].prettySk = problems[i].sk.replaceAll('#', '');\n    }\n  }\n\n  static async getContests(platform) {\n    const options = {\n      platform: platform\n    };\n\n    return await Api.getJson('contests', options);\n  }\n\n  static async getProblems(platform, contestId) {\n    const options = {\n      platform: platform,\n      contestId: contestId\n    };\n\n    let problems = await Api.getJson('problems', options);\n    ProblemsApi._prettifyProblems(problems);\n\n    return problems;\n  }\n\n  static async getProblemInfo(platform, problemId) {\n    const options = {\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.getJson('problems', options);\n  }\n\n  static getSolvedStateText(solvedStateValue) {\n    solvedStateValue = parseInt(solvedStateValue);\n    for(const state in SolvedState) {\n      if(SolvedState[state].value === solvedStateValue) {\n        return SolvedState[state].text;\n      }\n    }\n  }\n\n  static getSolvedStateCssClass(solvedStateValue) {\n    solvedStateValue = parseInt(solvedStateValue);\n    for(const state in SolvedState) {\n      if(SolvedState[state].value === solvedStateValue) {\n        return SolvedState[state].css;\n      }\n    }\n  }\n}\n\nexport default ProblemsApi;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport SearchSelect from '../SearchSelect/SearchSelect';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport '../css/AddProblemForm.css';\n\nclass AddProblemForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      platform: null,\n      contestSortKey: null,\n      problemSortKey: null,\n      skipContestSearch: false\n    };\n\n    this.close = this.close.bind(this);\n    this.handlePlatformChange = this.handlePlatformChange.bind(this);\n    this.toggleSkipContestSearch = this.toggleSkipContestSearch.bind(this);\n    this.updateProblemSortKey = this.updateProblemSortKey.bind(this);\n    this.updateContestSortKey = this.updateContestSortKey.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  close() {\n    this.props.callback(null, null, null);\n  }\n\n  async handlePlatformChange(event) {\n    await Utils.setStatePromise(this, {\n      platform: event.target.value\n    });\n  }\n\n  async toggleSkipContestSearch(event) {\n    await Utils.setStatePromise(this, {\n      skipContestSearch: !this.state.skipContestSearch,\n      contestSortKey: null,\n      problemSortKey: null\n    });\n  }\n\n  async updateContestSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      contestSortKey: sortKey,\n      problemSortKey: null\n    });\n  }\n\n  async updateProblemSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      problemSortKey: sortKey\n    });\n  }\n\n  async addProblem(event) {\n    event.preventDefault();\n\n    if(!this.state.problemSortKey) {\n      await Utils.componentSetError(this, 'Please search and select a problem.');\n      return;\n    }\n\n    this.props.callback(this.state.problemSortKey, this.state.platform, this);\n  }\n\n  render() {\n    var searchContestFunction = null;\n    var searchContestKey = null;\n    if(this.state.platform && !this.state.skipContestSearch) {\n      searchContestFunction = () => ProblemsApi.getContests(this.state.platform);\n      searchContestKey = this.state.platform;\n    }\n\n    var searchProblemFunction = null;\n    var searchProblemKey = null;\n    if(this.state.platform && this.state.contestSortKey) {\n      searchProblemFunction = () =>\n        ProblemsApi.getProblems(this.state.platform, this.state.contestSortKey);\n      searchProblemKey = this.state.platform + this.state.contestSortKey;\n    }\n    else if(this.state.platform && this.state.skipContestSearch) {\n      searchProblemFunction = () => ProblemsApi.getProblems(this.state.platform);\n      searchProblemKey = this.state.platform;\n    }\n\n    var skipButtonText = this.state.skipContestSearch ?\n                         'Want to filter by contest?' :\n                         'Want to skip filtering by contest?';\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">\n                X\n        </button>\n        <div className=\"Add-problem-form Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Add a problem!</h2>\n          <form className=\"Askd-form\" onSubmit={this.addProblem}>\n            <label htmlFor=\"cp-platform\">Platform</label>\n            <select defaultValue=\"\" onChange={this.handlePlatformChange}\n                    name=\"platform\" id=\"cp-platform\">\n              <option disabled value=\"\"></option>\n              <option value=\"CodeForces\">CodeForces</option>\n              <option value=\"CodeChef\">CodeChef</option>\n            </select>\n\n            <label htmlFor=\"cp-contest\">Contest</label>\n            <SearchSelect name='contest' id='cp-contest' search={searchContestFunction}\n                          keys={['sk', 'name']} callback={this.updateContestSortKey}\n                          displayKey='name' staticKey={searchContestKey} />\n\n            <button onClick={this.toggleSkipContestSearch}\n                    type=\"button\" className=\"Askd-form-link Askd-form-link-separator\">\n              { skipButtonText }\n            </button>\n\n            <label htmlFor=\"cp-title\">Problem</label>\n            <SearchSelect name='title' id='cp-title' search={searchProblemFunction}\n                          keys={['prettySk', 'name']} callback={this.updateProblemSortKey}\n                          displayKey='name' staticKey={searchProblemKey} />\n\n            <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                   value=\"Add Problem\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddProblemForm;\n","import Api from './Api';\n\nclass NotesApi {\n  static async getNotes(username) {\n    const options = {\n      username: username\n    };\n\n    return await Api.getJson('notes', options);\n  }\n\n  static async getNoteInfo(username, platform, problemId, forcePublished) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId,\n      forcePublished: forcePublished\n    };\n\n    return await Api.getJson('notes', options);\n  }\n\n  static async addNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.postJson('notes', options);\n  }\n\n  static async editNote(username, platform, problemId, title, solved,\n                        content, published) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId,\n      title: title,\n      solved: solved,\n      content: content,\n      published: published\n    };\n\n    return await Api.putJson('notes', options);\n  }\n\n  static async deleteNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.deleteJson('notes', options);\n  }\n}\n\nexport default NotesApi;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\n\nclass UserNoteInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    const solvedClass = ProblemsApi.getSolvedStateCssClass(info.solved);\n    const problemUrl = info.problemSk.replace('#', '/');\n    const publishedClass = info.published ? 'published' : 'unpublished';\n    const timestamp = (new Date(info.editedTime)).toLocaleDateString();\n    const authorUsername = info.username;\n\n    return (\n      <li className={`User-note-info User-note-info-${solvedClass}`}>\n        <ul className=\"User-note-info-links\">\n          {\n            this.props.loggedInUsername === authorUsername &&\n            <li>\n              <Link className=\"Askd-form-link\"\n                    to={`/notes/edit/${info.platform}/${problemUrl}`}>\n                Edit\n              </Link>\n            </li>\n          }\n          {\n            info.published &&\n            <li>\n              <Link className=\"Askd-form-link\"\n                    to={`/notes/${authorUsername}/${info.platform}/${problemUrl}`}>\n                View\n              </Link>\n            </li>\n          }\n        </ul>\n        <h5>\n          {info.platform} {info.problemCode} - {info.problemName}\n        </h5>\n        <h6 className=\"User-note-info-title\">\n          {info.title}\n        </h6>\n        <h6 className=\"User-note-info-timestamp\">\n          {timestamp}\n        </h6>\n        <ul className=\"User-note-info-tags\">\n          <li className=\"User-note-info-tag User-note-solved-indicator\" />\n          <li className={`User-note-info-tag User-note-tag-${publishedClass}`} />\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default UserNoteInfo;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\n\nclass UserContestInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    let noteElements = [];\n    for(let i = 0; i < info.notes.length; i++) {\n      const note = info.notes[i];\n      const problemCode = note.problemSk.split('#')[1];\n      const problemUrl = note.problemSk.replace('#', '/');\n      const authorUsername = note.username;\n\n      let codeClassName = 'User-note-contest-code';\n      if(problemCode.length >= 3) {\n        codeClassName += '-small';\n      }\n\n      const solvedClass = ProblemsApi.getSolvedStateCssClass(note.solved);\n\n      noteElements.push(\n        <li key={i} className={`User-note-contest-note User-note-contest-${solvedClass}`}>\n          <ul className=\"User-note-contest-links\">\n            {\n              this.props.loggedInUsername === authorUsername &&\n              <li>\n                <Link className=\"Askd-form-link\"\n                      to={`/notes/edit/${note.platform}/${problemUrl}`}>\n                  Edit\n                </Link>\n              </li>\n            }\n            {\n              note.published &&\n              <li>\n                <Link className=\"Askd-form-link\"\n                      to={`/notes/${authorUsername}/${note.platform}/${problemUrl}`}>\n                  View\n                </Link>\n              </li>\n            }\n          </ul>\n          <span className={codeClassName}>\n            {problemCode}\n          </span>\n        </li>\n      );\n    }\n\n    const timestamp = (new Date(info.editedTime)).toLocaleDateString();\n\n    return (\n      <li className=\"User-note-info\">\n        <h5>\n          {info.contestName}\n        </h5>\n        <h6 className=\"User-note-contest-timestamp\">\n          {timestamp}\n        </h6>\n        <ul className=\"User-note-contest-notes\">\n          { noteElements }\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default UserContestInfo;\n","import React from 'react';\n\nfunction UserNotesTitleDropdown({ title, innerContent, showing, toggleCallback }) {\n  const showText = showing ? 'Hide' : 'Show';\n\n  return (\n    <li className=\"User-notes-title-dropdown\">\n      <button className=\"User-notes-title-dropdown-showhide Askd-form-link\"\n              onClick={toggleCallback}>\n        { showText }\n      </button>\n      <h4 className=\"User-notes-title-dropdown-heading\">\n        {title}\n      </h4>\n      { showing && innerContent }\n    </li>\n  );\n}\n\nexport default UserNotesTitleDropdown;\n","class VirtualPaginator {\n  constructor(pageSize, content) {\n    this.pageSize = pageSize;\n    this.setContent(content);\n  }\n\n  setContent(content) {\n    this.content = [];\n    this.activeItems = content.length;\n\n    for(let i = 0; i < content.length; i++) {\n      let item = content[i];\n      item.paginatorActive = true;\n      this.content.push(item);\n    }\n  }\n\n  toggleActiveItems(indices) {\n    for(const index of indices) {\n      const active = this.content[index].paginatorActive;\n      this.content[index].paginatorActive = !active;\n\n      if(active) {\n        this.activeItems--;\n      }\n      else {\n        this.activeItems++;\n      }\n    }\n  }\n\n  getContent(pageIndex) {\n    let currentIndex = 1;\n    let activeBufferSize = 0;\n    let itemBuffer = [];\n\n    for(const item of this.content) {\n      itemBuffer.push(item);\n      if(item.paginatorActive) {\n        activeBufferSize++;\n        if(activeBufferSize === this.pageSize) {\n          if(currentIndex === pageIndex)\n            return itemBuffer;\n          itemBuffer = [];\n          activeBufferSize = 0;\n          currentIndex++;\n        }\n      }\n    }\n\n    if(currentIndex === pageIndex) {\n      return itemBuffer;\n    }\n\n    throw Error('Page index out of range!');\n  }\n\n  getPageCount() {\n    let pageCount = 0;\n    let bufferSize = 0;\n    let activeBufferSize = 0;\n    for(const item of this.content) {\n      if(bufferSize === 0) {\n        pageCount++;\n      }\n\n      bufferSize++;\n      if(item.paginatorActive) {\n        activeBufferSize++;\n      }\n      if(activeBufferSize === this.pageSize) {\n        activeBufferSize = 0;\n        bufferSize = 0;\n      }\n    }\n\n    return pageCount;\n  }\n}\n\nexport default VirtualPaginator;\n","import React from 'react';\nimport '../css/Paginator.css';\n\nfunction Paginator({ currentPage, totalPages, callback }) {\n  let pageIndices = [ currentPage ];\n\n  let after = currentPage + 1;\n  let increment = 2;\n  while(after < totalPages) {\n    pageIndices.push(after);\n    after += increment;\n    increment *= 2;\n  }\n\n  let before = currentPage - 1;\n  increment = 2;\n  while(before > 1) {\n    pageIndices.push(before);\n    before -= increment;\n    increment *= 2;\n  }\n\n  if(currentPage !== 1)\n    pageIndices.push(1);\n  if(currentPage !== totalPages && totalPages > 1)\n    pageIndices.push(totalPages);\n\n  pageIndices.sort((a, b) => a - b);\n\n  let paginatorButtons = [];\n  for(const pageIndex of pageIndices) {\n    const buttonClassName = (pageIndex === currentPage) ?\n      'Paginator-list-selected' : 'Askd-form-link';\n    paginatorButtons.push(\n      <li key={pageIndex}>\n        <button className={buttonClassName} onClick={() => callback(pageIndex)}>\n          {pageIndex}\n        </button>\n      </li>\n    );\n  }\n\n  return (\n    <div className=\"Paginator\">\n      <ul className=\"Paginator-list\">\n        { paginatorButtons }\n      </ul>\n    </div>\n  );\n}\n\nexport default Paginator;\n","import React, { Component } from 'react';\nimport UserNoteInfo from './UserNoteInfo';\nimport UserContestInfo from './UserContestInfo';\nimport UserNotesTitleDropdown from './UserNotesTitleDropdown';\nimport VirtualPaginator from '../Paginator/VirtualPaginator';\nimport Paginator from '../Paginator/Paginator';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport Utils from '../Utils';\n\nconst RecursionLevel = Object.freeze({\n  CONTEST: 0,\n  PLATFORM: 1,\n  SOLVED: 2\n});\nconst PAGINATE_SIZE = 15;\n\nfunction compareByRecent(note1, note2) {\n  if(note1.editedTime > note2.editedTime)\n    return -1;\n  return 1;\n}\n\nfunction groupByAttributes(objectList, attributes) {\n  let attributeGroups = {};\n  for(const obj of objectList) {\n    let attributeValues = [];\n    for(const attribute of attributes) {\n      attributeValues.push(obj[attribute]);\n    }\n\n    const key = attributeValues.join('#');\n    if(attributeGroups.hasOwnProperty(key)) {\n      attributeGroups[key].push(obj);\n    }\n    else {\n      attributeGroups[key] = [ obj ];\n    }\n  }\n\n  return attributeGroups;\n}\n\nclass UserNotesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 1,\n      loggedInUsername: null\n    };\n\n    this.sortNoteItems(this.props.notes);\n    this.virtualPaginator = new VirtualPaginator(PAGINATE_SIZE, this.sortedNoteItems);\n\n    this.updatePage = this.updatePage.bind(this);\n  }\n\n  async componentDidMount() {\n    const loggedInUsername = await UserAuthApi.getUsername();\n    await Utils.setStatePromise(this, {\n      loggedInUsername: loggedInUsername\n    });\n  }\n\n  createContestObject(notes) {\n    const firstNote = notes[0];\n    let contestObject = {\n      contestCode: firstNote.contestCode,\n      contestName: firstNote.contestName,\n      platform: firstNote.platform,\n      editedTime: firstNote.editedTime,\n      notes: []\n    };\n\n    if(this.props.organizeBySolved)\n      contestObject.solved = firstNote.solved;\n    if(this.props.organizeByPlatform)\n      contestObject.platform = firstNote.platform;\n\n    for(const note of notes) {\n      contestObject.notes.push(note);\n      if(note.editedTime > contestObject.editedTime) {\n        contestObject.editedTime = note.editedTime;\n      }\n    }\n\n    return contestObject;\n  }\n\n  sortNoteItems(notes, recursionLevel = RecursionLevel.SOLVED, keyString = '') {\n    let paginatorIndices = [];\n    if(recursionLevel === RecursionLevel.CONTEST) {\n      if(this.props.organizeByContest) {\n        const contestGroups = groupByAttributes(notes, ['platform', 'contestCode']);\n        for(const key in contestGroups) {\n          let contestObject = this.createContestObject(contestGroups[key]);\n          paginatorIndices.push(this.sortedNoteItems.length);\n          this.sortedNoteItems.push(contestObject);\n        }\n      }\n      else {\n        for(const note of notes) {\n          paginatorIndices.push(this.sortedNoteItems.length);\n          this.sortedNoteItems.push(note);\n        }\n      }\n    }\n    else {\n      let organize, attributeString;\n      if(recursionLevel === RecursionLevel.SOLVED) {\n        this.sortedNoteItems = [];\n        this.dropdownShowing = {};\n        this.dropdownIndices = {};\n\n        if(this.props.sortByRecent) {\n          notes = [...notes].sort(compareByRecent);\n        }\n\n        organize = this.props.organizeBySolved;\n        attributeString = 'solved';\n      }\n      else {\n        organize = this.props.organizeByPlatform;\n        attributeString = 'platform';\n      }\n\n      if(organize) {\n        const groups = groupByAttributes(notes, [attributeString]);\n        for(const key in groups) {\n          const innerKeyString = `${keyString}#${key}`;\n          const innerIndices =\n            this.sortNoteItems(groups[key], recursionLevel - 1, innerKeyString);\n\n          this.dropdownShowing[innerKeyString] = true;\n          this.dropdownIndices[innerKeyString] = innerIndices;\n\n          for(const index of innerIndices) {\n            paginatorIndices.push(index);\n          }\n        }\n      }\n      else {\n        return this.sortNoteItems(notes, recursionLevel - 1, keyString);\n      }\n    }\n\n    return paginatorIndices;\n  }\n\n  renderNoteItems(notes, recursionLevel = RecursionLevel.SOLVED, keyString = '') {\n    let noteInfoElements = [];\n    if(recursionLevel === RecursionLevel.CONTEST) {\n      let NoteComponent =\n        this.props.organizeByContest ? UserContestInfo : UserNoteInfo;\n\n      for(let i = 0; i < notes.length; i++) {\n        noteInfoElements.push(\n          <NoteComponent key={i} info={notes[i]}\n                         loggedInUsername={this.state.loggedInUsername} />\n        );\n      }\n    }\n    else {\n      let organize, attributeString;\n      if(recursionLevel === RecursionLevel.SOLVED) {\n        organize = this.props.organizeBySolved;\n        attributeString = 'solved';\n      }\n      else {\n        organize = this.props.organizeByPlatform;\n        attributeString = 'platform';\n      }\n\n      if(organize) {\n        const groups = groupByAttributes(notes, [attributeString]);\n        for(const key in groups) {\n          const innerKeyString = `${keyString}#${key}`;\n          const innerContent =\n            this.renderNoteItems(groups[key], recursionLevel - 1, innerKeyString);\n          const title = (recursionLevel === RecursionLevel.SOLVED) ?\n            ProblemsApi.getSolvedStateText(key) : key;\n\n          const showing = this.dropdownShowing[innerKeyString];\n          const innerIndices = this.dropdownIndices[innerKeyString];\n          const toggleCallback = async () => {\n            this.virtualPaginator.toggleActiveItems(innerIndices);\n            this.dropdownShowing[innerKeyString] = !this.dropdownShowing[innerKeyString];\n\n            const totalPages = this.virtualPaginator.getPageCount();\n            if(this.state.page > totalPages) {\n              await this.updatePage(totalPages);\n            }\n\n            this.forceUpdate();\n          };\n\n          noteInfoElements.push(\n            <UserNotesTitleDropdown key={key} title={title}\n                                    innerContent={innerContent} showing={showing}\n                                    toggleCallback={toggleCallback} />\n          );\n        }\n      }\n      else {\n        return this.renderNoteItems(notes, recursionLevel - 1);\n      }\n    }\n\n    return (\n      <ul className=\"User-notes-list\">\n        { noteInfoElements }\n      </ul>\n    );\n  }\n\n  async updatePage(page) {\n    await Utils.setStatePromise(this, {\n      page: page\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Only re-sort note items on an (important) props update\n    const importantProps = [\n      'organizeBySolved',\n      'organizeByPlatform',\n      'organizeByContest',\n      'sortByRecent'\n    ];\n    const currentImportantProps = importantProps.map((x) => this.props[x]);\n    const nextImportantProps = importantProps.map((x) => nextProps[x]);\n\n    if(JSON.stringify(currentImportantProps) !== JSON.stringify(nextImportantProps)) {\n      this.props = nextProps;\n      this.sortNoteItems(this.props.notes);\n      this.virtualPaginator.setContent(this.sortedNoteItems);\n\n      if(this.state.page !== 1) {\n        this.updatePage(1);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  render() {\n    if(this.props.notes.length === 0) {\n      return (\n        <p className=\"User-notes-nothing\">There's nothing to see here yet!</p>\n      );\n    }\n\n    const noteItems = this.virtualPaginator.getContent(this.state.page);\n    const totalPages = this.virtualPaginator.getPageCount();\n    const paginator = (\n      <Paginator currentPage={this.state.page} totalPages={totalPages}\n                 callback={this.updatePage} />\n    );\n\n    return (\n      <>\n        { paginator }\n        { this.renderNoteItems(noteItems) }\n        { paginator }\n      </>\n    );\n  }\n}\n\nexport default UserNotesList;\n","import React, { Component } from 'react';\nimport AddProblemForm from './AddProblemForm';\nimport NotesApi from '../Api/NotesApi';\nimport UserNotesList from './UserNotesList';\nimport Utils from '../Utils';\nimport '../css/UserNotes.css';\n\nclass UserNotes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAddProblemForm: false,\n      organizeBySolved: false,\n      organizeByPlatform: false,\n      organizeByContest: false,\n      sortByRecent: false\n    };\n\n    this.toggleAddProblemForm = this.toggleAddProblemForm.bind(this);\n    this.toggleOrganizeBySolved = this.toggleOrganizeBySolved.bind(this);\n    this.toggleOrganizeByPlatform = this.toggleOrganizeByPlatform.bind(this);\n    this.toggleOrganizeByContest = this.toggleOrganizeByContest.bind(this);\n    this.toggleSortByRecent = this.toggleSortByRecent.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  async toggleAddProblemForm() {\n    await Utils.setStatePromise(this, {\n      showAddProblemForm: !this.state.showAddProblemForm\n    });\n  }\n\n  async toggleOrganizeBySolved() {\n    await Utils.setStatePromise(this, {\n      organizeBySolved: !this.state.organizeBySolved\n    });\n  }\n\n  async toggleOrganizeByPlatform() {\n    await Utils.setStatePromise(this, {\n      organizeByPlatform: !this.state.organizeByPlatform\n    });\n  }\n\n  async toggleOrganizeByContest() {\n    await Utils.setStatePromise(this, {\n      organizeByContest: !this.state.organizeByContest\n    });\n  }\n\n  async toggleSortByRecent() {\n    await Utils.setStatePromise(this, {\n      sortByRecent: !this.state.sortByRecent\n    });\n  }\n\n  async addProblem(problemSortKey, platform, formComponent) {\n    if(!problemSortKey) {\n      await this.toggleAddProblemForm();\n      return;\n    }\n\n    try {\n      const username = this.props.userInfo.username;\n      await NotesApi.addNote(username, platform, problemSortKey);\n\n      const problemUrl = problemSortKey.replace('#', '/');\n      this.props.history.push(`/notes/edit/${platform}/${problemUrl}`);\n    }\n    catch(err) {\n      await Utils.componentSetError(formComponent, err.message);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h2 className=\"Module-heading\">Problems</h2>\n        {\n          this.state.showAddProblemForm &&\n          <AddProblemForm callback={this.addProblem} />\n        }\n        <form>\n          <div className=\"User-notes-organize\">\n            <label>\n              <b>Organize by</b>\n            </label>\n            <input type=\"checkbox\" name=\"solved\" value=\"solved\"\n                   onChange={this.toggleOrganizeBySolved} />\n            <label htmlFor=\"solved\">Solved</label>\n            <input type=\"checkbox\" name=\"platform\" value=\"platform\"\n                   onChange={this.toggleOrganizeByPlatform} />\n            <label htmlFor=\"platform\">Platform</label>\n            <input type=\"checkbox\" name=\"contest\" value=\"contest\"\n                   onChange={this.toggleOrganizeByContest} />\n            <label htmlFor=\"contest\">Contest</label>\n          </div>\n          <div className=\"User-notes-organize\">\n            <label htmlFor=\"sort\">\n              <b>Sort by</b>\n            </label>\n            <select defaultValue=\"default\" name=\"sort\"\n                    onChange={this.toggleSortByRecent}>\n              <option value=\"default\">Default</option>\n              <option value=\"recent\">Recent</option>\n            </select>\n          </div>\n        </form>\n        <div className=\"User-notes Module-space\">\n          <UserNotesList organizeBySolved={this.state.organizeBySolved}\n                         organizeByPlatform={this.state.organizeByPlatform}\n                         organizeByContest={this.state.organizeByContest}\n                         sortByRecent={this.state.sortByRecent}\n                         notes={this.props.notes} />\n          {\n            this.props.userInfo.email &&\n            <button onClick={this.toggleAddProblemForm}\n                    className=\"User-notes-add Askd-button Askd-button-circular\">\n              +\n            </button>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserNotes;\n","import Api from './Api';\n\nclass UserApi {\n  static async getUserInfo(username) {\n    const options = {\n      username: username\n    };\n\n    return await Api.getJson('profile', options);\n  }\n}\n\nexport default UserApi;\n","const LoadState = Object.freeze({\n  LOADING: 0,\n  DONE: 1,\n  NOT_FOUND: 2\n});\n\nexport default LoadState;\n","import React, { Component } from 'react';\nimport UserInfo from './UserInfo';\nimport UserNotes from './UserNotes';\nimport UserApi from '../Api/UserApi';\nimport NotesApi from '../Api/NotesApi';\nimport LoadState from '../Enum/LoadState';\nimport Utils from '../Utils';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: LoadState.LOADING,\n      userInfo: null,\n      notes: null\n    };\n  }\n\n  async getUserInfo() {\n    const username = this.props.match.params.username;\n    return await UserApi.getUserInfo(username);\n  }\n\n  async getNotes() {\n    const username = this.props.match.params.username;\n    return await NotesApi.getNotes(username);\n  }\n\n  async loadInfo() {\n    try {\n      const userInfo = await this.getUserInfo();\n      const notes = await this.getNotes();\n      await Utils.setStatePromise(this, {\n        screen: LoadState.DONE,\n        userInfo: userInfo,\n        notes: notes\n      });\n    }\n    catch(err) {\n      if(err.name === 'UserNotFound') {\n        await Utils.setStatePromise(this, {\n          screen: LoadState.NOT_FOUND\n        });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadInfo();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.match.params.username !== this.props.match.params.username) {\n      await Utils.setStatePromise(this, {\n        screen: LoadState.LOADING,\n        info: null\n      });\n      await this.loadInfo();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loadingContent = null;\n    const loadedContent = (\n      <>\n        <div className=\"Module-description\">\n          <UserInfo info={this.state.userInfo} />\n        </div>\n        <UserNotes userInfo={this.state.userInfo} notes={this.state.notes}\n                   history={this.props.history} />\n      </>\n    );\n    const userNotFoundContent = (\n      <div className=\"Module-description\">\n        <h2>User not found!</h2>\n      </div>\n    );\n\n    var content;\n    switch(this.state.screen) {\n      case LoadState.LOADING:\n        content = loadingContent;\n        break;\n      case LoadState.DONE:\n        content = loadedContent;\n        break;\n      case LoadState.NOT_FOUND:\n        content = userNotFoundContent;\n        break;\n      default:\n    }\n\n    return (\n      <>\n        <div className=\"Module-wrapper\">\n          { content }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React, { Component } from 'react';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass DeleteMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: ''\n    };\n    this.randomCode = uuidv4();\n\n    this.close = this.close.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async deleteNote(event) {\n    event.preventDefault();\n\n    const confirmCode = event.target.confirmCode.value;\n    if(confirmCode !== this.randomCode) {\n      await Utils.componentSetError(this, \"Your confirmation code doesn't match!\");\n      return;\n    }\n\n    try {\n      const username = await UserAuthApi.getUsername();\n      const platform = this.props.platform;\n      const problemId = this.props.problemInfo.problemId;\n\n      await NotesApi.deleteNote(username, platform, problemId);\n      this.props.history.push(`/users/${username}`);\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">\n          X\n        </button>\n        <div className=\"Edit-note-delete-menu Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Are you sure you want to permanently delete this note?</h2>\n          <p>\n            This action cannot be undone! Please enter the following\n            code as confirmation.\n          </p>\n          <form className=\"Askd-form\" onSubmit={this.deleteNote}>\n            <label htmlFor=\"confirmCode\">{this.randomCode}</label>\n            <input autoComplete=\"off\" type=\"text\" name=\"confirmCode\"\n                   key=\"confirmCode\" id=\"confirmCode\" />\n\n            <input className=\"Askd-button\" type=\"submit\" value=\"Delete\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DeleteMenu;\n","import React, { Component } from 'react';\nimport { Prompt } from 'react-router';\nimport TextEditor from '../TextEditor/TextEditor';\nimport DeleteMenu from './DeleteMenu';\nimport SolvedState from '../Enum/SolvedState';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\n\nfunction remindUserToSave(event) {\n  event.preventDefault();\n  event.returnValue = '';\n}\n\nclass EditNoteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const noteInfo = this.props.noteInfo;\n    this.title = noteInfo.title;\n    this.solved = noteInfo.solved;\n    this.content = JSON.parse(noteInfo.content);\n    this.lastSaved = new Date(noteInfo.editedTime);\n\n    this.state = {\n      published: noteInfo.published,\n      disableEditButtons: false,\n      saved: true,\n      loadingSave: false,\n      loadingPublish: false,\n      showDeleteMenu: false\n    };\n\n    this.saveNote = this.saveNote.bind(this);\n    this.togglePublishNote = this.togglePublishNote.bind(this);\n    this.toggleDeleteMenu = this.toggleDeleteMenu.bind(this);\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleSolvedChange = this.handleSolvedChange.bind(this);\n    this.handleContentChange = this.handleContentChange.bind(this);\n  }\n\n  async saveOrPublishNote(published) {\n    const username = await UserAuthApi.getUsername();\n    const platform = this.props.platform;\n    const problemId = this.props.problemInfo.problemId;\n    const title = this.title;\n    const solved = this.solved;\n    const content = JSON.stringify(this.content);\n\n    await NotesApi.editNote(username, platform, problemId, title, solved,\n                            content, published);\n\n    this.lastSaved = new Date();\n    window.onbeforeunload = null;\n\n    await Utils.setStatePromise(this, {\n      published: published,\n      disableEditButtons: false,\n      saved: true,\n      loadingSave: false,\n      loadingPublish: false\n    });\n  }\n\n  async saveNote(event) {\n    await Utils.setStatePromise(this, {\n      disableEditButtons: true,\n      loadingSave: true\n    });\n\n    await this.saveOrPublishNote(this.state.published);\n  }\n\n  async togglePublishNote(event) {\n    await Utils.setStatePromise(this, {\n      disableEditButtons: true,\n      loadingPublish: true\n    });\n\n    await this.saveOrPublishNote(!this.state.published);\n  }\n\n  async toggleDeleteMenu(event) {\n    await Utils.setStatePromise(this, {\n      showDeleteMenu: !this.state.showDeleteMenu\n    });\n  }\n\n  handleTitleChange(event) {\n    this.title = event.target.value;\n  }\n\n  handleSolvedChange(event) {\n    this.solved = event.target.value;\n  }\n\n  async handleContentChange(newContent) {\n    this.content = newContent;\n\n    if(this.state.saved) {\n      await Utils.setStatePromise(this, {\n        saved: false\n      });\n\n      window.onbeforeunload = remindUserToSave;\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let savedText = this.state.saved ? 'All changes saved! - ' : 'Last saved on ';\n    savedText += this.lastSaved.toLocaleString();\n\n    const togglePublishText = this.state.published ? 'Unpublish' : 'Publish!';\n    let saveButtonClass = 'Askd-button Askd-not-fullwidth';\n    let publishButtonClass = 'Askd-button Askd-not-fullwidth';\n\n    if(this.state.loadingSave) saveButtonClass += ' Askd-form-loading';\n    if(this.state.loadingPublish) publishButtonClass += ' Askd-form-loading';\n\n    return (\n      <>\n        <Prompt when={!this.state.saved}\n                message='Are you sure you want to leave? You have unsaved changes.' />\n        {\n          this.state.showDeleteMenu &&\n          <DeleteMenu exitCallback={this.toggleDeleteMenu}\n                      platform={this.props.platform} history={this.props.history}\n                      problemInfo={this.props.problemInfo} />\n        }\n        <form className=\"Edit-note-form Askd-form\">\n          <input className=\"Edit-note-title\" name=\"title\" type=\"text\"\n                 defaultValue={this.title} placeholder=\"Title\"\n                 onChange={this.handleTitleChange} />\n\n          <select name=\"solved\" id=\"note-solved\" onChange={this.handleSolvedChange}\n                  defaultValue={this.solved}>\n            <option value={SolvedState.SOLVED.value}>Solved</option>\n            <option value={SolvedState.UPSOLVED.value}>Upsolved</option>\n            <option value={SolvedState.UPSOLVED_HELP.value}>Upsolved with help</option>\n            <option value={SolvedState.UNSOLVED.value}>Unsolved</option>\n          </select>\n\n          <TextEditor initialContent={this.content}\n                      onChange={this.handleContentChange} />\n          <p className=\"Edit-note-saved-text\">{savedText}</p>\n          <div className=\"Edit-note-bottom-buttons\">\n            <input className={saveButtonClass} type=\"button\" value=\"Save\"\n                   onClick={this.saveNote}\n                   disabled={this.state.disableEditButtons} />\n\n            <input className={publishButtonClass} type=\"button\"\n                   value={togglePublishText} onClick={this.togglePublishNote}\n                   disabled={this.state.disableEditButtons} />\n          </div>\n          <div className=\"Edit-note-delete\">\n            <button type=\"button\" className=\"Askd-form-link Askd-form-link-bottom\"\n                    onClick={this.toggleDeleteMenu}>\n              Permanently delete this note?\n            </button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default EditNoteForm;\n","import React, { Component } from 'react';\n\nclass ProblemInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    return (\n      <div className=\"Edit-note-problem-info\">\n        <div className=\"Module-info-box\">\n          <h4>\n            {this.props.platform} {info.problemCode} - {info.problemName}\n          </h4>\n          <p className=\"Edit-note-contest\">{info.contestName}</p>\n          <a className=\"Askd-form-link\" href={info.link}>Problem link</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProblemInfo;\n","import React, { Component } from 'react';\nimport LoadState from '../Enum/LoadState';\nimport EditNoteForm from './EditNoteForm';\nimport ProblemInfo from './ProblemInfo';\nimport ProblemsApi from '../Api/ProblemsApi'\nimport NotesApi from '../Api/NotesApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport Utils from '../Utils';\nimport '../css/EditNote.css';\n\nclass EditNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: LoadState.LOADING,\n      problemInfo: null,\n      noteInfo: null\n    };\n  }\n\n  async loadProblemInfo() {\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    let problemInfo = await ProblemsApi.getProblemInfo(platform, problemId);\n    problemInfo.problemId = problemId;\n\n    return problemInfo;\n  }\n\n  async loadNoteInfo() {\n    const username = await UserAuthApi.getUsername();\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    const noteInfo = await NotesApi.getNoteInfo(username, platform, problemId);\n\n    return noteInfo;\n  }\n\n  async loadInfo() {\n    const problemInfo = await this.loadProblemInfo();\n    const noteInfo = await this.loadNoteInfo();\n    \n    await Utils.setStatePromise(this, {\n      problemInfo: problemInfo,\n      noteInfo: noteInfo,\n      screen: LoadState.DONE\n    });\n  }\n\n  async componentDidMount() {\n    await this.loadInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const platform = this.props.match.params.platform;\n\n    const loadingContent = null;\n    const loadedContent = (\n      <>\n        <ProblemInfo info={this.state.problemInfo} platform={platform} />\n        <EditNoteForm problemInfo={this.state.problemInfo}\n                      noteInfo={this.state.noteInfo} platform={platform}\n                      history={this.props.history} />\n      </>\n    );\n    const noteNotFoundContent = (\n      <div className=\"Module-description\">\n        <h2>Note does not exist!</h2>\n      </div>\n    );\n\n    let content;\n    switch(this.state.screen) {\n      case LoadState.LOADING:\n        content = loadingContent;\n        break;\n      case LoadState.DONE:\n        content = loadedContent;\n        break;\n      case LoadState.NOT_FOUND:\n        content = noteNotFoundContent;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-wrapper\">\n        { content }\n      </div>\n    );\n  }\n}\n\nexport default EditNote;\n","import Api from './Api';\n\nclass LikesApi {\n  static async sendLike(username, noteAuthor, platform, problemId, likedStatus) {\n    const options = {\n      username: username,\n      noteAuthor: noteAuthor,\n      platform: platform,\n      problemId: problemId,\n      likedStatus: likedStatus\n    };\n\n    return await Api.putJson('likes/notes', options);\n  }\n}\n\nexport default LikesApi;\n","import React, { useState } from 'react';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/LikeDislike.css';\n\nfunction LikeDislike({ initialScore, initialStatus, likeCallback }) {\n  let [ score, setScore ] = useState(initialScore);\n  let [ status, setStatus ] = useState(initialStatus);\n\n  let likeButtonClass = 'Like-button';\n  if(status > 0) {\n    likeButtonClass += ' Like-button-liked';\n  }\n\n  let toggleStatus = async () => {\n    const username = await UserAuthApi.getUsername();\n    if(!username) {\n      window.suggestUserRegister();\n      return;\n    }\n\n    if(status > 0) {\n      setStatus(0);\n      setScore(score - 1);\n      likeCallback(0);\n    }\n    else {\n      setStatus(1);\n      setScore(score + 1);\n      likeCallback(1);\n    }\n  };\n\n  return (\n    <div className=\"Like-dislike\">\n      <button className={likeButtonClass} onClick={toggleStatus}>\n        <span className=\"Like-dislike-score\">+{score}</span> I like this!\n      </button>\n    </div>\n  );\n}\n\nexport default LikeDislike;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport LikesApi from '../Api/LikesApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport TextEditorContent from '../TextEditor/TextEditorContent';\nimport LikeDislike from '../Misc/LikeDislike';\nimport '../css/PublicNoteInfo.css';\n\nfunction PublicNoteInfo({ info }) {\n  const content = JSON.parse(info.content);\n  const editedTimestamp = (new Date(info.editedTime)).toLocaleString();\n  const solvedClass = ProblemsApi.getSolvedStateCssClass(info.solved);\n\n  let likeCallback = async (likedStatus) => {\n    const username = await UserAuthApi.getUsername();\n    const noteAuthor = info.username;\n    const platform = info.platform;\n    const problemId = info.problemSk;\n\n    await LikesApi.sendLike(username, noteAuthor, platform, problemId, likedStatus);\n  };\n\n  return (\n    <div className=\"Public-note-info Module-space Module-padding-box\">\n      <h3 className=\"Module-space-heading\">\n        <span className={`Public-note-solved-tag User-note-info-${solvedClass}`}>\n          <span className=\"User-note-info-tag User-note-solved-indicator\" />\n        </span>\n        {info.title}\n      </h3>\n      <p className=\"Module-space-text\">\n        Written by <Link className=\"Askd-form-link\" to={`/users/${info.username}`}>\n          {info.username}\n        </Link>\n      </p>\n      <div className=\"Askd-text-editor\">\n        <TextEditorContent content={content} id={null} editable={false} />\n      </div>\n      <p className=\"Module-space-text\">\n        Last edited on {editedTimestamp}\n      </p>\n      <LikeDislike initialScore={info.likeCount} initialStatus={info.likedStatus}\n                   likeCallback={likeCallback} />\n    </div>\n  );\n}\n\nexport default PublicNoteInfo;\n","import React, { Component } from 'react';\nimport LoadState from '../Enum/LoadState';\nimport ProblemInfo from '../EditNote/ProblemInfo';\nimport PublicNoteInfo from './PublicNoteInfo';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\n\nclass PublicNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: LoadState.LOADING,\n      problemInfo: null,\n      noteInfo: null\n    };\n  }\n\n  async loadProblemInfo() {\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    let problemInfo = await ProblemsApi.getProblemInfo(platform, problemId);\n    problemInfo.problemId = problemId;\n\n    return problemInfo;\n  }\n\n  async loadNoteInfo() {\n    const ownerUsername = this.props.match.params.ownerUsername;\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    const noteInfo = await NotesApi.getNoteInfo(ownerUsername, platform, problemId, true);\n    return noteInfo;\n  }\n\n  async loadInfo() {\n    const problemInfo = await this.loadProblemInfo();\n    const noteInfo = await this.loadNoteInfo();\n\n    await Utils.setStatePromise(this, {\n      problemInfo: problemInfo,\n      noteInfo: noteInfo,\n      screen: LoadState.DONE\n    });\n  }\n\n  async componentDidMount() {\n    await this.loadInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const platform = this.props.match.params.platform;\n\n    const loadingContent = null;\n    const loadedContent = (\n      <>\n        <ProblemInfo info={this.state.problemInfo} platform={platform} />\n        <PublicNoteInfo info={this.state.noteInfo} />\n      </>\n    );\n    const noteNotFoundContent = (\n      <div className=\"Module-description\">\n        <h2>Note is either unpublished or does not exist!</h2>\n      </div>\n    );\n\n    let content;\n    switch(this.state.screen) {\n      case LoadState.LOADING:\n        content = loadingContent;\n        break;\n      case LoadState.DONE:\n        content = loadedContent;\n        break;\n      case LoadState.NOT_FOUND:\n        content = noteNotFoundContent;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-wrapper\">\n        { content }\n      </div>\n    );\n  }\n}\n\nexport default PublicNote;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './Header/Header';\nimport Home from './Home/Home';\nimport UserProfile from './UserProfile/UserProfile';\nimport EditNote from './EditNote/EditNote';\nimport PublicNote from './PublicNote/PublicNote';\n\nimport './css/App.css';\nimport './css/Module.css';\nimport './css/Form.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/users/:username\" component={UserProfile} />\n          <Route exact path=\"/notes/edit/:platform/:contestId/:problemCode\"\n                 component={EditNote} />\n          <Route exact path=\"/notes/:ownerUsername/:platform/:contestId/:problemCode\"\n                 component={PublicNote} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Amplify from 'aws-amplify';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport amplify_config from './amplify_config';\n\nAmplify.configure(amplify_config);\n\ndocument.body.addEventListener('mousedown', (event) => {\n  document.body.classList.add('Global-mouse-click');\n});\n\ndocument.body.addEventListener('keydown', (event) => {\n  if(event.keyCode === 9) {\n    document.body.classList.remove('Global-mouse-click');\n  }\n});\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}