{"version":3,"sources":["Utils.js","Header/HeaderUtils.js","Api/UserAuthApi.js","Header/HeaderState.js","Header/RegisterForm.js","Header/LoginForm.js","Header/UserMenu.js","Header/HeaderAuth.js","Header/Header.js","Home/CpNotes.js","Home/Home.js","Enum/LoadState.js","HOC/CreateLoadingComponent.js","Misc/LoadingSpinner.js","Api/ApiConstants.js","Api/Api.js","Api/UsersApi.js","UserProfile/UserInfo.js","Enum/SolvedState.js","Api/ProblemsApi.js","SearchSelect/SearchSelect.js","SearchSelect/SearchProblemSelect.js","UserProfile/AddProblemForm.js","Api/NotesApi.js","UserProfile/UserNoteInfo.js","UserProfile/UserContestInfo.js","UserProfile/UserNotesTitleDropdown.js","Paginator/VirtualPaginator.js","Paginator/Paginator.js","UserProfile/UserNotesList.js","UserProfile/UserNotes.js","UserProfile/UserProfile.js","TextEditor/ContentType.js","TextEditor/MaskManager.js","TextEditor/Caret.js","TextEditor/Toolbar.js","TextEditor/VirtualTextEditor.js","TextEditor/Block/MathBlock.js","TextEditor/Block/Block.js","TextEditor/TextEditorContent.js","TextEditor/registerEventHandlers.js","TextEditor/TextEditor.js","EditNote/DeleteMenu.js","EditNote/EditNoteForm.js","EditNote/ProblemInfo.js","EditNote/EditNote.js","Api/LikesApi.js","Misc/LikeDislike.js","PublicNote/PublicNoteInfo.js","Api/CommentsApi.js","CommentForm/Comment.js","CommentForm/CommentForm.js","CommentForm/RootComment.js","CommentForm/AddCommentForm.js","PublicNote/PublicNoteComments.js","HOC/CreateCommentComponent.js","PublicNote/PublicNote.js","SearchSelect/SearchUserSelect.js","UsersList/UsersTable.js","UsersList/UsersList.js","NotesSearch/NotesList.js","NotesSearch/NotesSearch.js","Misc/RecentNotesList.js","App.js","serviceWorker.js","index.js"],"names":["TimeAgo","addDefaultLocale","en","timeAgo","Utils","component","stateObject","Promise","resolve","reject","mounted","setState","object","property","hasOwnProperty","message","setError","setStatePromise","error","setSuccess","success","file","reader","FileReader","readAsDataURL","onload","result","onerror","err","inputString","zeroCount","i","length","substring","timestamp","timeDate","Date","format","selectors","window","MathJax","typeset","HeaderUtils","password","confirmPassword","componentSetError","UserAuthApi","Auth","currentAuthenticatedUser","username","email","signUp","attributes","info","codeDeliveryDetails","Destination","code","confirmSignUp","resendSignUp","CodeDeliveryDetails","forgotPassword","forgotPasswordSubmit","signIn","signOut","getProfile","profile","currentSession","getSignInUserSession","accessToken","getAccessToken","getJwtToken","HeaderState","Object","freeze","LOGIN","RECOVERY_USERNAME","RECOVERY_PASSWORD","RECOVERY_SUCCESS","REGISTER","REGISTER_VERIFY","REGISTER_SUCCESS","ERROR_TRIGGER_PREFIX","RegisterForm","props","screen","unverifiedAccountUsername","state","destination","unverifiedAccountDestination","loading","close","bind","register","verifyEmail","resendVerificationEmail","setLoading","this","exitCallback","startsWith","event","preventDefault","form","target","value","checkPasswords","componentSetSuccess","isLoading","submitButtonClassName","currentForm","createAccountForm","className","onSubmit","htmlFor","autoComplete","type","name","id","disabled","verifyEmailForm","key","onClick","emailVerifiedBox","Component","LoginForm","login","enablePasswordRecovery","resetPassword","emailVerificationCallback","componentsSetError","loginForm","recoveryUsernameForm","recoveryPasswordForm","recoveryPasswordSuccess","UserMenu","logout","logoutCallback","closeCallback","to","HeaderAuth","showRegisterForm","showLoginForm","showUserMenu","refreshUsername","toggleRegisterForm","toggleLoginForm","toggleUserMenu","hideUserMenu","afterLogin","unverifiedAccount","suggestUserRegister","getUsername","focusedElement","relatedTarget","classList","contains","loggedIn","loginButtons","loggedInButton","tabIndex","onBlur","topRightButtons","Header","path","useLocation","pathname","big","outerClassName","CpNotes","renderMathJax","Home","history","location","href","includes","correctPath","split","replaceAll","replace","LoadState","LOADING","DONE","NOT_FOUND","CreateLoadingComponent","getData","defaultParams","notFoundErrorName","WrappedComponent","useRef","useState","currentParams","changeCurrentParams","changeInfo","componentScreen","changeScreen","loadInfo","params","a","data","current","useEffect","staticKey","otherProps","LoadingSpinner","ApiConstants","API_ENDPOINT","Api","Error","response","status","json","responseJson","createApiError","resource","options","method","fetch","body","JSON","stringify","headers","Authorization","manageResponseError","queryString","sendRequestBody","UsersApi","basicInfoOnly","getJson","page","searchTerm","avatarData","putJson","UserInfo","imageLoading","setImageLoading","imageSource","setImageSource","handleUpload","files","convertFileToBase64","updateUserInfo","contributionClassName","contribution","imageContent","src","alt","accept","onChange","avatarContent","totalNotes","SolvedState","SOLVED","text","css","UPSOLVED","UPSOLVED_HELP","UNSOLVED","ProblemsApi","platform","contestCode","problemCode","problemName","divisionLevel","Math","ceil","level","problemLevel","divisionString","afterText","getProblemDisplayNameWithoutPlatform","lowerCaseContestName","contestName","toLowerCase","lowerCasePlatform","inflatedProblemLetter","problemSk","removePrefixZeroes","contestId","problemId","problemInfo","solvedStateValue","parseInt","SearchSelect","previousValidSearchTerm","showOptions","lastChangedTime","lastLoadTime","filteredOptions","handleChange","handleBlur","handleFocus","handleOptionSelectWithKeys","option","optionStringArray","keys","push","join","getOptionString","currentTime","now","currentSearchTerm","search","network","initialSearchSortKey","filterOptions","componentDidUpdate","initialSearchTerm","networkLoadOptions","prevProps","setTimeout","sortKey","optionString","callback","optionElements","displayString","displayKey","optionCallback","inputDisabled","onFocus","placeholder","SearchProblemSelect","initialPlatform","initialContestId","initialProblemId","initialSkipContestSearch","changeCallback","setPlatform","contestSk","setContestSk","skipContestSearch","setSkipContestSearch","searchContestFunction","searchContestStaticKey","getContests","searchProblemFunction","searchProblemStaticKey","getProblems","searchContestKeys","searchProblemKeys","selectPlatformValue","skipButtonText","newContestSk","newProblemSk","AddProblemForm","problemChangeCallback","addProblem","NotesApi","note","problemUrl","contestDisplayName","getContestDisplayName","problemDisplayName","getNotes","notes","sort","note1","note2","likeCount","publishedNotes","published","totalPages","max","visibleNotes","startIndex","endIndex","min","recent","forcePublished","postJson","title","solved","content","deleteJson","UserNoteInfo","solvedClass","getSolvedStateCssClass","noteEditLink","getNoteEditLink","notePublishedLink","getNotePublishedLink","publishedClass","getProblemDisplayName","editedTime","toLocaleDateString","authorUsername","profileLink","noteTitle","mostLikedMode","loggedInUsername","UserContestInfo","noteElements","problemLetter","getProblemLetter","codeClassName","UserNotesTitleDropdown","innerContent","showing","colorClass","toggleCallback","showText","headingClassName","VirtualPaginator","pageSize","setContent","activeItems","item","paginatorActive","indices","index","active","pageIndex","currentIndex","activeBufferSize","itemBuffer","pageCount","bufferSize","Paginator","currentPage","bottom","pageIndices","after","increment","before","b","paginatorButtons","buttonClassName","buttonOnClick","RecursionLevel","CONTEST","PLATFORM","compareByRecent","groupByAttributes","objectList","attributeGroups","obj","attributeValues","attribute","UserNotesList","sortNoteItems","virtualPaginator","sortedNoteItems","updatePage","firstNote","contestObject","organizeBySolved","organizeByPlatform","recursionLevel","keyString","paginatorIndices","organizeByContest","contestGroups","createContestObject","organize","attributeString","dropdownShowing","dropdownIndices","sortByRecent","groups","innerKeyString","innerIndices","noteInfoElements","NoteComponent","renderNoteItems","getSolvedStateText","toggleActiveItems","getPageCount","forceUpdate","solvedStateCssClass","nextProps","nextState","importantProps","currentImportantProps","map","x","nextImportantProps","noteItems","getContent","paginator","UserNotes","showAddProblemForm","toggleAddProblemForm","toggleOrganizeBySolved","toggleOrganizeByPlatform","toggleOrganizeByContest","toggleSortByRecent","problemSortKey","formComponent","userInfo","addNote","defaultValue","match","getUserInfo","ContentType","MATH","BOLD","ITALIC","UNDERLINE","MaskManager","bit","on","originalMask","mask","style","Caret","selection","getSelection","anchorElement","anchorNode","parentElement","focusElement","focusNode","originalAnchorElement","originalFocusElement","anchorMathBlock","getContainingMathBlock","focusMathBlock","c","d","anchorIndex","getAttribute","focusIndex","anchorOffset","focusOffset","insideCaretBlock","rangeSelect","position","editorSelected","Number","leftIndex","leftPosition","rightIndex","rightPosition","newCaretInfo","editorMask","removeCaretBlock","setRangePosition","addCaretBlock","setPosition","blockElement","textNode","document","getElementById","childNodes","createTextNode","appendChild","range","createRange","setStart","collapse","removeAllRanges","addRange","leftBlockElement","rightBlockElement","leftTextNode","rightTextNode","setEnd","caretBlock","createElement","setAttribute","getClassName","innerHTML","String","fromCharCode","nextBlock","insertBefore","existingCaretBlock","removeChild","element","Toolbar","boldSelected","italicSelected","underlineSelected","mathSelected","selectHandler","onPointerDown","countCharacters","str","counter","character","VirtualTextEditor","initialContent","characters","caretBlockIndex","caretBlockPosition","block","m","char","splice","updateBlocks","globalIndex","charactersScanned","blocks","blockLength","blockEndIndex","j","blockStarts","characterCounter","rangeEnd","getGlobalIndex","firstBlockEnd","getIndexAndPosition","nextBlockGlobalIndex","insertedString","rightBuffer","globalCaretPosition","globalLeftIndex","deleteLength","globalRightIndex","editorMergeBit","newLeftIndex","newLeftPosition","caretInfo","leftGlobalIndex","rightGlobalIndex","getCorrectedIndexAndPosition","isEmpty","currentMask","characterBuffer","blockPosition","forEach","caretBlockIncoming","MathBlock","rendered","textContent","changeKey","useMemo","Block","editorId","selected","TextEditorContent","editable","contentElements","contentEditable","suppressContentEditableWarning","spellCheck","registerEventHandlers","that","textEditor","addEventListener","composing","delete","insert","isComposing","inputType","dataTransfer","pasteText","clipboardData","compositionIndex","compositionPosition","compositionInsert","handleSelectionChange","selectionChanged","caret","getInfo","TextEditor","uuidv4","virtualTextEditor","contentChanged","toolbarUpdate","insertionUpdate","newString","updateCaretInfo","rangeMaskUpdate","updateContent","setInfo","newMask","newToolbarMask","toolbarMergeBit","leftCharacterMask","getCharacterMask","previouslyInsideCaretBlock","atBlockNewlineEnd","updateMask","updateCaret","leftElement","rightElement","leftElementLength","atLeftElementEnd","atRightElementBegin","outerTextEditor","focusOnMount","focus","junkNodes","node","nodeType","Node","TEXT_NODE","nodeName","childElement","children","nodeValue","removeEventListener","isIcon","contained","DeleteMenu","randomCode","deleteNote","confirmCode","remindUserToSave","returnValue","EditNoteForm","noteInfo","parse","lastSaved","disableEditButtons","saved","loadingSave","loadingPublish","showDeleteMenu","saveNote","togglePublishNote","toggleDeleteMenu","handleTitleChange","handleSolvedChange","handleContentChange","editNote","onbeforeunload","saveOrPublishNote","newContent","savedText","toLocaleString","togglePublishText","saveButtonClass","publishButtonClass","when","ProblemInfo","link","rel","getProblemInfo","getNoteInfo","LikesApi","noteAuthor","likedStatus","LikeDislike","initialScore","initialStatus","likeCallback","score","setScore","setStatus","likeButtonClass","toggleStatus","PublicNoteInfo","editedTimestamp","sendLike","CommentsApi","rootReplyId","replyId","Comment","replyUsername","subscribeToAvatar","replyCallback","setAvatarData","commentId","timeAgoString","getTimeAgoString","creationTime","CommentForm","cancelCallback","addCallback","updateCallback","commentContent","setCommentContent","addCommentLoading","setAddCommentLoading","handleAddComment","textEmpty","RootComment","addAvatarSubscriptions","editorActive","setEditorActive","editorReplyInfo","editorAddCallback","createReplyHandler","replyListItems","replyIdToUsername","replies","reply","replyCommentForm","rootCommentReplyCallback","rootCommentSubscribeToAvatar","AddCommentForm","editorContent","inputRef","React","createRef","handleInactiveFocus","blur","ref","getParamsFromProps","ownerUsername","getNoteComments","comments","newCommentContent","addNoteComment","newCommentId","CreateCommentComponent","getComments","addComment","urlParams","linkedComment","commentElement","scrollIntoView","doNotShow","commentsContent","userAvatars","userAvatarSubscriptions","getUserAvatarData","initializeAvatarSystem","comment","commentListItems","doNotShowComments","commentsComponent","PublicNoteComments","SearchUserSelect","initialUsername","attachLabel","placeholderString","getSearchUsers","UsersTable","lastUpdated","users","updatedTime","userRows","user","getUsers","usersInfo","loadUserProfile","getMostRecentNotes","getMostLikedNotes","pageChangeCallback","NotesSearch","changeSearchAttributes","changes","newQueryString","showFilterForm","setShowFilterForm","headingText","toggleFilterFormText","newSort","newUsername","newPage","noteListItems","noteLink","displayName","getNoteDisplayName","App","exact","UsersList","UserProfile","EditNote","PublicNote","Boolean","hostname","Amplify","configure","amplify_config","add","keyCode","remove","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"02BAGAA,IAAQC,iBAAiBC,GACzB,IAAMC,EAAU,IAAIH,IAAQ,SA+EbI,E,sJA5EgBC,EAAWC,G,0FAC/B,IAAIC,SAAQ,SAACC,EAASC,IACF,IAAtBJ,EAAUK,SACXL,EAAUM,SAASL,GAAa,WAC9BE,OAGJA,Q,kIAIWI,GACb,IAAI,IAAMC,KAAYD,EACpB,GAAGA,EAAOE,eAAeD,GACvB,OAAO,EAEX,OAAO,I,iFAGsBR,EAAWU,G,qEACrCV,EAAUW,S,gCACLX,EAAUW,SAASD,G,6CAGnBX,EAAMa,gBAAgBZ,EAAW,CACrCa,MAAM,UAAD,OAAYH,K,uLAKUV,EAAWU,G,qEACvCV,EAAUc,W,gCACLd,EAAUc,WAAWJ,G,6CAGrBX,EAAMa,gBAAgBZ,EAAW,CACrCa,MAAO,GACPE,QAASL,I,8IAKYM,GACzB,OAAO,IAAId,SAAQ,SAACC,EAASC,GAC3B,IAAMa,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,OAAS,WACdjB,EAAQc,EAAOI,SAEjBJ,EAAOK,QAAU,SAACC,GAAD,OAASnB,EAAOmB,S,yCAKXC,GAExB,IADA,IAAIC,EAAY,EACRC,EAAI,EAAGA,EAAIF,EAAYG,QACP,MAAnBH,EAAYE,GADsBA,IAErCD,IAGF,OAAOD,EAAYI,UAAUH,EAAWD,EAAYG,U,uCAG9BE,GACtB,IAAMC,EAAW,IAAIC,KAAKF,GAC1B,OAAO/B,EAAQkC,OAAOF,K,oCAGHG,GAChBC,OAAOC,SACRD,OAAOC,QAAQC,QAAQH,O,KC1DdI,E,qJAferC,EAAWsC,EAAUC,G,oEAC5CD,IAAaC,E,gCACRxC,EAAMyC,kBAAkBxC,EAAW,+B,iCAClC,G,YAGNsC,EAASX,OATY,G,gCAUhB5B,EAAMyC,kBAAkBxC,EAAW,+B,iCAClC,G,iCAGF,G,sHCuDIyC,E,6OAlEIC,IAAKC,2B,iGAIX,M,sLAIWC,EAAUC,EAAOP,G,uFAClBI,IAAKI,OAAO,CAC7BF,WACAN,WACAS,WAAY,CACVF,MAAOA,K,cAJLG,E,yBASCA,EAAKC,oBAAoBC,a,iLAGTN,EAAUO,G,iFAC3BT,IAAKU,cAAcR,EAAUO,G,2LAGAP,G,uFAChBF,IAAKW,aAAaT,G,cAA/BI,E,yBACCA,EAAKM,oBAAoBJ,a,gLAGNN,G,uFACPF,IAAKa,eAAeX,G,cAAjCI,E,yBACCA,EAAKM,oBAAoBJ,a,+KAGPN,EAAUO,EAAMb,G,iFACnCI,IAAKc,qBAAqBZ,EAAUO,EAAMb,G,2KAG/BM,EAAUN,G,iFACrBI,IAAKe,OAAOb,EAAUN,G,6PAItBI,IAAKgB,U,qQAIWjB,EAAYkB,a,UAA5BC,E,gDAEG,M,gCAEFA,EAAQhB,U,4QAIOH,EAAYkB,a,UAA5BC,E,gDAEG,M,cAEHC,EAAiBD,EAAQE,uBACzBC,EAAcF,EAAeG,iB,kBAC5BD,EAAYE,e,wGCzDRC,EAVKC,OAAOC,OAAO,CAChCC,MAAO,EACPC,kBAAmB,EACnBC,kBAAmB,EACnBC,iBAAkB,EAClBC,SAAU,EACVC,gBAAiB,EACjBC,iBAAkB,ICEdC,G,OAAuB,+BAuNdC,E,kDApNb,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GAEN,IAAMC,EAASD,EAAME,0BACNd,EAAYQ,gBAAkBR,EAAYO,SAJxC,OAKjB,EAAKQ,MAAQ,CACXpE,MAAO,GACPE,QAAS,GACT6B,SAAUkC,EAAME,0BAChBE,YAAaJ,EAAMK,6BACnBJ,OAAQA,EACRK,SAAS,GAGX,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBACnB,EAAKG,wBAA0B,EAAKA,wBAAwBH,KAA7B,gBAC/B,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBAlBD,E,oDAsBjBK,KAAKb,MAAMc,iB,wEAGElF,G,wEACVA,EAAQmF,WAAWjB,KACpBlE,EAAUA,EAAQkB,UAChBgD,EAAqBjD,OAAQjB,EAAQiB,OAAS,I,SAI5C5B,EAAMa,gBAAgB+E,KAAM,CAChC9E,MAAM,UAAD,OAAYH,GACjBK,QAAS,K,+KAIE+E,G,oFACbA,EAAMC,iBAEAC,EAAOF,EAAMG,OACbrD,EAAWoD,EAAKpD,SAASsD,MACzBrD,EAAQmD,EAAKnD,MAAMqD,MACnB5D,EAAW0D,EAAK1D,SAAS4D,MACzB3D,EAAkByD,EAAKzD,gBAAgB2D,MAEzCtD,GAAaC,GAAUP,GAAaC,E,iCAChCoD,KAAKhF,SAAS,sC,8CAInBiC,EAASjB,OAzDY,GAyDoBiB,EAASjB,OAxD7B,I,kCAyDhBgE,KAAKhF,SACT,wCA3DoB,EA2DpB,mBA1DoB,GA0DpB,iB,2DAMsB0B,EAAY8D,eAAeR,KAAMrD,EAAUC,G,sFAI/DoD,KAAKD,YAAW,G,mCAEMjD,EAAY8C,SAAS3C,EAAUC,EAAOP,G,QAA1D4C,E,OACNnF,EAAMa,gBAAgB+E,KAAM,CAC1B9E,MAAO,GACP+B,SAAUA,EACVsC,YAAaA,EACbH,OAAQb,EAAYQ,kB,oEAIhBiB,KAAKhF,SAAS,KAAID,S,yBAEpBiF,KAAKD,YAAW,G,6LAGNI,G,8EAChBA,EAAMC,iBAEA5C,EAAO2C,EAAMG,OAAO9C,KAAK+C,M,SACzBP,KAAKD,YAAW,G,gCAEdjD,EAAY+C,YAAYG,KAAKV,MAAMrC,SAAUO,G,OACnDpD,EAAMa,gBAAgB+E,KAAM,CAC1B9E,MAAO,GACPE,QAAS,GACTgE,OAAQb,EAAYS,mB,mEAIhBgB,KAAKhF,SAAS,KAAID,S,yBAEpBiF,KAAKD,YAAW,G,wMAGMI,G,0FAEpBrD,EAAYgD,wBAAwBE,KAAKV,MAAMrC,U,uBAC/C7C,EAAMqG,oBAAoBT,KAAM,gC,wEAGhCA,KAAKhF,SAAS,KAAID,S,0LAIX2F,G,iFACTtG,EAAMa,gBAAgB+E,KAAM,CAChCP,QAASiB,I,oJAKXV,KAAKtF,SAAU,I,+BAIf,IAAIiG,EAAwB,cACzBX,KAAKV,MAAMG,UACZkB,GAAyB,sBAG3B,IA+DIC,EA/DEC,EACJ,yBAAKC,UAAU,8BACXd,KAAKV,MAAMpE,OAAS,4BAAK8E,KAAKV,MAAMpE,OACtC,kDACA,0BAAM4F,UAAU,YAAYC,SAAUf,KAAKJ,UACzC,2BAAOoB,QAAQ,qBAAf,YACA,2BAAOC,aAAa,MAAMC,KAAK,OAAOC,KAAK,WACpCC,GAAG,sBAEV,2BAAOJ,QAAQ,kBAAf,SACA,2BAAOC,aAAa,MAAMC,KAAK,OAAOC,KAAK,QACpCC,GAAG,mBAEV,2BAAOJ,QAAQ,qBAAf,YACA,2BAAOC,aAAa,MAAMC,KAAK,WAAWC,KAAK,WACxCC,GAAG,sBAEV,2BAAOJ,QAAQ,6BAAf,oBACA,2BAAOC,aAAa,MAAMC,KAAK,WAAWC,KAAK,kBACxCC,GAAG,8BAEV,2BAAON,UAAWH,EAAuBO,KAAK,SAASX,MAAM,WACtDc,SAAUrB,KAAKV,MAAMG,YAK5B6B,EACJ,yBAAKR,UAAU,8BACXd,KAAKV,MAAMpE,OAAS,4BAAK8E,KAAKV,MAAMpE,OACpC8E,KAAKV,MAAMlE,SAAW,4BAAK4E,KAAKV,MAAMlE,SACxC,kDACA,iEACsC4E,KAAKV,MAAMC,YADjD,4HAKA,0BAAMuB,UAAU,YAAYC,SAAUf,KAAKH,aACzC,2BAAOmB,QAAQ,qBAAf,qBACA,2BAAOC,aAAa,MAAMC,KAAK,OAAOC,KAAK,OACpCI,IAAI,oBAAoBH,GAAG,sBAElC,4BAAQF,KAAK,SAASM,QAASxB,KAAKF,wBAC5BgB,UAAU,wCADlB,8CAKA,2BAAOA,UAAWH,EAAuBO,KAAK,SAASX,MAAM,SACtDc,SAAUrB,KAAKV,MAAMG,YAK5BgC,EACJ,yBAAKX,UAAU,8BACb,qDACA,uBAAGA,UAAU,qBAAb,2IAQJ,OAAOd,KAAKV,MAAMF,QAChB,KAAKb,EAAYO,SACf8B,EAAcC,EACd,MACF,KAAKtC,EAAYQ,gBACf6B,EAAcU,EACd,MACF,KAAK/C,EAAYS,iBACf4B,EAAca,EAKlB,OACE,yBAAKX,UAAU,kBACb,4BAAQU,QAASxB,KAAKN,MACdoB,UAAU,qDAChBF,O,GA/MiBc,aC8PZC,E,kDAlQb,WAAYxC,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXpE,MAAO,GACP+B,SAAU,KACVsC,YAAa,KACbE,SAAS,EACTL,OAAQD,EAAMC,QAAUb,EAAYG,OAGtC,EAAKgB,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKiC,MAAQ,EAAKA,MAAMjC,KAAX,gBACb,EAAKkC,uBAAyB,EAAKA,uBAAuBlC,KAA5B,gBAC9B,EAAK/B,eAAiB,EAAKA,eAAe+B,KAApB,gBACtB,EAAKmC,cAAgB,EAAKA,cAAcnC,KAAnB,gBACrB,EAAKG,wBAA0B,EAAKA,wBAAwBH,KAA7B,gBAC/B,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBAjBD,E,oDAqBjBK,KAAKb,MAAMc,cAAa,K,qEAGdE,G,gFACVA,EAAMC,iBAEAC,EAAOF,EAAMG,OACbrD,EAAWoD,EAAKpD,SAASsD,MACzB5D,EAAW0D,EAAK1D,SAAS4D,MAE3BtD,GAAaN,E,gCACTvC,EAAMyC,kBAAkBmD,KAAM,sC,yDAIhCA,KAAKD,YAAW,G,mCAEdjD,EAAY8E,MAAM3E,EAAUN,G,QAClCqD,KAAKb,MAAMc,cAAa,G,sDAGR,8BAAb,KAAIzC,K,kCACqBV,EAAYgD,wBAAwB7C,G,eAAxDsC,E,iBACAS,KAAKb,MAAM4C,0BAA0B9E,EAAUsC,G,iDAG/CnF,EAAMyC,kBAAkBmD,KAAM,KAAIjF,S,yBAGtCiF,KAAKD,YAAW,G,wMAGKI,G,iFACrB/F,EAAMa,gBAAgB+E,KAAM,CAChC9E,MAAO,GACPkE,OAAQb,EAAYI,oB,qLAIHwB,G,4EACnBA,EAAMC,iBAEAnD,EAAWkD,EAAMG,OAAOrD,SAASsD,M,gCAE/BnG,EAAM4H,mBAAmBhC,KAAM,+B,wDAIjCA,KAAKD,YAAW,G,iCAEMjD,EAAYc,eAAeX,G,eAA/CsC,E,iBAEAnF,EAAMa,gBAAgB+E,KAAM,CAChC9E,MAAO,GACP+B,SAAUA,EACVsC,YAAaA,EACbH,OAAQb,EAAYK,oB,2EAIhBxE,EAAMyC,kBAAkBmD,KAAM,KAAIjF,S,yBAEpCiF,KAAKD,YAAW,G,8LAGJI,G,gFAClBA,EAAMC,iBAEAC,EAAOF,EAAMG,OACb9C,EAAO6C,EAAK7C,KAAK+C,MACjB5D,EAAW0D,EAAK1D,SAAS4D,MACzB3D,EAAkByD,EAAKzD,gBAAgB2D,MAEzC/C,GAASb,GAAaC,E,uBACxBxC,EAAMyC,kBAAkBmD,KAAM,sC,2CAINtD,EAAY8D,eAAeR,KAAMrD,EAAUC,G,sFAI/DoD,KAAKD,YAAW,G,mCAEdjD,EAAYgF,cAAc9B,KAAKV,MAAMrC,SAAUO,EAAMb,G,yBAErDvC,EAAMa,gBAAgB+E,KAAM,CAChC9E,MAAO,GACPE,QAAS,GACTgE,OAAQb,EAAYM,mB,4EAIhBzE,EAAMyC,kBAAkBmD,KAAM,KAAIjF,S,yBAEpCiF,KAAKD,YAAW,G,yMAGMI,G,0FAEpBrD,EAAYc,eAAeoC,KAAKV,MAAMrC,U,uBACtC7C,EAAMqG,oBAAoBT,KAAM,gC,wEAGhC5F,EAAMyC,kBAAkBmD,KAAM,KAAIjF,S,0LAI3B2F,G,iFACTtG,EAAMa,gBAAgB+E,KAAM,CAChCP,QAASiB,I,oJAKXV,KAAKtF,SAAU,I,+BAIf,IAAIiG,EAAwB,cACzBX,KAAKV,MAAMG,UACZkB,GAAyB,sBAG3B,IAsFIC,EAtFEqB,EACJ,yBAAKnB,UAAU,8BACXd,KAAKV,MAAMpE,OAAS,4BAAK8E,KAAKV,MAAMpE,OACtC,sDACA,0BAAM4F,UAAU,YAAYC,SAAUf,KAAK4B,OACzC,2BAAOZ,QAAQ,kBAAf,qBACA,2BAAOC,aAAa,MAAMC,KAAK,OAAOC,KAAK,WACpCI,IAAI,iBAAiBH,GAAG,mBAE/B,2BAAOJ,QAAQ,kBAAf,YACA,2BAAOC,aAAa,MAAMC,KAAK,WAAWC,KAAK,WACxCI,IAAI,iBAAiBH,GAAG,mBAE/B,4BAAQF,KAAK,SAASM,QAASxB,KAAK6B,uBAC5Bf,UAAU,wCADlB,yBAKA,2BAAOA,UAAWH,EAAuBO,KAAK,SAASX,MAAM,QACtDc,SAAUrB,KAAKV,MAAMG,YAK5ByC,EACJ,yBAAKpB,UAAU,8BACXd,KAAKV,MAAMpE,OAAS,4BAAK8E,KAAKV,MAAMpE,OACtC,mDACA,2IAIA,0BAAM4F,UAAU,YAAYC,SAAUf,KAAKpC,gBACzC,2BAAOoD,QAAQ,kBAAf,qBACA,2BAAOC,aAAa,MAAMC,KAAK,OAAOC,KAAK,WACpCI,IAAI,iBAAiBH,GAAG,mBAE/B,2BAAON,UAAWH,EAAuBO,KAAK,SAASX,MAAM,SACtDc,SAAUrB,KAAKV,MAAMG,YAK5B0C,EACJ,yBAAKrB,UAAU,8BACXd,KAAKV,MAAMpE,OAAS,4BAAK8E,KAAKV,MAAMpE,OACpC8E,KAAKV,MAAMlE,SAAW,4BAAK4E,KAAKV,MAAMlE,SACxC,mDACA,iEACuC4E,KAAKV,MAAMC,YADlD,8BAIA,0BAAMuB,UAAU,YAAYC,SAAUf,KAAK8B,eACzC,2BAAOd,QAAQ,cAAf,QACA,2BAAOC,aAAa,MAAMC,KAAK,OAAOC,KAAK,OACpCI,IAAI,aAAaH,GAAG,eAE3B,2BAAOJ,QAAQ,kBAAf,YACA,2BAAOC,aAAa,MAAMC,KAAK,WAAWC,KAAK,WACxCI,IAAI,iBAAiBH,GAAG,mBAE/B,2BAAOJ,QAAQ,0BAAf,oBACA,2BAAOC,aAAa,MAAMC,KAAK,WAAWC,KAAK,kBACxCI,IAAI,yBAAyBH,GAAG,2BAEvC,4BAAQF,KAAK,SAASM,QAASxB,KAAKF,wBAC5BgB,UAAU,wCADlB,8CAKA,2BAAOA,UAAWH,EAAuBO,KAAK,SAASX,MAAM,SACtDc,SAAUrB,KAAKV,MAAMG,YAK5B2C,EACJ,yBAAKtB,UAAU,8BACb,uDACA,6GAQJ,OAAOd,KAAKV,MAAMF,QAChB,KAAKb,EAAYG,MACfkC,EAAcqB,EACd,MACF,KAAK1D,EAAYI,kBACfiC,EAAcsB,EACd,MACF,KAAK3D,EAAYK,kBACfgC,EAAcuB,EACd,MACF,KAAK5D,EAAYM,iBACf+B,EAAcwB,EAKlB,OACE,yBAAKtB,UAAU,kBACb,4BAAQU,QAASxB,KAAKN,MACdoB,UAAU,qDAChBF,O,GA7Pcc,aCsCTW,G,yDAtCb,WAAYlD,GAAQ,IAAD,8BACjB,cAAMA,IAEDmD,OAAS,EAAKA,OAAO3C,KAAZ,gBAHG,E,+KAOX7C,EAAYwF,S,uBACZtC,KAAKb,MAAMoD,iB,qIAIjB,OACE,yBAAKzB,UAAU,aACb,4BACE,4BACE,kBAAC,IAAD,CAAMA,UAAU,qBAAqBU,QAASxB,KAAKb,MAAMqD,cACnDC,GAAE,iBAAYzC,KAAKb,MAAMlC,WAD/B,iBAKF,yBAAK6D,UAAU,sBACf,wBAAIA,UAAU,sBACZ,4BAAQA,UAAU,sBAAlB,aAIF,wBAAIA,UAAU,sBACZ,4BAAQA,UAAU,qBAAqBU,QAASxB,KAAKsC,QAArD,iB,GA7BWZ,cCsJRgB,E,kDAnJb,WAAYvD,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXrC,SAAU,KACV0F,kBAAkB,EAClBC,eAAe,EACfC,cAAc,EACdxD,0BAA2B,KAC3BG,6BAA8B,MAGhC,EAAKsD,gBAAkB,EAAKA,gBAAgBnD,KAArB,gBACvB,EAAKoD,mBAAqB,EAAKA,mBAAmBpD,KAAxB,gBAC1B,EAAKqD,gBAAkB,EAAKA,gBAAgBrD,KAArB,gBACvB,EAAKsD,eAAiB,EAAKA,eAAetD,KAApB,gBACtB,EAAKuD,aAAe,EAAKA,aAAavD,KAAlB,gBACpB,EAAKwD,WAAa,EAAKA,WAAWxD,KAAhB,gBAClB,EAAKyD,kBAAoB,EAAKA,kBAAkBzD,KAAvB,gBAEzBpD,OAAO8G,oBAAsB,EAAKN,mBApBjB,E,8LAwBMjG,EAAYwG,c,cAA7BrG,E,gBAEA7C,EAAMa,gBAAgB+E,KAAM,CAChC/C,SAAUA,EACV4F,cAAc,EACdxD,0BAA2B,O,0QAKvBW,KAAK8C,kB,wLAGY3C,G,qEACpBH,KAAKV,MAAMqD,iB,gCACNvI,EAAMa,gBAAgB+E,KAAM,CAChCX,0BAA2B,KAC3BG,6BAA8B,O,uBAI5BpF,EAAMa,gBAAgB+E,KAAM,CAChC2C,kBAAmB3C,KAAKV,MAAMqD,mB,sLAIZxC,G,iFACd/F,EAAMa,gBAAgB+E,KAAM,CAChC4C,eAAgB5C,KAAKV,MAAMsD,gB,qLAIVzC,G,iFACb/F,EAAMa,gBAAgB+E,KAAM,CAChC6C,cAAe7C,KAAKV,MAAMuD,e,mLAIX1C,G,4EACXoD,EAAiBpD,EAAMqD,iBACRD,EAAeE,UAAUC,SAAS,sB,iEAGjDtJ,EAAMa,gBAAgB+E,KAAM,CAChC6C,cAAc,I,iLAIDc,G,iFACT3D,KAAKgD,kB,WAERW,E,gCACK3D,KAAK8C,kB,wLAGS7F,EAAUsC,G,iFAC1BnF,EAAMa,gBAAgB+E,KAAM,CAChC4C,eAAe,EACfD,kBAAkB,EAClBtD,0BAA2BpC,EAC3BuC,6BAA8BD,I,sJAKhCS,KAAKtF,SAAU,I,+BAIf,IAAMkJ,EACJ,yBAAK9C,UAAU,oBACb,4BAAQA,UAAU,qBAAqBU,QAASxB,KAAKgD,iBAArD,SAGA,0BAAMlC,UAAU,mBAChB,4BAAQA,UAAU,qBAAqBU,QAASxB,KAAK+C,oBAArD,sBAMEc,EACJ,yBAAK/C,UAAU,mBAAmBgD,SAAS,KACtCC,OAAQ/D,KAAKkD,cAChB,yBAAKpC,UAAU,oBACb,4BAAQA,UAAU,qBAAqBU,QAASxB,KAAKiD,gBACjDjD,KAAKV,MAAMrC,WAGjB,yBAAK6D,UAAU,oBAEXd,KAAKV,MAAMuD,cACX,kBAAC,EAAD,CAAU5F,SAAU+C,KAAKV,MAAMrC,SACrBuF,cAAexC,KAAKiD,eACpBV,eAAgBvC,KAAK8C,oBAMjCkB,EAAkBhE,KAAKV,MAAMrC,SAAW4G,EAAiBD,EAE/D,OACE,oCAEI5D,KAAKV,MAAMqD,kBACX,kBAAC,EAAD,CAAc1C,aAAcD,KAAK+C,mBACnB1D,0BACCW,KAAKV,MAAMD,0BACZG,6BACCQ,KAAKV,MAAME,+BAG1BQ,KAAKV,MAAMsD,eACX,kBAAC,EAAD,CAAW3C,aAAcD,KAAKmD,WACnBpB,0BAA2B/B,KAAKoD,oBAE3CY,O,GA9IetC,a,OCsBVuC,MAxBf,WACE,IAAMC,EAAOC,cAAcC,SACrBC,EAAgB,MAATH,GAAyB,UAATA,EACvBI,EAAiBD,EAAM,SAAW,eAExC,OACE,yBAAKvD,UAAWwD,GACZD,GAAO,6CACT,4BACE,4BACE,kBAAC,IAAD,CAAM5B,GAAG,SAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,UAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,UAAT,WAGJ,kBAAC,EAAD,QCLS8B,E,kLAdXnK,EAAMoK,kB,+BAIN,OACE,yBAAK1D,UAAU,kDACb,4J,GARcY,aCaP+C,MAbf,YAA4B,IAAZC,EAAW,EAAXA,QACd,GAAGnI,OAAOoI,SAASC,KAAKC,SAAS,KAAM,CACrC,IAAMC,EAAcvI,OAAOoI,SAASC,KAAKG,MAAM,KAAK,GAAGC,WAAW,IAAK,KACvEN,EAAQO,QAAQH,GAGlB,OACE,oCACE,kBAAC,EAAD,Q,OCLSI,EANG1G,OAAOC,OAAO,CAC9B0G,QAAS,EACTC,KAAM,EACNC,UAAW,ICsDEC,MArDf,SAAgCC,EAASC,EAAeC,EAAmBC,GACzE,OAAO,SAA0BvG,GAC/B,IAAIzE,EAAUiL,kBAAO,GADiB,EAEOC,mBAASJ,GAFhB,mBAEhCK,EAFgC,KAEjBC,EAFiB,OAGXF,mBAAS,MAHE,mBAGhCvI,EAHgC,KAG1B0I,EAH0B,OAIEH,mBAASV,EAAUC,SAJrB,mBAIhCa,EAJgC,KAIfC,EAJe,KAMhCC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACfH,EAAaf,EAAUC,SADR,kBAIMI,EAAQpG,EAAOgH,GAJrB,OAIPE,EAJO,OAKV3L,EAAQ4L,UACTP,EAAWM,GACXP,EAAoBK,GACpBF,EAAaf,EAAUE,OARZ,mDAYV,KAAIjE,OAASsE,EAZH,iBAaR/K,EAAQ4L,SACTL,EAAaf,EAAUG,WAdd,4FAAH,sDAuBRV,EAAWR,cAgBjB,OAfAoC,qBAAU,WAIR,OAHA7L,EAAQ4L,SAAU,EAClBJ,EAASV,GAEF,WACL9K,EAAQ4L,SAAU,KAQnB,CAACnH,EAAMqH,UAAW7B,IAGnB,kBAACe,EAAD,CAAkBe,WAAYtH,EAAO+G,SAAUA,EAAU7I,KAAMA,EAC7C+B,OAAQ4G,EAAiBH,cAAeA,M,OC1CjDa,MAPf,WACE,OACE,yBAAK5F,UAAU,qB,iBCDJ6F,EAJMnI,OAAOC,OAAO,CACjCmI,aAAc,iEC+DDC,E,4GA3DS1F,EAAMpG,GAC1B,IAAMa,EAAMkL,MAAM/L,GAGlB,OAFAa,EAAIuF,KAAOA,EAEJvF,I,mFAGwBmL,G,0EACR,MAApBA,EAASC,O,gCACiBD,EAASE,O,aAA9BC,E,OACAL,EAAIM,eAAeD,EAAa/F,KAAM+F,EAAanM,S,UAE/B,MAApBgM,EAASC,O,sBACTF,MAAM,mB,iLAIaM,EAAUC,EAASC,G,yFACpBxK,EAAYuB,iB,cAAhCD,E,gBAEiBmJ,MAAMZ,EAAaC,aAAeQ,EAAU,CACjEE,OAAQA,EACRE,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACPC,cAAexJ,K,cAJb2I,E,gBAQAF,EAAIgB,oBAAoBd,G,wBACjBA,EAASE,O,uNAGHG,EAAUC,G,kFACvBnD,E,UAAUkD,E,YAAYU,IAAYJ,UAAUL,I,SACxBvK,EAAYuB,iB,cAAhCD,E,gBAEiBmJ,MAAMZ,EAAaC,aAAe1C,EAAM,CAC7DyD,QAAS,CACPC,cAAexJ,K,cAFb2I,E,gBAMAF,EAAIgB,oBAAoBd,G,wBACjBA,EAASE,O,sNAGFG,EAAUC,G,iFACjBR,EAAIkB,gBAAgBX,EAAUC,EAAS,Q,mNAGjCD,EAAUC,G,iFAChBR,EAAIkB,gBAAgBX,EAAUC,EAAS,O,sNAG9BD,EAAUC,G,iFACnBR,EAAIkB,gBAAgBX,EAAUC,EAAS,U,mJCtBzCW,E,kJAnCY/K,EAAUgL,G,8EAC3BZ,EAAU,CACdpK,SAAUA,EACVgL,cAAeA,G,SAGJpB,EAAIqB,QAAQ,QAASb,G,oNAGdc,G,8EACdd,EAAU,CACdc,KAAMA,G,SAGKtB,EAAIqB,QAAQ,QAASb,G,wNAGRe,G,8EACpBf,EAAU,CACde,WAAYA,G,SAGDvB,EAAIqB,QAAQ,QAASb,G,wNAGRpK,EAAUoL,G,8EAC9BhB,EAAU,CACdpK,SAAUA,EACVoL,WAAYA,G,SAGDxB,EAAIyB,QAAQ,QAASjB,G,0JC4DvBkB,MAxFf,YAA6B,IAATlL,EAAQ,EAARA,KAAQ,EACcuI,oBAAS,GADvB,mBACpB4C,EADoB,KACNC,EADM,OAEY7C,mBAASvI,EAAKgL,YAF1B,mBAEpBK,EAFoB,KAEPC,EAFO,OAGA/C,mBAAS,IAHT,mBAGpB1K,EAHoB,KAGbF,EAHa,KAKtB4N,EAAY,uCAAG,WAAOzI,GAAP,iBAAAiG,EAAA,6DACX/K,EAAO8E,EAAMG,OAAOuI,MAAM,GADf,SAEQzO,EAAM0O,oBAAoBzN,GAFlC,UAEXgN,EAFW,OAIA,cAAdhN,EAAK6F,MAAsC,eAAd7F,EAAK6F,KAJpB,uBAKflG,EAAS,oDALM,0CAUfyN,GAAgB,GAChBzN,EAAS,IAXM,UAYTgN,EAASe,eAAe1L,EAAKJ,SAAUoL,GAZ9B,0DAefrN,EAAS,UAAY,KAAID,SAfV,QAkBjB0N,GAAgB,GAChBE,EAAeN,GAnBE,0DAAH,sDAsBVW,EAAwB3L,EAAK4L,aAAe,EAChD,0BAA4B,GAExBC,EACJ,oCACE,yBAAKC,IAAKT,EAAaU,IAAI,WAEzB/L,EAAKH,OACL,oCACE,2BAAO8D,QAAQ,qBAAqB8C,SAAS,KAA7C,iBAGA,2BAAO1C,GAAG,qBAAqBD,KAAK,SAASD,KAAK,OAC3CmI,OAAO,wBAAwBC,SAAUV,MAKlDW,EAAgBf,EAAe,kBAAC,EAAD,MAAqBU,EAE1D,OACE,yBAAKpI,UAAU,sBACb,wBAAIA,UAAU,2BAA2BzD,EAAKJ,UAC9C,yBAAK6D,UAAU,aACb,yBAAKA,UAAU,kBAEXzD,EAAKH,OACL,2BACE,0BAAM4D,UAAU,kBADlB,UAEUzD,EAAKH,MAFf,0BAKF,uBAAG4D,UAAU,+BACX,0BAAMA,UAAU,sBADlB,gBAGE,0BAAMA,UAAWkI,GACd3L,EAAK4L,eAGV,2BACE,0BAAMnI,UAAU,mBADlB,uBAEmBzD,EAAKmM,aAExB,2BACE,0BAAM1I,UAAU,qBADlB,iBAIE5F,GAAS,uBAAG4F,UAAU,wBAAwB5F,IAElD,yBAAK4F,UAAU,0BACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,wBACXyI,QC9EDE,EAPKjL,OAAOC,OAAO,CAChCiL,OAAQ,CAAEnJ,MAAO,EAAGoJ,KAAM,SAAUC,IAAK,UACzCC,SAAU,CAAEtJ,MAAO,EAAGoJ,KAAM,WAAYC,IAAK,YAC7CE,cAAe,CAAEvJ,MAAO,EAAGoJ,KAAM,qBAAsBC,IAAK,iBAC5DG,SAAU,CAAExJ,MAAO,EAAGoJ,KAAM,WAAYC,IAAK,cCqFhCI,E,kIApF+B3M,GAC1C,GAAqB,aAAlBA,EAAK4M,SACN,MAAM,GAAN,OAAU5M,EAAK6M,YAAf,YAA8B7M,EAAK8M,YAAnC,cAAoD9M,EAAK+M,aAE3D,GAAqB,aAAlB/M,EAAK4M,SAAyB,CAC/B,IAAMI,EAAgB,EAAIC,KAAKC,KAAKlN,EAAKmN,MAAM,GACzCC,GAAgBpN,EAAKmN,MAAQ,GAAK,EAAI,EACtCE,EAAc,mBAAeL,EAAf,kBAAsCI,GAC1D,MAAM,GAAN,OAAUC,EAAV,cAA8BrN,EAAK+M,aAErC,MAAM,GAAN,OAAU/M,EAAK8M,YAAf,cAAgC9M,EAAK+M,e,4CAGV/M,GAC3B,IAAMsN,EAAYX,EAAYY,qCAAqCvN,GACnE,MAAM,GAAN,OAAUA,EAAK4M,SAAf,YAA2BU,K,4CAGAtN,GAC3B,IAAMwN,EAAuBxN,EAAKyN,YAAYC,cACxCC,EAAoB3N,EAAK4M,SAASc,cACxC,OAAGF,EAAqBhG,SAASmG,GACxB3N,EAAKyN,YAER,GAAN,OAAUzN,EAAK4M,SAAf,cAA6B5M,EAAKyN,e,uCAGZzN,GACtB,GAAqB,kBAAlBA,EAAK4M,SAA8B,CACpC,IAAMgB,EAAwB5N,EAAK6N,UAAUnG,MAAM,KAAK,GACxD,OAAO3K,EAAM+Q,mBAAmBF,GAElC,OAAO5N,EAAK6N,UAAUnG,MAAM,KAAK,K,2EAGVkF,G,8EACjB5C,EAAU,CACd4C,SAAUA,G,SAGCpD,EAAIqB,QAAQ,WAAYb,G,qNAGd4C,EAAUmB,G,8EAC3B/D,EAAU,CACd4C,SAAUA,EACVmB,UAAWA,G,SAGAvE,EAAIqB,QAAQ,WAAYb,G,0NAGX4C,EAAUoB,G,gFAC9BhE,EAAU,CACd4C,SAAUA,EACVoB,UAAWA,G,SAGWxE,EAAIqB,QAAQ,WAAYb,G,cAA5CiE,E,QACQD,UAAYA,EACxBC,EAAYrB,SAAWA,E,kBAEhBqB,G,6IAGiBC,GAExB,IAAI,IAAMjM,KADViM,EAAmBC,SAASD,GACT9B,EACjB,GAAGA,EAAYnK,GAAOiB,QAAUgL,EAC9B,OAAO9B,EAAYnK,GAAOqK,O,6CAKF4B,GAE5B,IAAI,IAAMjM,KADViM,EAAmBC,SAASD,GACT9B,EACjB,GAAGA,EAAYnK,GAAOiB,QAAUgL,EAC9B,OAAO9B,EAAYnK,GAAOsK,Q,aCsMnB6B,G,yDAhRb,WAAYtM,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXG,SAAS,EACT2I,WAAY,GACZsD,wBAAyB,GACzBC,aAAa,EACbC,gBAAiB,EACjBC,aAAc,EACdxE,QAAS,GACTyE,gBAAiB,IAGnB,EAAKC,aAAe,EAAKA,aAAapM,KAAlB,gBACpB,EAAKqM,WAAa,EAAKA,WAAWrM,KAAhB,gBAClB,EAAKsM,YAAc,EAAKA,YAAYtM,KAAjB,gBACnB,EAAKuM,2BAA6B,EAAKA,2BAA2BvM,KAAhC,gBAjBjB,E,4DAoBHwM,GACd,IADsB,EAChBC,EAAoB,GADJ,cAELpM,KAAKb,MAAMkN,MAFN,IAEtB,IAAI,EAAJ,0BAAU9K,EAAV,QACE6K,EAAkBE,KAAKH,EAAO5K,KAHV,8BAKtB,OAAO6K,EAAkBG,KAAK,S,oKAI1BT,EAAkB,GAChB1D,EAAapI,KAAKV,MAAM8I,WAAW2C,c,cAErB/K,KAAKV,MAAM+H,S,4DAArB8E,E,QArCM,KAsCXL,EAAgB9P,O,uDAGEgE,KAAKwM,gBAAgBL,GAC1BpB,cAAclG,SAASuD,G,wBACrC0D,EAAgBQ,KAAKH,G,8CAINnM,KAAKb,MAAMkN,M,8DAAlB9K,E,SACL4K,EAAO5K,GAAKwJ,cAAclG,SAASuD,G,wBACpC0D,EAAgBQ,KAAKH,G,8TAMrB/R,EAAMa,gBAAgB+E,KAAM,CAChC8L,gBAAiBA,I,uSAKC,IAAjB9L,KAAKtF,Q,wDAEF+R,EAAcrQ,KAAKsQ,M,SACnBtS,EAAMa,gBAAgB+E,KAAM,CAChCP,SAAS,EACToM,aAAcY,I,cAGVE,EAAoB3M,KAAKV,MAAM8I,W,SACPpI,KAAKb,MAAMyN,OAAO5M,KAAKV,MAAM8I,Y,UAArD0D,E,OACHa,IAAsB3M,KAAKV,MAAM8I,W,kCAC5BhO,EAAMa,gBAAgB+E,KAAM,CAChC8L,gBAAiBA,I,WAIlB9L,KAAKV,MAAMuM,eAAiBY,E,kCACvBrS,EAAMa,gBAAgB+E,KAAM,CAChCP,SAAS,I,4QAMTO,KAAKb,MAAM0N,UAAW7M,KAAKb,MAAMyN,O,qBAChC5M,KAAKb,MAAM2N,qB,iCACN1S,EAAMa,gBAAgB+E,KAAM,CAChCoI,WAAY,GACZ3I,SAAS,I,uBAGWO,KAAKb,MAAMyN,S,OAA3BvF,E,qBACcA,G,8DAAV8E,E,SACC,KAAsBnM,KAAKb,MAAM2N,qB,wBAClC1E,EAAapI,KAAKwM,gBAAgBL,G,UAClC/R,EAAMa,gBAAgB+E,KAAM,CAChCoI,WAAYA,EACZsD,wBAAyBtD,EACzB3I,SAAS,EACT4H,QAASA,I,qMAMTrH,KAAK+M,gB,iDAGL/M,KAAKgN,mBAAmB,I,oCAG1BhN,KAAKb,MAAM8N,kB,kCACX7S,EAAMa,gBAAgB+E,KAAM,CAChCoI,WAAYpI,KAAKb,MAAM8N,oB,yBAEnBjN,KAAKkN,qB,wMAIUC,G,2EACpBA,EAAU3G,WAAcxG,KAAKb,MAAMqH,U,gCAC9BpM,EAAMa,gBAAgB+E,KAAM,CAChCoI,WAAY,K,2CAKbpI,KAAKb,MAAM8N,oBAAsBE,EAAUF,kB,gCACrC7S,EAAMa,gBAAgB+E,KAAM,CAChCoI,WAAYpI,KAAKb,MAAM8N,oB,UAIzBjN,KAAKb,MAAMqH,YAAc2G,EAAU3G,U,kEAGhCpM,EAAMa,gBAAgB+E,KAAM,CAChCoI,WAAY,GACZ3I,SAAS,I,yBAEWO,KAAKb,MAAMyN,S,eAA3BvF,E,iBAEAjN,EAAMa,gBAAgB+E,KAAM,CAChCP,SAAS,EACTiM,wBAAyB,GACzBrE,QAASA,EACTsE,aAAa,I,yBAGT3L,KAAK+M,gB,oLAGM5M,G,kFACdH,KAAKb,MAAM0N,Q,wBACNJ,EAAcrQ,KAAKsQ,M,SACnBtS,EAAMa,gBAAgB+E,KAAM,CAChCoI,WAAYjI,EAAMG,OAAOC,MACzBqL,gBAAiBa,I,YAGhBzM,KAAKV,MAAM8I,WAAWpM,OAAS,G,gBAChCO,OAAO6Q,YAAW,WACb,EAAK9N,MAAMsM,kBAAoBa,GAChC,EAAKS,uBAlKU,K,wCAuKb9S,EAAMa,gBAAgB+E,KAAM,CAChC8L,gBAAiB,K,iDAKf1R,EAAMa,gBAAgB+E,KAAM,CAChCoI,WAAYjI,EAAMG,OAAOC,Q,yBAGrBP,KAAK+M,gB,kLAIE5M,G,4EACToD,EAAiBpD,EAAMqD,gBACRD,EAAenC,KAAf,yBAAwCpB,KAAKb,MAAMgC,M,qDAGrEnB,KAAKb,MAAM0N,Q,gCACNzS,EAAMa,gBAAgB+E,KAAM,CAChC2L,aAAa,I,+CAITvR,EAAMa,gBAAgB+E,KAAM,CAChC2L,aAAa,EACbvD,WAAYpI,KAAKV,MAAMoM,0B,mLAKXvL,G,iFACV/F,EAAMa,gBAAgB+E,KAAM,CAChC2L,aAAa,I,iMAIgB0B,EAASC,G,iFAClClT,EAAMa,gBAAgB+E,KAAM,CAChCoI,WAAYkF,EACZ5B,wBAAyB4B,EACzB3B,aAAa,I,uBAGT3L,KAAK+M,gB,OACX/M,KAAKb,MAAMoO,SAASF,G,sJAIpBrN,KAAKtF,SAAU,I,+BAGP,IAAD,SACH8S,EAAiB,GADd,cAEaxN,KAAKV,MAAMwM,iBAFxB,yBAEGK,EAFH,QAGL,GAAG,EAAKhN,MAAMkN,KAAM,CAClB,IAAMiB,EAAe,EAAKd,gBAAgBL,GACpCsB,EAAgBtB,EAAO,EAAKhN,MAAMuO,YAClCL,EAAUlB,EAAM,GACtBqB,EAAelB,KACb,wBAAI9K,QAAS,kBAAM,EAAK0K,2BAA2BmB,EAASI,IACxDlM,IAAK8L,GACJC,QAIJ,CACH,IAAIK,EAAc,uCAAG,sBAAAvH,EAAA,sEACbhM,EAAMa,gBAAgB,EAAM,CAChCmN,WAAY+D,EACZR,aAAa,IAHI,cAKnB,EAAKxM,MAAMoO,SAASpB,GALD,SAOb,EAAKe,qBAPQ,2CAAH,qDAUlBM,EAAelB,KACb,wBAAI9K,QAASmM,EAAgBpM,IAAK4K,GAC/BA,MAzBT,IAAI,EAAJ,qBAAiD,IAF1C,8BAiCP,IAAMyB,GAAiB5N,KAAKb,MAAM0N,WAC9B7M,KAAKb,MAAMyN,QAAU5M,KAAKV,MAAMG,SAEpC,OACE,yBAAKsE,OAAQ/D,KAAKgM,WAAYlL,UAAU,iBACtC,2BAAOA,UAAWd,KAAKV,MAAMG,QAAU,oBAAsB,GACtD6J,SAAUtJ,KAAK+L,aAAc9K,aAAa,MAAMC,KAAK,OACrDX,MAAOP,KAAKV,MAAM8I,WAAYyF,QAAS7N,KAAKiM,YAC5C9K,KAAMnB,KAAKb,MAAMgC,KAAMC,GAAIpB,KAAKb,MAAMiC,GACtCC,SAAUuM,EAAeE,YAAa9N,KAAKb,MAAM2O,cAEtDN,EAAexR,OAAS,GAAKgE,KAAKV,MAAMqM,aACxC,wBAAIvK,GAAE,yBAAoBpB,KAAKb,MAAMgC,MAAQ2C,SAAS,KAClDhD,UAAU,yBACV0M,Q,GAzQa9L,cC0FZqM,MA9Ff,YAEkD,IAFnBC,EAEkB,EAFlBA,gBAAiBC,EAEC,EAFDA,iBACjBC,EACkB,EADlBA,iBAAkBC,EACA,EADAA,yBAClBC,EAAkB,EAAlBA,eAAkB,EACfxI,mBAASoI,GADM,mBACzC/D,EADyC,KAC/BoE,EAD+B,OAEbzI,mBAASqI,GAFI,mBAEzCK,EAFyC,KAE9BC,EAF8B,OAI7C3I,mBAASuI,GAJoC,mBAGzCK,EAHyC,KAGtBC,EAHsB,KA0B3CC,EAAwB,KACxBC,EAAyB,KAC1B1E,IAAauE,IACdE,EAAwB,kBAAM1E,EAAY4E,YAAY3E,IACtD0E,EAAyB1E,GAG3B,IAAI4E,EAAwB,KACxBC,EAAyB,KAC1B7E,GAAYqE,GACbO,EAAwB,kBAAM7E,EAAY+E,YAAY9E,EAAUqE,IAChEQ,EAAyB7E,EAAWqE,GAE9BrE,GAAYuE,IAClBK,EAAwB,kBAAM7E,EAAY+E,YAAY9E,IACtD6E,EAAyB7E,GAG3B,IAAM+E,EAAkC,kBAAb/E,EACD,CAAC,QAAU,CAAC,cAAe,QAC/CgF,EAAkC,aAAbhF,EACD,CAAC,QAAU,CAAC,cAAe,QAE/CiF,EAAsBjF,GAAsB,GAC5CkF,EAAiBX,EAAoB,6BACA,qCAO3C,OALAjI,qBAAU,WACe,OAApByH,GAA0BK,EAAYL,GACjB,OAArBC,GAA2BM,EAAaN,KAC1C,CAACD,EAAiBC,IAGnB,yBAAKnN,UAAU,yBACb,2BAAOE,QAAQ,eAAf,YACA,4BAAQT,MAAO2O,EAAqB5F,SAvDb,SAACnJ,GAC1BkO,EAAYlO,EAAMG,OAAOC,OACzBgO,EAAa,MACbH,EAAejO,EAAMG,OAAOC,MAAO,KAAM,OAqD/BY,KAAK,WAAWC,GAAG,eACzB,4BAAQC,UAAQ,EAACd,MAAM,KACvB,4BAAQA,MAAM,cAAd,cACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,iBAAd,iBACA,4BAAQA,MAAM,QAAd,kBAGF,2BAAOS,QAAQ,cAAf,WACA,kBAAC,EAAD,CAAcG,KAAK,UAAUC,GAAG,aAAawL,OAAQ8B,EACvCrC,KAAM2C,EAAmBzB,SA9DhB,SAAC6B,GAC1Bb,EAAaa,GACbhB,EAAenE,EAAUmF,EAAc,OA6DvB1B,WAAW,OAAOlH,UAAWmI,EAC7B7B,qBAAsBmB,IAEpC,4BAAQzM,QAzDkB,WAC5BiN,GAAsBD,GACtBD,EAAa,OAwDHrN,KAAK,SAASJ,UAAU,2CAC5BqO,GAGJ,2BAAOnO,QAAQ,YAAf,WACA,kBAAC,EAAD,CAAcG,KAAK,QAAQC,GAAG,WAAWwL,OAAQiC,EACnCxC,KAAM4C,EAAmB1B,SApEhB,SAAC8B,GAC1BjB,EAAenE,EAAUqE,EAAWe,IAoEpB3B,WAAW,OAAOlH,UAAWsI,EAC7BhC,qBAAsBoB,MCjB3BoB,G,yDAtEb,WAAYnQ,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXpE,MAAO,GACPuE,SAAS,GAGX,EAAKwK,SAAW,KAChB,EAAKmB,UAAY,KACjB,EAAKC,UAAY,KAEjB,EAAK3L,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAK4P,sBAAwB,EAAKA,sBAAsB5P,KAA3B,gBAC7B,EAAK6P,WAAa,EAAKA,WAAW7P,KAAhB,gBAClB,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBAfD,E,oDAmBjBK,KAAKb,MAAMoO,SAAS,KAAM,KAAM,Q,4CAGZtD,EAAUmB,EAAWC,GAAY,IAAD,EACA,CAClDpB,EAAUmB,EAAWC,GADrBrL,KAAKiK,SAD6C,KACnCjK,KAAKoL,UAD8B,KACnBpL,KAAKqL,UADc,O,0EAMrClL,G,oEACfA,EAAMC,iBAEFJ,KAAKqL,U,gCACDjR,EAAMyC,kBAAkBmD,KAAM,uC,wDAIhCA,KAAKD,YAAW,G,OACtBC,KAAKb,MAAMoO,SAASvN,KAAKqL,UAAWrL,KAAKiK,SAAUjK,M,iLAGpCU,G,iFACTtG,EAAMa,gBAAgB+E,KAAM,CAChCP,QAASiB,I,sIAKX,IAAIC,EAAwB,cAK5B,OAJGX,KAAKV,MAAMG,UACZkB,GAAyB,sBAIzB,yBAAKG,UAAU,kBACb,4BAAQU,QAASxB,KAAKN,MACdoB,UAAU,qDAClB,yBAAKA,UAAU,iCACXd,KAAKV,MAAMpE,OAAS,4BAAK8E,KAAKV,MAAMpE,OACtC,8CACA,0BAAM4F,UAAU,YAAYC,SAAUf,KAAKwP,YACzC,kBAAC,EAAD,CAAqBpB,eAAgBpO,KAAKuP,wBAC1C,2BAAOzO,UAAWH,EAAuBO,KAAK,SACvCX,MAAM,cAAcc,SAAUrB,KAAKV,MAAMG,iB,GA/D/BiC,cC+Hd+N,E,6GA9HUC,GACrB,IAAMC,EAAaD,EAAKxE,UAAUjG,QAAQ,IAAK,KAC/C,MAAM,eAAN,OAAsByK,EAAKzF,SAA3B,YAAuC0F,K,2CAGbD,GAC1B,IAAMC,EAAaD,EAAKxE,UAAUjG,QAAQ,IAAK,KAC/C,MAAM,UAAN,OAAiByK,EAAKzS,SAAtB,YAAkCyS,EAAKzF,SAAvC,YAAmD0F,K,yCAG3BD,GACxB,IAAME,EAAqB5F,EAAY6F,sBAAsBH,GACvDI,EAAqB9F,EAAYY,qCAAqC8E,GAC5E,MAAM,GAAN,OAAUE,EAAV,YAAgCE,K,wEAGZ7S,G,8EACdoK,EAAU,CACdpK,SAAUA,G,SAGC4J,EAAIqB,QAAQ,QAASb,G,2NAGLpK,EAAUgN,EAAUmB,EAAWC,EAAWlD,G,iGACpElL,E,iCACiBwS,EAASM,SAAS9S,G,QAAhC+S,E,QACEC,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAMC,UAAYF,EAAME,aAEjDC,EAAiB,G,cACHL,G,6DAARN,E,SACCY,U,4DACNrG,GAAYyF,EAAKzF,WAAaA,E,4DAC9BmB,GAAasE,EAAKxF,cAAgBkB,E,4DAClCC,GAAaqE,EAAKxE,YAAcG,E,wDACnCgF,EAAe/D,KAAKoD,G,kJAGhBa,EAAajG,KAAKC,KAAK8F,EAAerU,OAzCpB,MA0CrBmM,EAAOmC,KAAKkG,IAAID,EAAY,I,uBACzB3U,EAAMkL,SACN3F,KAAO,eACLvF,E,QAMR,IAHI6U,EAAe,GACbC,EAjDkB,IAiDJvI,EAAO,GACrBwI,EAAWrG,KAAKsG,IAAIF,EAlDF,GAkDsCL,EAAerU,QACrED,EAAI2U,EAAY3U,EAAI4U,EAAU5U,IACpC0U,EAAanE,KAAK+D,EAAetU,I,yBAG5B,CACLiU,MAAOS,EACPF,WAAYjG,KAAKkG,IAAID,EAAY,K,eAI7BlJ,EAAU,CACdpK,SAAUA,EACVgN,SAAUA,EACVmB,UAAWA,EACXC,UAAWA,EACXlD,KAAMA,G,UAGKtB,EAAIqB,QAAQ,QAASb,G,0PAINc,G,8EACxBd,EAAU,CACdc,KAAMA,EACN0I,QAAQ,G,SAGGhK,EAAIqB,QAAQ,QAASb,G,qNAGXpK,EAAUgN,EAAUoB,EAAWyF,G,8EAChDzJ,EAAU,CACdpK,SAAUA,EACVgN,SAAUA,EACVoB,UAAWA,EACXyF,eAAgBA,G,SAGLjK,EAAIqB,QAAQ,QAASb,G,uNAGfpK,EAAUgN,EAAUoB,G,8EACjChE,EAAU,CACdpK,SAAUA,EACVgN,SAAUA,EACVoB,UAAWA,G,SAGAxE,EAAIkK,SAAS,QAAS1J,G,sNAGfpK,EAAUgN,EAAUoB,EAAW2F,EAAOC,EACtCC,EAASZ,G,8EACvBjJ,EAAU,CACdpK,SAAUA,EACVgN,SAAUA,EACVoB,UAAWA,EACX2F,MAAOA,EACPC,OAAQA,EACRC,QAASzJ,KAAKC,UAAUwJ,GACxBZ,UAAWA,G,SAGAzJ,EAAIyB,QAAQ,QAASjB,G,gOAGZpK,EAAUgN,EAAUoB,G,8EACpChE,EAAU,CACdpK,SAAUA,EACVgN,SAAUA,EACVoB,UAAWA,G,SAGAxE,EAAIsK,WAAW,QAAS9J,G,8JC1D1B+J,E,uKA/DX,IAAM/T,EAAO2C,KAAKb,MAAM9B,KAElBgU,EAAcrH,EAAYsH,uBAAuBjU,EAAK4T,QACtDM,EAAe9B,EAAS+B,gBAAgBnU,GACxCoU,EAAoBhC,EAASiC,qBAAqBrU,GAClDsU,EAAiBtU,EAAKiT,UAAY,YAAc,cAChDR,EAAsB9F,EAAY4H,sBAAsBvU,GACxDnB,EAAa,IAAIE,KAAKiB,EAAKwU,YAAaC,qBACxCC,EAAiB1U,EAAKJ,SACtB+U,EAAW,iBAAaD,GACxBE,EAAYjS,KAAKb,MAAM+S,cAAgB,MAAQ7U,EAAK2T,MAAQ3T,EAAK2T,MAEvE,OACE,wBAAIlQ,UAAS,wCAAmCuQ,IAC9C,wBAAIvQ,UAAU,wBAEVd,KAAKb,MAAMgT,mBAAqBJ,GAChC,4BACE,kBAAC,IAAD,CAAMjR,UAAU,iBAAiB2B,GAAI8O,GAArC,SAMFlU,EAAKiT,WACL,4BACE,kBAAC,IAAD,CAAMxP,UAAU,iBAAiB2B,GAAIgP,GAArC,UAMN,4BAEIpU,EAAKiT,WAAcjT,EAAK+S,UAAY,GACpC,0BAAMtP,UAAU,sBACd,0BAAMA,UAAU,sBACfzD,EAAK+S,WAGTN,GAEH,wBAAIhP,UAAU,wBAEVd,KAAKb,MAAM+S,eACX,kBAAC,IAAD,CAAMpR,UAAU,WAAW2B,GAAIuP,GAC5BD,GAGJE,GAEH,wBAAInR,UAAU,4BACX5E,GAEH,wBAAI4E,UAAU,uBACZ,wBAAIA,UAAU,kDACd,wBAAIA,UAAS,2CAAsC6Q,W,GA1DlCjQ,aCiEZ0Q,E,uKA7DX,IAHA,IAAM/U,EAAO2C,KAAKb,MAAM9B,KAEpBgV,EAAe,GACXtW,EAAI,EAAGA,EAAIsB,EAAK2S,MAAMhU,OAAQD,IAAK,CACzC,IAAM2T,EAAOrS,EAAK2S,MAAMjU,GAClBuW,EAAgBtI,EAAYuI,iBAAiB7C,GAC7CC,EAAaD,EAAKxE,UAAUjG,QAAQ,IAAK,KACzC8M,EAAiBrC,EAAKzS,SAExBuV,EAAgB,yBACjBF,EAActW,QAAU,IACzBwW,GAAiB,UAGnB,IAAMnB,EAAcrH,EAAYsH,uBAAuB5B,EAAKuB,QAE5DoB,EAAa/F,KACX,wBAAI/K,IAAKxF,EAAG+E,UAAS,mDAA8CuQ,IACjE,wBAAIvQ,UAAU,2BAEVd,KAAKb,MAAMgT,mBAAqBJ,GAChC,4BACE,kBAAC,IAAD,CAAMjR,UAAU,iBACV2B,GAAE,sBAAiBiN,EAAKzF,SAAtB,YAAkC0F,IAD1C,SAOFD,EAAKY,WACL,4BACE,kBAAC,IAAD,CAAMxP,UAAU,iBACV2B,GAAE,iBAAYsP,EAAZ,YAA8BrC,EAAKzF,SAAnC,YAA+C0F,IADvD,UAON,0BAAM7O,UAAW0R,GACdF,KAMT,IAAM1C,EAAqB5F,EAAY6F,sBAAsBxS,GACvDnB,EAAa,IAAIE,KAAKiB,EAAKwU,YAAaC,qBAE9C,OACE,wBAAIhR,UAAU,kBACZ,4BACG8O,GAEH,wBAAI9O,UAAU,+BACX5E,GAEH,wBAAI4E,UAAU,2BACVuR,Q,GA3DkB3Q,aCuBf+Q,OAzBf,YACiE,IAD/BzB,EAC8B,EAD9BA,MAAO0B,EACuB,EADvBA,aAAcC,EACS,EADTA,QACrBC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,eACtCC,EAAWH,EAAU,OAAS,OAEhCC,IACFA,EAAa,WAGf,IAAMG,EAAmB,iFACcH,GAEvC,OACE,wBAAI9R,UAAU,6BACZ,4BAAQA,UAAU,qCACVU,QAASqR,GACbC,GAEJ,wBAAIhS,UAAWiS,GACZ/B,GAED2B,GAAWD,IC0DJM,G,WA/Eb,WAAYC,EAAU/B,GAAU,oBAC9BlR,KAAKiT,SAAWA,EAChBjT,KAAKkT,WAAWhC,G,uDAGPA,GACTlR,KAAKkR,QAAU,GACflR,KAAKmT,YAAcjC,EAAQlV,OAE3B,IAAI,IAAID,EAAI,EAAGA,EAAImV,EAAQlV,OAAQD,IAAK,CACtC,IAAIqX,EAAOlC,EAAQnV,GACnBqX,EAAKC,iBAAkB,EACvBrT,KAAKkR,QAAQ5E,KAAK8G,M,wCAIJE,GAAU,IAAD,gBACNA,GADM,IACzB,IAAI,EAAJ,qBAA4B,CAAC,IAAnBC,EAAkB,QACpBC,EAASxT,KAAKkR,QAAQqC,GAAOF,gBACnCrT,KAAKkR,QAAQqC,GAAOF,iBAAmBG,EAEpCA,EACDxT,KAAKmT,cAGLnT,KAAKmT,eATgB,iC,iCAchBM,GACT,IADoB,EAChBC,EAAe,EACfC,EAAmB,EACnBC,EAAa,GAHG,cAKF5T,KAAKkR,SALH,IAKpB,IAAI,EAAJ,qBAAgC,CAAC,IAAvBkC,EAAsB,QAE9B,GADAQ,EAAWtH,KAAK8G,GACbA,EAAKC,mBACNM,IACwB3T,KAAKiT,SAAU,CACrC,GAAGS,IAAiBD,EAClB,OAAOG,EACTA,EAAa,GACbD,EAAmB,EACnBD,MAdc,8BAmBpB,GAAGA,IAAiBD,EAClB,OAAOG,EAGT,MAAM9M,MAAM,8B,qCAIZ,IADa,EACT+M,EAAY,EACZC,EAAa,EACbH,EAAmB,EAHV,cAIK3T,KAAKkR,SAJV,IAIb,IAAI,EAAJ,qBAAgC,CAAC,IAAvBkC,EAAsB,QACZ,IAAfU,GACDD,IAGFC,IACGV,EAAKC,iBACNM,IAECA,IAAqB3T,KAAKiT,WAC3BU,EAAmB,EACnBG,EAAa,IAfJ,8BAmBb,OAAOD,M,YCjBIE,OAxDf,YAKE,IALiE,IAA9CC,EAA6C,EAA7CA,YAAazD,EAAgC,EAAhCA,WAAY0D,EAAoB,EAApBA,OAAQ1G,EAAY,EAAZA,SAChD2G,EAAc,CAAEF,GAEhBG,EAAQH,EAAc,EACtBI,EAAY,EACVD,EAAQ5D,GACZ2D,EAAY5H,KAAK6H,GACjBA,GAASC,EACTA,GAAa,EAGf,IAAIC,EAASL,EAAc,EAE3B,IADAI,EAAY,EACNC,EAAS,GACbH,EAAY5H,KAAK+H,GACjBA,GAAUD,EACVA,GAAa,EAGI,IAAhBJ,GACDE,EAAY5H,KAAK,GAChB0H,IAAgBzD,GAAcA,EAAa,GAC5C2D,EAAY5H,KAAKiE,GAEnB2D,EAAYjE,MAAK,SAAC7J,EAAGkO,GAAJ,OAAUlO,EAAIkO,KAG/B,IADA,IAAIC,EAAmB,GA1ByC,aA2B5D,IAAMd,EAAS,KACXe,EAAmBf,IAAcO,EACrC,0BAA4B,sBACxBS,EAAiBhB,IAAcO,EACnC,KAAO,kBAAMzG,EAASkG,IAExBc,EAAiBjI,KACf,wBAAI/K,IAAKkS,GACP,4BAAQ3S,UAAW0T,EAAiBhT,QAASiT,GAC1ChB,MATT,MAAuBS,EAAvB,eAAqC,IAerC,IAAI5P,EAAiB,YAKrB,OAJG2P,IACD3P,GAAkB,qBAIlB,yBAAKxD,UAAWwD,GACd,wBAAIxD,UAAU,kBACVyT,KC3CJG,GAAiBlW,OAAOC,OAAO,CACnCkW,QAAS,EACTC,SAAU,EACVlL,OAAQ,IAIV,SAASmL,GAAgB3E,EAAOC,GAC9B,OAAGD,EAAM2B,WAAa1B,EAAM0B,YAClB,EACH,EAGT,SAASiD,GAAkBC,EAAY3X,GACrC,IADiD,EAC7C4X,EAAkB,GAD2B,cAEhCD,GAFgC,IAEjD,IAAI,EAAJ,qBAA6B,CAAC,IAAD,EAAnBE,EAAmB,QACvBC,EAAkB,GADK,cAEJ9X,GAFI,IAE3B,IAAI,EAAJ,qBAAmC,CAAC,IAA1B+X,EAAyB,QACjCD,EAAgB5I,KAAK2I,EAAIE,KAHA,8BAM3B,IAAM5T,EAAM2T,EAAgB3I,KAAK,KAC9ByI,EAAgBla,eAAeyG,GAChCyT,EAAgBzT,GAAK+K,KAAK2I,GAG1BD,EAAgBzT,GAAO,CAAE0T,IAboB,8BAiBjD,OAAOD,E,IA6OMI,G,kDAzOb,WAAYjW,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACX6I,KAAM,EACNgK,iBAAkB,MAGpB,EAAKkD,cAAc,EAAKlW,MAAM6Q,OAC9B,EAAKsF,iBAAmB,IAAItC,GAtCV,GAsC0C,EAAKuC,iBAEjE,EAAKC,WAAa,EAAKA,WAAW7V,KAAhB,gBAXD,E,gMAec7C,EAAYwG,c,cAArC6O,E,gBACA/X,EAAMa,gBAAgB+E,KAAM,CAChCmS,iBAAkBA,I,gJAIFnC,GAClB,IAAMyF,EAAYzF,EAAM,GACpB0F,EAAgB,CAClBxL,YAAauL,EAAUvL,YACvBY,YAAa2K,EAAU3K,YACvBb,SAAUwL,EAAUxL,SACpB4H,WAAY4D,EAAU5D,WACtB7B,MAAO,IAGNhQ,KAAKb,MAAMwW,mBACZD,EAAczE,OAASwE,EAAUxE,QAChCjR,KAAKb,MAAMyW,qBACZF,EAAczL,SAAWwL,EAAUxL,UAbZ,oBAeP+F,GAfO,IAezB,IAAI,EAAJ,qBAAyB,CAAC,IAAhBN,EAAe,QACvBgG,EAAc1F,MAAM1D,KAAKoD,GACtBA,EAAKmC,WAAa6D,EAAc7D,aACjC6D,EAAc7D,WAAanC,EAAKmC,aAlBX,8BAsBzB,OAAO6D,I,oCAGK1F,GAAgE,IAAzD6F,EAAwD,uDAAvCnB,GAAehL,OAAQoM,EAAgB,uDAAJ,GACnEC,EAAmB,GACvB,GAAGF,IAAmBnB,GAAeC,QACnC,GAAG3U,KAAKb,MAAM6W,kBAAmB,CAC/B,IAAMC,EAAgBnB,GAAkB9E,EAAO,CAAC,WAAY,gBAC5D,IAAI,IAAMzO,KAAO0U,EAAe,CAC9B,IAAIP,EAAgB1V,KAAKkW,oBAAoBD,EAAc1U,IAC3DwU,EAAiBzJ,KAAKtM,KAAKuV,gBAAgBvZ,QAC3CgE,KAAKuV,gBAAgBjJ,KAAKoJ,QAGzB,CAAC,IAAD,gBACe1F,GADf,IACH,IAAI,EAAJ,qBAAyB,CAAC,IAAhBN,EAAe,QACvBqG,EAAiBzJ,KAAKtM,KAAKuV,gBAAgBvZ,QAC3CgE,KAAKuV,gBAAgBjJ,KAAKoD,IAHzB,mCAOF,CACH,IAAIyG,EAAUC,EAkBd,GAjBGP,IAAmBnB,GAAehL,QACnC1J,KAAKuV,gBAAkB,GACvBvV,KAAKqW,gBAAkB,GACvBrW,KAAKsW,gBAAkB,GAEpBtW,KAAKb,MAAMoX,eACZvG,EAAQ,YAAIA,GAAOC,KAAK4E,KAG1BsB,EAAWnW,KAAKb,MAAMwW,iBACtBS,EAAkB,WAGlBD,EAAWnW,KAAKb,MAAMyW,mBACtBQ,EAAkB,aAGjBD,EAgBD,OAAOnW,KAAKqV,cAAcrF,EAAO6F,EAAiB,EAAGC,GAfrD,IAAMU,EAAS1B,GAAkB9E,EAAO,CAACoG,IACzC,IAAI,IAAM7U,KAAOiV,EAAQ,CACvB,IAAMC,EAAc,UAAMX,EAAN,YAAmBvU,GACjCmV,EACJ1W,KAAKqV,cAAcmB,EAAOjV,GAAMsU,EAAiB,EAAGY,GAEtDzW,KAAKqW,gBAAgBI,IAAkB,EACvCzW,KAAKsW,gBAAgBG,GAAkBC,EANhB,oBAQJA,GARI,IAQvB,IAAI,EAAJ,qBAAiC,CAAC,IAAxBnD,EAAuB,QAC/BwC,EAAiBzJ,KAAKiH,IATD,gCAkB7B,OAAOwC,I,sCAGO/F,GAAgE,IAAD,OAAxD6F,EAAwD,uDAAvCnB,GAAehL,OAAQoM,EAAgB,uDAAJ,GACrEa,EAAmB,GACvB,GAAGd,IAAmBnB,GAAeC,QAInC,IAHA,IAAIiC,EACF5W,KAAKb,MAAM6W,kBAAoB5D,EAAkBhB,EAE3CrV,EAAI,EAAGA,EAAIiU,EAAMhU,OAAQD,IAC/B4a,EAAiBrK,KACf,kBAACsK,EAAD,CAAerV,IAAKxF,EAAGsB,KAAM2S,EAAMjU,GACpBoW,iBAAkBnS,KAAKV,MAAM6S,wBAI7C,CACH,IAAIgE,EAAUC,EAUd,GATGP,IAAmBnB,GAAehL,QACnCyM,EAAWnW,KAAKb,MAAMwW,iBACtBS,EAAkB,WAGlBD,EAAWnW,KAAKb,MAAMyW,mBACtBQ,EAAkB,aAGjBD,EAqCD,OAAOnW,KAAK6W,gBAAgB7G,EAAO6F,EAAiB,GApCpD,IAAMW,EAAS1B,GAAkB9E,EAAO,CAACoG,IAD9B,WAED7U,GACR,IAAMkV,EAAc,UAAMX,EAAN,YAAmBvU,GACjCmR,EACJ,EAAKmE,gBAAgBL,EAAOjV,GAAMsU,EAAiB,EAAGY,GAClDzF,EAAS6E,IAAmBnB,GAAehL,OAC/CM,EAAY8M,mBAAmBvV,GAAOA,EAElCoR,EAAU,EAAK0D,gBAAgBI,GAC/BC,EAAe,EAAKJ,gBAAgBG,GACpC5D,EAAc,uCAAG,4BAAAzM,EAAA,yDACrB,EAAKkP,iBAAiByB,kBAAkBL,GACxC,EAAKL,gBAAgBI,IAAmB,EAAKJ,gBAAgBI,GAEvDlG,EAAa,EAAK+E,iBAAiB0B,iBACtC,EAAK1X,MAAM6I,KAAOoI,GALA,gCAMb,EAAKiF,WAAWjF,GANH,OASrB,EAAK0G,cATgB,2CAAH,qDAYhBC,EAAsB,KACH,WAApBd,IACDc,EAAsBlN,EAAYsH,uBAAuB/P,IAG3DoV,EAAiBrK,KACf,kBAAC,GAAD,CAAwB/K,IAAKA,EAAKyP,MAAOA,EACjB0B,aAAcA,EAAcC,QAASA,EACrCE,eAAgBA,EAChBD,WAAYsE,MA9BxC,IAAI,IAAM3V,KAAOiV,EAAS,EAAhBjV,GAuCd,OACE,wBAAIT,UAAU,mBACV6V,K,0EAKSxO,G,iFACT/N,EAAMa,gBAAgB+E,KAAM,CAChCmI,KAAMA,I,mJAIYgP,EAAWC,GAAY,IAAD,OAEpCC,EAAiB,CACrB,mBACA,qBACA,oBACA,gBAEIC,EAAwBD,EAAeE,KAAI,SAACC,GAAD,OAAO,EAAKrY,MAAMqY,MAC7DC,EAAqBJ,EAAeE,KAAI,SAACC,GAAD,OAAOL,EAAUK,MAE/D,OAAG/P,KAAKC,UAAU4P,KAA2B7P,KAAKC,UAAU+P,KAC1DzX,KAAKb,MAAQgY,EACbnX,KAAKqV,cAAcrV,KAAKb,MAAM6Q,OAC9BhQ,KAAKsV,iBAAiBpC,WAAWlT,KAAKuV,iBAEf,IAApBvV,KAAKV,MAAM6I,QACZnI,KAAKwV,WAAW,IACT,K,+BAOH,IAAD,OACP,GAA+B,IAA5BxV,KAAKb,MAAM6Q,MAAMhU,OAClB,OACE,uBAAG8E,UAAU,sBAAb,oCAIJ,IAAM4W,EAAY1X,KAAKsV,iBAAiBqC,WAAW3X,KAAKV,MAAM6I,MACxDoI,EAAavQ,KAAKsV,iBAAiB0B,eACnCY,EAAY,SAAC3D,GAAD,OAChB,kBAAC,GAAD,CAAWD,YAAa,EAAK1U,MAAM6I,KAAMoI,WAAYA,EAC1ChD,SAAU,EAAKiI,WAAYvB,OAAQA,KAGhD,OACE,oCACI2D,GAAU,GACV5X,KAAK6W,gBAAgBa,GACrBE,GAAU,Q,GApOQlW,aCwFbmW,I,yDA3Hb,WAAY1Y,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXwY,oBAAoB,EACpBnC,kBAAkB,EAClBC,oBAAoB,EACpBI,mBAAmB,EACnBO,cAAc,GAGhB,EAAKwB,qBAAuB,EAAKA,qBAAqBpY,KAA1B,gBAC5B,EAAKqY,uBAAyB,EAAKA,uBAAuBrY,KAA5B,gBAC9B,EAAKsY,yBAA2B,EAAKA,yBAAyBtY,KAA9B,gBAChC,EAAKuY,wBAA0B,EAAKA,wBAAwBvY,KAA7B,gBAC/B,EAAKwY,mBAAqB,EAAKA,mBAAmBxY,KAAxB,gBAC1B,EAAK6P,WAAa,EAAKA,WAAW7P,KAAhB,gBAhBD,E,6LAoBXvF,EAAMa,gBAAgB+E,KAAM,CAChC8X,oBAAqB9X,KAAKV,MAAMwY,qB,+QAK5B1d,EAAMa,gBAAgB+E,KAAM,CAChC2V,kBAAmB3V,KAAKV,MAAMqW,mB,iRAK1Bvb,EAAMa,gBAAgB+E,KAAM,CAChC4V,oBAAqB5V,KAAKV,MAAMsW,qB,gRAK5Bxb,EAAMa,gBAAgB+E,KAAM,CAChCgW,mBAAoBhW,KAAKV,MAAM0W,oB,2QAK3B5b,EAAMa,gBAAgB+E,KAAM,CAChCuW,cAAevW,KAAKV,MAAMiX,e,gLAIb6B,EAAgBnO,EAAUoO,G,4EACrCD,E,gCACIpY,KAAK+X,uB,wDAKL9a,EAAW+C,KAAKb,MAAMmZ,SAASrb,S,SAC/BwS,EAAS8I,QAAQtb,EAAUgN,EAAUmO,G,OAErCzI,EAAayI,EAAenT,QAAQ,IAAK,KAC/CjF,KAAKb,MAAMuF,QAAQ4H,KAAnB,sBAAuCrC,EAAvC,YAAmD0F,I,mEAG7CvV,EAAMyC,kBAAkBwb,EAAe,KAAItd,S,yBAC3Csd,EAActY,YAAW,G,oJAKjC,OACE,oCAEIC,KAAKV,MAAMwY,oBACX,kBAAC,EAAD,CAAgBvK,SAAUvN,KAAKwP,aAEjC,yBAAK1O,UAAU,uCACb,wBAAIA,UAAU,kBAAd,SACA,8BACE,yBAAKA,UAAU,uBACb,+BACE,2CAEF,2BAAOI,KAAK,WAAWC,KAAK,SAASZ,MAAM,SACpC+I,SAAUtJ,KAAKgY,yBACtB,2BAAOhX,QAAQ,UAAf,UACA,2BAAOE,KAAK,WAAWC,KAAK,WAAWZ,MAAM,WACtC+I,SAAUtJ,KAAKiY,2BACtB,2BAAOjX,QAAQ,YAAf,YACA,2BAAOE,KAAK,WAAWC,KAAK,UAAUZ,MAAM,UACrC+I,SAAUtJ,KAAKkY,0BACtB,2BAAOlX,QAAQ,WAAf,YAEF,yBAAKF,UAAU,uBACb,2BAAOE,QAAQ,QACb,uCAEF,4BAAQwX,aAAa,UAAUrX,KAAK,OAC5BmI,SAAUtJ,KAAKmY,oBACrB,4BAAQ5X,MAAM,WAAd,WACA,4BAAQA,MAAM,UAAd,aAIN,yBAAKO,UAAU,2BACb,kBAAC,GAAD,CAAe6U,iBAAkB3V,KAAKV,MAAMqW,iBAC7BC,mBAAoB5V,KAAKV,MAAMsW,mBAC/BI,kBAAmBhW,KAAKV,MAAM0W,kBAC9BO,aAAcvW,KAAKV,MAAMiX,aACzBvG,MAAOhQ,KAAKb,MAAM6Q,QAE/BhQ,KAAKb,MAAMmZ,SAASpb,OACpB,4BAAQsE,QAASxB,KAAK+X,qBACdjX,UAAU,mDAChB,0BAAMA,UAAU,sB,GAlHRY,c,8CCExB,WAA2BvC,EAAOgH,GAAlC,mBAAAC,EAAA,6DACQnJ,EAAWkC,EAAMsZ,MAAMtS,OAAOlJ,SADtC,SAEyB+K,EAAS0Q,YAAYzb,GAF9C,cAEQqb,EAFR,gBAGsB7I,EAASM,SAAS9S,GAHxC,cAGQ+S,EAHR,OAKEsI,EAAS9O,WAAawG,EAAMhU,OAC5Bsc,EAASrb,SAAWA,EANtB,kBAQS,CACLqb,SAAUA,EACVtI,MAAOA,IAVX,6C,sBAsCe1K,U,gDACA,KAAM,gBAzBrB,YAAoD,IAA7BmB,EAA4B,EAA5BA,WAAYpJ,EAAgB,EAAhBA,KAAM+B,EAAU,EAAVA,OACvC,OAAGA,IAAW8F,EAAUG,UAEpB,yBAAKvE,UAAU,sBACb,gDAIE1B,IAAW8F,EAAUC,QAEzB,kBAAC,EAAD,MAKA,oCACE,kBAAC,EAAD,CAAU9H,KAAMA,EAAKib,WACrB,kBAAC,GAAD,CAAWA,SAAUjb,EAAKib,SAAUtI,MAAO3S,EAAK2S,MACrCtL,QAAS+B,EAAW/B,cClCxBiU,GAPKna,OAAOC,OAAO,CAChCma,KAAO,EACPC,KAAO,EACPC,OAAS,EACTC,UAAY,ICuCCC,G,6GAxCUC,EAAKC,EAAIC,GAC9B,OAAGF,IAAQN,GAAYC,KAClBM,EAAWD,EACP,GAGJE,EAAeR,GAAYC,OAC5BO,GAAgBR,GAAYC,MAEvBO,EAAeF,K,qCAIJA,EAAKC,EAAIC,GAC7B,OAAGF,IAAQN,GAAYC,KAClBM,EAAWD,GAEXE,EAAeF,IAAKE,GAAgBF,GAChCE,IAGJA,EAAeR,GAAYC,OAAMO,EAAe,GAChDD,EAAWC,EAAeF,GAE1BE,EAAeF,IAAKE,GAAgBF,GAChCE,M,mCAISC,GAClB,IAAItY,EAAY,GAChB,IAAI,IAAMuY,KAASV,GACdS,EAAOT,GAAYU,KACpBvY,GAAS,kBAAeuY,EAAf,MAGb,OAAOvY,M,SCuIIwY,G,WArKb,WAAYlY,GAAK,oBACfpB,KAAKoB,GAAKA,E,sDAIV,IAAMmY,EAAYhd,OAAOid,eACrBC,EAAgBF,EAAUG,WAAWC,cACrCC,EAAeL,EAAUM,UAAUF,cACnCG,EAAwBL,EACxBM,EAAuBH,EAEvBI,EAAkBha,KAAKia,uBAAuBR,GAC9CS,EAAiBla,KAAKia,uBAAuBL,GAC9CI,IAAiBP,EAAgBO,GACjCE,IAAgBN,EAAeM,GAElC,IAvBc9T,EAAGkO,EAAG6F,EAAGC,EAuBnBC,EAAcZ,EAAca,aAAa,SACzCC,EAAaX,EAAaU,aAAa,SACvCE,EAAef,EAAca,aAAa,YAC1CG,EAAcb,EAAaU,aAAa,YACxCI,EAAwD,kBAArCjB,EAAca,aAAa,MAElD,GAAmB,OAAhBD,GAAuC,OAAfE,EACzB,MAAO,CACLI,aAAa,EACbpH,MAAO,EACPqH,SAAU,EACVF,kBAAkB,EAClBG,gBAAgB,GAqBpB,GAjBGf,EAAsBrW,UAAUC,SAAS,oBACd,IAA3B6V,EAAUiB,eACXA,EAAe,GAEdT,EAAqBtW,UAAUC,SAAS,oBACd,IAA1B6V,EAAUkB,cACXA,EAAc,GAGI,OAAjBD,IAAuBA,EAAejB,EAAUiB,cAChC,OAAhBC,IAAsBA,EAAclB,EAAUkB,aAEjDJ,EAAcS,OAAOT,GACrBG,EAAeM,OAAON,GACtBD,EAAaO,OAAOP,GACpBE,EAAcK,OAAOL,GAElBJ,IAAgBE,GAAcC,IAAiBC,EAChD,MAAO,CACLE,aAAa,EACbpH,MAAO8G,EACPO,SAAUJ,EACVE,iBAAkBA,EAClBG,gBAAgB,GAIpB,GAlEiBvG,EAkESkG,EAlEHJ,EAkE6BK,KAlEtCrU,EAkEDiU,MAlEOF,EAkEoBI,GAhEjCjG,EAAI8F,EACNhU,EAAI+T,GA+DyD,CAAC,IAAD,EAClC,CAAEI,EAAYF,GAA1CA,EAD8D,KACjDE,EADiD,WAEhC,CAAEE,EAAaD,GAA7CA,EAF8D,KAEhDC,EAFgD,KAKlE,MAAO,CACLE,aAAa,EACbI,UAAWV,EACXW,aAAcR,EACdS,WAAYV,EACZW,cAAeT,EACfI,gBAAgB,K,8BAIZM,EAAcC,GACjBD,EAAaR,aACd3a,KAAKqb,mBACLrb,KAAKsb,iBACHH,EAAaJ,UAAWI,EAAaH,aACrCG,EAAaF,WAAYE,EAAaD,gBAGlCC,EAAaT,kBACnB1a,KAAKub,cAAcJ,EAAa5H,MAAO4H,EAAaP,SAAUQ,GAC9Dpb,KAAKwb,aAAa,EAAG,KAGrBxb,KAAKqb,mBACLrb,KAAKwb,YAAYL,EAAa5H,MAAO4H,EAAaP,a,kCAI1CrH,EAAOqH,GACjB,IAAIa,EAQAC,GANFD,EADClI,GAAS,EACKoI,SAASC,eAAe5b,KAAKoB,GAAKmS,GAGlCoI,SAASC,eAAe,kBAGbC,WAAW,GACnCH,IACFA,EAAWC,SAASG,eAAe,IACnCL,EAAaM,YAAYL,IAG3B,IAAIM,EAAQL,SAASM,cACrBD,EAAME,SAASR,EAAUd,GACzBoB,EAAMG,UAAS,GAEf,IAAI5C,EAAYhd,OAAOid,eACvBD,EAAU6C,kBACV7C,EAAU8C,SAASL,K,uCAGJjB,EAAWC,EAAcC,EAAYC,GACpD,IAAMoB,EAAmBX,SAASC,eAAe5b,KAAKoB,GAAK2Z,GACrDwB,EAAoBZ,SAASC,eAAe5b,KAAKoB,GAAK6Z,GACtDuB,EAAeF,EAAiBT,WAAW,GAC3CY,EAAgBF,EAAkBV,WAAW,GAE/CG,EAAQL,SAASM,cACrBD,EAAME,SAASM,EAAcxB,GAC7BgB,EAAMU,OAAOD,EAAevB,GAE5B,IAAI3B,EAAYhd,OAAOid,eACvBD,EAAU6C,kBACV7C,EAAU8C,SAASL,K,oCAGPzI,EAAOqH,EAAUQ,GAC7Bpb,KAAKqb,mBAEL,IAAIsB,EAAahB,SAASiB,cAAc,OACxCD,EAAWE,aAAa,KAAM,iBAC9BF,EAAWE,aAAa,QAAStJ,GACjCoJ,EAAWE,aAAa,WAAYjC,GACpC+B,EAAWE,aAAa,QAAS7D,GAAY8D,aAAa1B,IAC1DuB,EAAWI,UAAYC,OAAOC,aAAa,MAE3C,IAAIC,EAAYvB,SAASC,eAAe5b,KAAKoB,IAAMmS,EAAQ,IAC3D2J,EAAUvD,cAAcwD,aAAaR,EAAYO,K,yCAIjD,IAAIE,EAAqBzB,SAASC,eAAe,iBACjD,QAAGwB,IACDA,EAAmBzD,cAAc0D,YAAYD,IACtC,K,6CAKYE,GACrB,KAAMA,GAAS,CACb,GAAGA,EAAQ7Z,UAAUC,SAAS,mBAC5B,OAAO4Z,EAETA,EAAUA,EAAQ3D,cAEpB,OAAO,S,KChII4D,G,uKAtCH,IAAD,OACDC,GAAgBxd,KAAKb,MAAMia,KAAOT,GAAYE,MAAQ,EACtD4E,GAAkBzd,KAAKb,MAAMia,KAAOT,GAAYG,QAAU,EAC1D4E,GAAqB1d,KAAKb,MAAMia,KAAOT,GAAYI,WAAa,EAChE4E,GAAgB3d,KAAKb,MAAMia,KAAOT,GAAYC,MAAQ,EAEtDgF,EAAgB,SAAC1c,GACrB,OAAO,SAACf,GACNA,EAAMC,iBACN,EAAKjB,MAAMoO,SAASrM,KAIxB,OACE,yBAAKJ,UAAU,4BACb,4BACE,wBAAIA,UAAS,2BAAsB0c,IACjC,4BAAQtc,KAAK,SAASJ,UAAU,4BACxB+c,cAAeD,EAAcjF,GAAYE,SAEnD,wBAAI/X,UAAS,2BAAsB2c,IACjC,4BAAQvc,KAAK,SAASJ,UAAU,8BACxB+c,cAAeD,EAAcjF,GAAYG,WAEnD,wBAAIhY,UAAS,2BAAsB4c,IACjC,4BAAQxc,KAAK,SAASJ,UAAU,iCACxB+c,cAAeD,EAAcjF,GAAYI,cAEnD,wBAAIjY,UAAS,2BAAsB6c,IACjC,4BAAQzc,KAAK,SAASJ,UAAU,4BACxB+c,cAAeD,EAAcjF,GAAYC,e,GA/BvClX,aCCtB,SAASoc,GAAgBC,GACvB,IAD4B,EACxBC,EAAU,EADc,cAELD,GAFK,IAE5B,IAAI,EAAJ,qBAA4B,CAAC,IAAnBE,EAAkB,QAC1BnD,OAAOmD,GACPD,KAJ0B,8BAM5B,OAAOA,E,IA6QME,G,WAzQb,WAAYC,GAKV,GAL2B,oBAC3Bne,KAAKoe,WAAa,GAClBpe,KAAKqe,gBAAkB,KACvBre,KAAKse,mBAAqB,KAEvBH,EAAgB,CAAC,IAAD,gBACEA,GADF,IACjB,IAAI,EAAJ,qBAAmC,CAAC,IAAD,EAAzBI,EAAyB,QAC3BnF,EAAOmF,EAAMC,EADc,cAEfD,EAAMpE,GAFS,IAEjC,IAAI,EAAJ,qBAA2B,CAAC,IAAlBsE,EAAiB,QACzBze,KAAKoe,WAAW9R,KAAK,CACnBkS,EAAGpF,EACHe,EAAGsE,KAL0B,gCADlB,8BAYjBze,KAAKoe,WAAWM,OAAO1e,KAAKoe,WAAWpiB,OAAS,GAGlDgE,KAAK2e,e,gEAGaC,GAElB,IADA,IAAIC,EAAoB,EAChB9iB,EAAI,EAAGA,EAAIiE,KAAK8e,OAAO9iB,OAAQD,IAAK,CAC1C,IACMgjB,EAAcjB,GADN9d,KAAK8e,OAAO/iB,GACgBoe,GACpC6E,EAAgBH,EAAoBE,EAE1C,GAAGH,GAAeI,EAEhB,IADA,IAAIpE,EAAW,EACPqE,EAAIJ,EAAmBI,GAAKD,EAAeC,IAAK,CACtD,GAAGL,IAAgBK,EACjB,MAAO,CAAEljB,EAAG6e,GAEdA,GAAY5a,KAAKoe,WAAWa,GAAG9E,EAAEne,OAGrC6iB,GAAqBE,EAGvB,MAAO,CAAE,KAAM,Q,qCAGFxL,EAAOqH,GAGpB,IAFA,IAAIgE,EAAc5e,KAAKkf,YAAY3L,GAC/B4L,EAAmB,EACjBA,EAAmBvE,GAAYgE,EAAc5e,KAAKoe,WAAWpiB,QACjEmjB,GAAoBnf,KAAKoe,WAAWQ,GAAazE,EAAEne,OACnD4iB,IAGF,OAAGO,GAAoBvE,EACdgE,EAEFA,EAAc,I,mDAOMrL,EAAOqH,EAAUwE,GAA6B,IAAnBR,EAAkB,uDAAN,KAC/C,OAAhBA,IACDA,EAAc5e,KAAKqf,eAAe9L,EAAOqH,IAG3C,IAAM0E,EAAgBtf,KAAKuf,oBAAoBX,GAC/C,GAAGQ,GAAYR,EAAc5e,KAAKoe,WAAWpiB,OAAQ,CACnD,IAAMwjB,EAAuBxf,KAAKqf,eAAeC,EAAc,GAAK,EAAG,GACvE,GAAGV,IAAgBY,EACjB,MAAO,CAAEF,EAAc,GAAK,EAAG,GAGnC,OAAOA,I,uCAGQ/L,EAAOqH,EAAUD,GAChC,IAAMiE,EAAc5e,KAAKqf,eAAe9L,EAAOqH,GAE/C,OAAmB,IAAhBgE,EACE5e,KAAKoe,WAAWpiB,OAAS,EACnBgE,KAAKoe,WAAW,GAAGI,EACrB,EAED7D,EACC3a,KAAKoe,WAAWQ,GAAaJ,EAE/Bxe,KAAKoe,WAAWQ,EAAc,GAAGJ,I,6BAGnCjL,EAAOqH,EAAU6E,EAAgBrG,GACtC,IAD4C,EACtCwF,EAAc5e,KAAKqf,eAAe9L,EAAOqH,GACzC8E,EAAc1f,KAAKoe,WAAWM,OAAOE,GAFC,cAI1Ba,GAJ0B,IAI5C,IAAI,EAAJ,qBAAkC,CAAC,IAAzBhB,EAAwB,QAChCze,KAAKoe,WAAW9R,KAAK,CACnBkS,EAAGpF,EACHe,EAAGsE,KAPqC,8BAW5C,IAX4C,EAWtCkB,EAAsB3f,KAAKoe,WAAWpiB,OAXA,cAYrB0jB,GAZqB,IAY5C,IAAI,EAAJ,qBAAoC,CAAC,IAA3BzB,EAA0B,QAClCje,KAAKoe,WAAW9R,KAAK2R,IAbqB,8BAoB5C,OAJAje,KAAKqe,gBAAkB,KACvBre,KAAKse,mBAAqB,KAE1Bte,KAAK2e,eACE3e,KAAKuf,oBAAoBI,K,6BAG3B5E,EAAWC,EAAcC,EAAYC,GAC1C,IAAM0E,EAAkB5f,KAAKqf,eAAetE,EAAWC,GAEjD6E,EADmB7f,KAAKqf,eAAepE,EAAYC,GACjB0E,EAExC,GAAGA,EAAkB,EACnB,MAAO,CAAE,EAAG,GAGd5f,KAAKoe,WAAWM,OAAOkB,EAAiBC,GACxC,IAAMF,EAAsBC,EAM5B,OAJA5f,KAAKqe,gBAAkB,KACvBre,KAAKse,mBAAqB,KAE1Bte,KAAK2e,eACE3e,KAAKuf,oBAAoBI,K,sCAGlB5E,EAAWC,EAAcC,EAAYC,EAAejC,EAAKC,GAIvE,IAHA,IAAM0G,EAAkB5f,KAAKqf,eAAetE,EAAWC,GACjD8E,EAAmB9f,KAAKqf,eAAepE,EAAYC,GAEjDnf,EAAI6jB,EAAiB7jB,EAAI+jB,EAAkB/jB,IACjDiE,KAAKoe,WAAWriB,GAAGyiB,EAAIxF,GAAY+G,eAAe9G,EAAKC,EAAIlZ,KAAKoe,WAAWriB,GAAGyiB,GAGhFxe,KAAKqe,gBAAkB,KACvBre,KAAKse,mBAAqB,KAC1Bte,KAAK2e,eAVsE,MAYjC3e,KAAKuf,oBAAoBK,GAZQ,mBAYnEI,EAZmE,KAYrDC,EAZqD,OAa/BjgB,KAAKuf,oBAAoBO,GAbM,mBAc3E,MAAO,CAAEE,EAAcC,EAdoD,a,oCAiB/D1M,EAAOqH,GACnB5a,KAAKqe,gBAAkB9K,EACvBvT,KAAKse,mBAAqB1D,EAC1B5a,KAAK2e,iB,uCAIUuB,GACf,GAA4B,OAAzBlgB,KAAKqe,gBAIN,GAHAre,KAAKqe,gBAAkB,KACvBre,KAAKse,mBAAqB,KAEvB4B,EACD,GAAGA,EAAUvF,YAAa,CACxB,IAAIwF,EAAkBngB,KAAKqf,eACzBa,EAAUnF,UAAWmF,EAAUlF,cAG7BoF,EAAmBpgB,KAAKqf,eAC1Ba,EAAUjF,WAAYiF,EAAUhF,eAGlClb,KAAK2e,eATmB,MAYtB3e,KAAKqgB,6BAA6B,KAAM,MAAM,EAAOF,GAZ/B,mBAWtBD,EAAUnF,UAXY,KAWDmF,EAAUlF,aAXT,WActBhb,KAAKqgB,6BAA6B,KAAM,MAAM,EAAMD,GAd9B,mBAatBF,EAAUjF,WAbY,KAaAiF,EAAUhF,cAbV,SAgBrB,CACH,IAAI0D,EAAc5e,KAAKqf,eAAea,EAAU3M,MAAO2M,EAAUtF,UACjE5a,KAAK2e,eAFF,MAID3e,KAAKqgB,6BAA6B,KAAM,MAAM,EAAOzB,GAJpD,mBAGDsB,EAAU3M,MAHT,KAGgB2M,EAAUtF,SAH1B,UAQL5a,KAAK2e,iB,gCAMT,OAAkC,IAA3B3e,KAAKoe,WAAWpiB,S,wCAKPuX,EAAOqH,GACvB,GAAG5a,KAAKsgB,UAAW,OAAO,EAC1B,IAAIpP,EAAUlR,KAAK8e,OAAOvL,GAAO4G,EACjC,OAAGjJ,EAAQlV,SAAW4e,GAAY1J,EAAQ0J,EAAW,KAAOoC,OAAOC,aAAa,M,qCAKlE,IAAD,OACbjd,KAAK8e,OAAS,GACd9e,KAAKkf,YAAc,GAEnB,IAAIqB,EAAcvgB,KAAKoe,WAAWpiB,OAAS,EAAIgE,KAAKoe,WAAW,GAAGI,EAAI,EAClEgC,EAAkB,GAClBC,EAAgB,EACpBzgB,KAAKoe,WAAWsC,SAAQ,SAACzC,EAAWliB,GAE/BkiB,EAAUO,IAAM7F,GAAYC,MAAQqF,EAAU9D,IAAM6C,OAAOC,aAAa,MACzEgB,EAAU9D,EAAI,KAGhB,IAAIwG,EAAqB,EAAK7B,OAAO9iB,SAAW,EAAKqiB,iBACnDoC,IAAkB,EAAKnC,mBAGtBL,EAAUO,IAAM+B,GAAeI,GACF,IAA3BH,EAAgBxkB,SACjBukB,EAAc,GAGhB,EAAKzB,OAAOxS,KAAK,CACfkS,EAAG+B,EACHpG,EAAGqG,EAAgBjU,KAAK,MAE1B,EAAK2S,YAAY5S,KAAKvQ,EAAIykB,EAAgBxkB,QAE1CykB,EAAgBxC,EAAU9D,EAAEne,OAC5BukB,EAActC,EAAUO,EACxBgC,EAAkB,CAAEvC,EAAU9D,KAG9BqG,EAAgBlU,KAAK2R,EAAU9D,GAC/BsG,GAAiBxC,EAAU9D,EAAEne,WAIjCgE,KAAK8e,OAAOxS,KAAK,CACfkS,EAAG+B,EACHpG,EAAGqG,EAAgBjU,KAAK,MAE1BvM,KAAKkf,YAAY5S,KAAKtM,KAAKoe,WAAWpiB,OAASwkB,EAAgBxkB,QAG/DgE,KAAK8e,OAAOxS,KAAK,CACfkS,EAAG,EACHrE,EAAG6C,OAAOC,aAAa,MAGzBjd,KAAKkf,YAAY5S,KAAKtM,KAAKoe,WAAWpiB,U,mCAItC,OAAOgE,KAAK8e,W,KCjPD8B,OA/Bf,YAAsD,IAAjCxf,EAAgC,EAAhCA,GAAImS,EAA4B,EAA5BA,MAAOrC,EAAqB,EAArBA,QAAS2P,EAAY,EAAZA,SACnCC,EAAcD,EAAW,MAAQ3P,EAAU,MAAQA,EACnDpQ,EAAY+f,EAAW,kBAAoB,eAC3CjG,EAAWiG,EAAW3P,EAAQlV,OAAS,KAGvC+kB,EAAYC,mBAAQ,WACtB,MAAO,CACL5f,GAAIA,EAAIyf,SAAUA,EAAU9B,YAAa7N,EAAQlV,UAElD,CAAEoF,EAAIyf,EAAU3P,EAAQlV,SAc3B,OAVAuK,qBAAU,WACR,GAAGwa,EAAUF,SAAU,CACrBzmB,EAAMoK,cAAc,CAAC,IAAD,OAAKuc,EAAU3f,MAEnC,IAAIqa,EAAeE,SAASC,eAAemF,EAAU3f,IACrDqa,EAAasB,UAAYC,OAAOC,aAAa,MAC3CxB,EAAasB,UAAYC,OAAOC,aAAa,SAEhD,CAAC8D,IAGF,yBAAKjgB,UAAWA,EAAWM,GAAIA,EAAImS,MAAOA,EAAOqH,SAAUA,GACvDkG,ICAOG,G,uKAtBX,IAAM1C,EAAQve,KAAKb,MAAMof,MACnB2C,EAAWlhB,KAAKb,MAAMiC,GACtB+f,EAAWnhB,KAAKb,MAAMgiB,SACtB5N,EAAQvT,KAAKb,MAAMoU,MACnBrC,EAAUqN,EAAMpE,EAEtB,OAAGoE,EAAMC,IAAM7F,GAAYC,KAEvB,kBAAC,GAAD,CAAWxX,GAAI8f,EAAW3N,EAAOsN,UAAWM,EAAUjQ,QAASA,EACpDqC,MAAOA,IAKpB,yBAAKzS,UAAWkY,GAAY8D,aAAayB,EAAMC,GAAIpd,GAAI8f,EAAW3N,EAC7DA,MAAOA,GACRrC,O,GAlBUxP,aCmCL0f,OArCf,YAA2F,IAA9DlQ,EAA6D,EAA7DA,QAAS9P,EAAoD,EAApDA,GAAIigB,EAAgD,EAAhDA,SAAUnB,EAAsC,EAAtCA,UAAWlU,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,YACrEqV,EAAkB,GAEtBpQ,EAAQwP,SAAQ,SAACnC,EAAOxiB,GACtB,IAAIolB,GAAW,EAEZE,GAAYnB,EAAUrF,iBACpBqF,EAAUvF,aAAeuF,EAAUnF,WAAahf,GAAKA,GAAKmkB,EAAUjF,aACrEkG,GAAW,GAETjB,EAAUvF,aAAeuF,EAAU3M,QAAUxX,GAAMmkB,EAAUxF,mBAC/DyG,GAAW,IAIfG,EAAgBhV,KACd,kBAAC,GAAD,CAAOiS,MAAOA,EAAOnd,GAAIA,EAAImS,MAAOxX,EAAGwF,IAAKxF,EAAGolB,SAAUA,QAI7D,IAAI7c,EAAiB,wBAQrB,OANEA,GADC+c,EACiB,6BAGA,+BAIlB,yBAAKvgB,UAAWwD,EAAgBlD,GAAIA,EAAImgB,gBAAiBF,EACrDG,+BAA+B,OAAOC,WAAW,QACjD1d,OAAQiI,EAAY6B,QAAS5B,GAC1BqV,ICiEII,GAlGe,SAACC,GAC7BA,EAAKC,WAAWC,iBAAiB,UAAjC,uCAA4C,WAAO1hB,GAAP,eAAAiG,EAAA,yDACtCuX,GAAgBgE,EAAKriB,MAAM8b,WAAazC,GAAYC,MAAQ,EAG/C,WAAdzY,EAAMoB,IAJiC,gBAKxCpB,EAAMC,iBALkC,0BAOpB,cAAdD,EAAMoB,KAAwBogB,EAAKG,UAPD,iCAQlCH,EAAKI,SAR6B,OASxC5hB,EAAMC,iBATkC,2BAWpB,UAAdD,EAAMoB,KAAoBogB,EAAKG,WAAcnE,EAXX,kCAYlCgE,EAAKK,OAAOhF,OAAOC,aAAa,KAZE,QAaxC9c,EAAMC,iBAbkC,4CAA5C,uDAiBAuhB,EAAKC,WAAWC,iBAAiB,cAAjC,uCAAgD,WAAO1hB,GAAP,eAAAiG,EAAA,0DAC3CjG,EAAM8hB,cAAeN,EAAKG,UADiB,oDAK9C3hB,EAAMC,iBAGiB,0BAApBD,EAAM+hB,UARqC,wBAS5CP,EAAKzB,UAAUvF,aAAc,EACvB8E,EAAiBtf,EAAMgiB,aAAa5c,QAAQ,QAVN,SAWtCoc,EAAKK,OAAOvC,GAX0B,mCAetCtf,EAAMkG,KAfgC,kCAgBtCsb,EAAKK,OAAO7hB,EAAMkG,MAhBoB,4CAAhD,uDAoBAsb,EAAKC,WAAWC,iBAAiB,QAAjC,uCAA0C,WAAO1hB,GAAP,eAAAiG,EAAA,6DACxCjG,EAAMC,iBAEAgiB,EAAYjiB,EAAMkiB,cAAc9c,QAAQ,QAHN,SAIlCoc,EAAKK,OAAOI,GAJsB,2CAA1C,uDAOAT,EAAKC,WAAWC,iBAAiB,mBAAjC,uCAAqD,WAAO1hB,GAAP,SAAAiG,EAAA,0DAChDub,EAAKzB,UAAUvF,YADiC,gCAE3CgH,EAAKI,SAFsC,OAKnDJ,EAAKG,WAAY,EACjBH,EAAKW,iBAAmBX,EAAKzB,UAAU3M,MACvCoO,EAAKY,oBAAsBZ,EAAKzB,UAAUtF,SAPS,2CAArD,uDAUA+G,EAAKC,WAAWC,iBAAiB,iBAAjC,uCAAmD,WAAO1hB,GAAP,SAAAiG,EAAA,yDAC7Cub,EAAKG,UADwC,wDAKjDH,EAAKG,WAAY,EALgC,SAM3CH,EAAKa,kBAAkBriB,EAAMkG,MANc,2CAAnD,uDASA,IAAIoc,EAAwB,SAACtiB,GAC3B,IAAGwhB,EAAKG,UAAR,CAIA,IAAIY,GAAmB,EACvB,IACE,IACMhJ,EADYnd,OAAOid,eACIE,WAE7B,GAAGiI,EAAKC,WAAWle,SAASgW,GAAa,CACvC,IAAMyB,EAAewG,EAAKgB,MAAMC,UAChC,IAAI,IAAMrhB,KAAO4Z,EACZA,EAAargB,eAAeyG,IAC5BogB,EAAKzB,UAAU3e,KAAS4Z,EAAa5Z,KACtCmhB,GAAmB,IAK3B,MAAM9mB,IAIH8mB,GACDf,EAAKe,qBAMT,OAFA/G,SAASkG,iBAAiB,kBAAmBY,GAEtCA,G,UCyOMI,I,yDA9Tb,WAAY1jB,GAAQ,IAAD,8BACjB,cAAMA,IAEDiC,GAAL,2BAA8B0hB,gBAC9B,EAAKC,kBAAoB,IAAI7E,GAAkB,EAAK/e,MAAMgf,gBAC1D,EAAKwE,MAAQ,IAAIrJ,GAAM,EAAKlY,IAE5B,EAAK4hB,gBAAiB,EACtB,EAAK9C,UAAY,CACfvF,aAAa,EACbpH,MAAO,EACPqH,SAAU,EACVC,gBAAgB,EAChBH,kBAAkB,GAGpB,EAAKoH,WAAY,EACjB,EAAKQ,iBAAmB,KACxB,EAAKC,oBAAsB,KAE3B,EAAKjjB,MAAQ,CACX4R,QAAS,EAAK6R,kBAAkBpL,aAChCyD,WAAY,GAGd,EAAK6H,cAAgB,EAAKA,cAActjB,KAAnB,gBAzBJ,E,kLA6BbK,KAAKkgB,UAAUvF,aAMb,EACgD3a,KAAK+iB,kBAAkBhB,OACzE/hB,KAAKkgB,UAAUnF,UAAW/a,KAAKkgB,UAAUlF,aACzChb,KAAKkgB,UAAUjF,WAAYjb,KAAKkgB,UAAUhF,eAHzC,mBACDlb,KAAKkgB,UAAU3M,MADd,KACqBvT,KAAKkgB,UAAUtF,SADpC,OAN4B,EACqB5a,KAAK+iB,kBAAkBhB,OACzE/hB,KAAKkgB,UAAU3M,MAAOvT,KAAKkgB,UAAUtF,SAAW,EAChD5a,KAAKkgB,UAAU3M,MAAOvT,KAAKkgB,UAAUtF,UAHT,mBAC5B5a,KAAKkgB,UAAU3M,MADa,KACNvT,KAAKkgB,UAAUtF,SADT,MAahC5a,KAAKkgB,UAAUvF,aAAc,E,SACvB3a,KAAKkjB,kB,4KAGAC,G,4EACXnjB,KAAKojB,mBAEFpjB,KAAKkgB,UAAUvF,Y,gCACV3a,KAAK+hB,S,gBAGuC/hB,KAAK+iB,kBAAkBf,OACzEhiB,KAAKkgB,UAAU3M,MAAOvT,KAAKkgB,UAAUtF,SAAUuI,EAC/CnjB,KAAKV,MAAM8b,Y,mBAFXpb,KAAKkgB,UAAU3M,M,KAAOvT,KAAKkgB,UAAUtF,S,KAKvC5a,KAAKkgB,UAAUvF,aAAc,E,UACvB3a,KAAKkjB,kB,yLAGWC,G,kFAC8BnjB,KAAK+iB,kBAAkBf,OACzEhiB,KAAKsiB,iBAAkBtiB,KAAKuiB,oBAAqBY,EACjDnjB,KAAKV,MAAM8b,Y,mBAFXpb,KAAKkgB,UAAU3M,M,KAAOvT,KAAKkgB,UAAUtF,S,KAKvC5a,KAAKkgB,UAAUvF,aAAc,E,SACvB3a,KAAKkjB,kB,sLAGSjK,EAAKC,G,4EACrBlZ,KAAKkgB,UAAUvF,Y,0DAMnB3a,KAAK+iB,kBAAkBM,gBACrBrjB,KAAKkgB,UAAUnF,UAAW/a,KAAKkgB,UAAUlF,aACzChb,KAAKkgB,UAAUjF,WAAYjb,KAAKkgB,UAAUhF,cAAejC,EAAKC,G,mBAJ9DlZ,KAAKkgB,UAAUnF,U,KAAW/a,KAAKkgB,UAAUlF,a,KACzChb,KAAKkgB,UAAUjF,W,KAAYjb,KAAKkgB,UAAUhF,c,eAMtClb,KAAKkjB,kB,mQAIXljB,KAAKgjB,gBAAiB,EACtBhjB,KAAK2iB,MAAMtH,mBACXrb,KAAKkgB,UAAUxF,kBAAmB,E,SAE5B1a,KAAKsjB,gB,cACXtjB,KAAK2iB,MAAMY,QAAQvjB,KAAKkgB,UAAWlgB,KAAKV,MAAM8b,Y,SACxCpb,KAAK0iB,mB,sQAILtoB,EAAMa,gBAAgB+E,KAAM,CAChCkR,QAASlR,KAAK+iB,kBAAkBpL,e,gLAInB6L,G,iFACTppB,EAAMa,gBAAgB+E,KAAM,CAChCob,WAAYoI,I,oLAIIvK,G,gFAClBjZ,KAAKkgB,UAAUrF,gBAAiB,EAE1B3B,EAAuC,KAAjClZ,KAAKV,MAAM8b,WAAanC,GAC9BwK,EAAiBzK,GAAY0K,gBAAgBzK,EAAKC,EAAIlZ,KAAKV,MAAM8b,YAEnEpb,KAAKkgB,UAAUvF,Y,oBACXgJ,EAAoB3jB,KAAK+iB,kBAAkBa,iBAC/C5jB,KAAKkgB,UAAU3M,MAAOvT,KAAKkgB,UAAUtF,UAAU,GAG7CiJ,EAA6B7jB,KAAKkgB,UAAUxF,iBAChD1a,KAAKkgB,UAAUxF,iBAAmB+I,IAAmBE,GACnD3jB,KAAK+iB,kBAAkBe,kBACrB9jB,KAAKkgB,UAAU3M,MAAOvT,KAAKkgB,UAAUtF,WAGtC5a,KAAKkgB,UAAUxF,iB,wBAChB1a,KAAK+iB,kBAAkBxH,cACrBvb,KAAKkgB,UAAU3M,MAAOvT,KAAKkgB,UAAUtF,U,UAEjC5a,KAAKsjB,gB,oCAGRO,E,wBACD7jB,KAAK+iB,kBAAkB1H,mB,UACjBrb,KAAKsjB,gB,yBAITtjB,KAAK+jB,WAAWN,G,QACtBzjB,KAAK2iB,MAAMY,QAAQvjB,KAAKkgB,UAAWlgB,KAAKV,MAAM8b,Y,yCAGxCpb,KAAKqjB,gBAAgBpK,EAAKC,G,oRAK9B2K,EAA6B7jB,KAAKkgB,UAAUxF,iBAChD1a,KAAKojB,mBAEFS,E,uBACD7jB,KAAK+iB,kBAAkB1H,iBAAiBrb,KAAKkgB,WAC7ClgB,KAAK2iB,MAAMtH,mB,SACLrb,KAAKsjB,gB,OACXtjB,KAAK2iB,MAAMY,QAAQvjB,KAAKkgB,UAAWlgB,KAAKV,MAAM8b,Y,WAG7Cpb,KAAKkgB,UAAUvF,Y,wBACZqJ,GAAc,EACZC,EAActI,SAASC,eAAe5b,KAAKoB,GAAKpB,KAAKkgB,UAAUnF,WAC/DmJ,EAAevI,SAASC,eAAe5b,KAAKoB,GAAKpB,KAAKkgB,UAAUjF,YAEhEkJ,EAAoBnkB,KAAKV,MAAM4R,QAAQlR,KAAKkgB,UAAUnF,WAAWZ,EAAEne,OACnEooB,EAAoBpkB,KAAKkgB,UAAUlF,eAAiBmJ,EACpDE,EAAwD,IAAjCrkB,KAAKkgB,UAAUhF,cAEzC+I,EAAYxgB,UAAUC,SAAS,qBAAuB0gB,IACvDJ,GAAc,GACbE,EAAazgB,UAAUC,SAAS,qBAAuB2gB,IACxDL,GAAc,GAEZL,EAAoB3jB,KAAK+iB,kBAAkBa,iBAC7C5jB,KAAKkgB,UAAUnF,UAAW/a,KAAKkgB,UAAUlF,cAAc,G,UAEnDhb,KAAK+jB,WAAWJ,G,QAEnBK,GACDhkB,KAAK2iB,MAAMY,QAAQvjB,KAAKkgB,UAAWlgB,KAAKV,MAAM8b,Y,+BAI5CuI,EAAoB3jB,KAAK+iB,kBAAkBa,iBAC7C5jB,KAAKkgB,UAAU3M,MAAOvT,KAAKkgB,UAAUtF,UAAU,G,UAE3C5a,KAAK+jB,WAAWJ,G,QACtB3jB,KAAK2iB,MAAMY,QAAQvjB,KAAKkgB,UAAWlgB,KAAKV,MAAM8b,Y,+IAKhD,IAAMD,EAAenb,KAAK2iB,MAAMC,UAIhC,GAHA5iB,KAAKkgB,UAAUrF,gBAAiB,EAG7BM,EAAaR,YAAa,CAAC,IAAD,EAEzB3a,KAAK+iB,kBAAkB1C,6BACrBlF,EAAaJ,UAAWI,EAAaH,cAAc,GAH5B,mBACzBhb,KAAKkgB,UAAUnF,UADU,KACC/a,KAAKkgB,UAAUlF,aADhB,WAOzBhb,KAAK+iB,kBAAkB1C,6BACrBlF,EAAaF,WAAYE,EAAaD,eAAe,GAR9B,mBAMzBlb,KAAKkgB,UAAUjF,WANU,KAMEjb,KAAKkgB,UAAUhF,cANjB,KAW3Blb,KAAKkgB,UAAUvF,aAAc,EAC7B3a,KAAKkgB,UAAUxF,kBAAmB,MAE/B,CAAC,IAAD,EAED1a,KAAK+iB,kBAAkB1C,6BACrBlF,EAAa5H,MAAO4H,EAAaP,UAAU,GAH5C,mBACD5a,KAAKkgB,UAAU3M,MADd,KACqBvT,KAAKkgB,UAAUtF,SADpC,KAMA5a,KAAK+iB,kBAAkBe,kBACxB9jB,KAAKkgB,UAAU3M,MAAOvT,KAAKkgB,UAAUtF,YAErCO,EAAaT,kBAAmB,GAGlC1a,KAAKkgB,UAAUvF,aAAc,EAC7B3a,KAAKkgB,UAAUxF,iBAAmBS,EAAaT,oB,0CAKjD1a,KAAK4hB,WAAajG,SAASC,eAAe5b,KAAKoB,IAC/CpB,KAAKskB,gBAAkB3I,SAASC,eAAe5b,KAAKoB,GAAK,KACzDpB,KAAKyiB,sBAAwBf,GAAsB1hB,MAEhDA,KAAKb,MAAMolB,cACZvkB,KAAK4hB,WAAW4C,U,2CAKlB,GAAIxkB,KAAKgjB,eAAT,CAKA,IANmB,EAMfyB,EAAY,GANG,cAODzkB,KAAK4hB,WAAW/F,YAPf,IAOnB,IAAI,EAAJ,qBAA8C,CAAC,IAArC6I,EAAoC,QACzCA,EAAKC,WAAaC,KAAKC,WAA+B,OAAlBH,EAAKI,UACvB,SAAlBJ,EAAKI,UACNL,EAAUnY,KAAKoY,IAVA,8BAcnB,IAAI,IAAJ,MAAkBD,EAAlB,eAA6B,CAAzB,IAAMC,EAAI,KACZ1kB,KAAK4hB,WAAWvE,YAAYqH,GAG9B,IAAI,IAAI3oB,EAAI,EAAGA,EAAIiE,KAAKV,MAAM4R,QAAQlV,OAAQD,IAAK,CACjD,IAAIgpB,EAAe/kB,KAAK4hB,WAAWoD,SAASjpB,GACzCgpB,EAAathB,UAAUC,SAAS,oBAIhCqhB,EAAahI,YAAc/c,KAAKV,MAAM4R,QAAQnV,GAAGoe,IAClD4K,EAAalJ,WAAW,GAAGoJ,UAAYjlB,KAAKV,MAAM4R,QAAQnV,GAAGoe,GAK9Dna,KAAKb,MAAMmK,UACZtJ,KAAKb,MAAMmK,SAAStJ,KAAKV,MAAM4R,SAGjClR,KAAKgjB,gBAAiB,K,6CAItBhjB,KAAKtF,SAAU,EACfihB,SAASuJ,oBAAoB,kBAAmBllB,KAAKyiB,yB,+BAG7C,IAAD,OA4BP,OACE,yBAAK3hB,UAAU,mBAAmBM,GAAIpB,KAAKoB,GAAK,KAC9C,kBAAC,GAAD,CAASgY,KAAMpZ,KAAKV,MAAM8b,WAAY7N,SAAUvN,KAAKijB,gBACrD,kBAAC,GAAD,CAAmB/R,QAASlR,KAAKV,MAAM4R,QAAS9P,GAAIpB,KAAKoB,GACtCigB,UAAU,EAAMrV,WA/BtB,SAAC7L,GAGhB,GAAGA,EAAMqD,cAAe,CACtB,IAAI2hB,EAAShlB,EAAMqD,cAAcC,UAAUC,SAAS,iBACjD,EAAK4gB,gBAAgB5gB,SAASvD,EAAMqD,eACnC4hB,EAAY,EAAKxD,WAAWle,SAASvD,EAAMqD,eAE/C,GAAG2hB,GAAUC,EACX,OAID,EAAKlF,UAAUrF,iBAChB,EAAKqF,UAAUrF,gBAAiB,EAC7B,EAAKqF,UAAUxF,kBAChB,EAAKwF,UAAUxF,kBAAmB,EAClC,EAAKiI,MAAMtH,mBACX,EAAK0H,kBAAkB1H,mBACvB,EAAKiI,iBAGL,EAAKrM,gBAUYhL,YAAajM,KAAKyiB,sBAClBvC,UAAWlgB,KAAKkgB,iB,GAzTlBxe,cC0EV2jB,G,kDA9Eb,WAAYlmB,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXpE,MAAO,IAET,EAAKoqB,WAAaxC,eAElB,EAAKpjB,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAK4lB,WAAa,EAAKA,WAAW5lB,KAAhB,gBAClB,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBAVD,E,oDAcjBK,KAAKb,MAAMc,iB,0EAGIE,G,8EACfA,EAAMC,iBAEcD,EAAMG,OAAOklB,YAAYjlB,QAC1BP,KAAKslB,W,gCAChBlrB,EAAMyC,kBAAkBmD,KAAM,yC,iEAKblD,EAAYwG,c,cAA7BrG,E,OACAgN,EAAWjK,KAAKb,MAAM8K,SACtBoB,EAAYrL,KAAKb,MAAMmM,YAAYD,U,UAEnCrL,KAAKD,YAAW,G,yBAChB0P,EAAS8V,WAAWtoB,EAAUgN,EAAUoB,G,QAC9CrL,KAAKb,MAAMuF,QAAQ4H,KAAnB,iBAAkCrP,I,mEAG5B7C,EAAMyC,kBAAkBmD,KAAM,KAAIjF,S,yBAClCiF,KAAKD,YAAW,G,2LAITW,G,iFACTtG,EAAMa,gBAAgB+E,KAAM,CAChCP,QAASiB,I,sIAKX,IAAIC,EAAwB,cAK5B,OAJGX,KAAKV,MAAMG,UACZkB,GAAyB,sBAIzB,yBAAKG,UAAU,kBACb,4BAAQU,QAASxB,KAAKN,MACdoB,UAAU,qDAClB,yBAAKA,UAAU,sCACXd,KAAKV,MAAMpE,OAAS,4BAAK8E,KAAKV,MAAMpE,OACtC,sFACA,6GAIA,0BAAM4F,UAAU,YAAYC,SAAUf,KAAKulB,YACzC,2BAAOvkB,QAAQ,eAAehB,KAAKslB,YACnC,2BAAOrkB,aAAa,MAAMC,KAAK,OAAOC,KAAK,cACpCI,IAAI,cAAcH,GAAG,gBAE5B,2BAAON,UAAWH,EAAuBO,KAAK,SAASX,MAAM,SACtDc,SAAUrB,KAAKV,MAAMG,iB,GAvEfiC,aCGzB,SAAS+jB,GAAiBtlB,GACxBA,EAAMC,iBACND,EAAMulB,YAAc,G,IA+JPC,G,kDA3Jb,WAAYxmB,GAAQ,IAAD,sBAGjB,IAAMymB,GAFN,cAAMzmB,IAEgBA,MAAMymB,SAHX,OAIjB,EAAK5U,MAAQ4U,EAAS5U,MACtB,EAAKC,OAAS2U,EAAS3U,OACvB,EAAKC,QAAUzJ,KAAKoe,MAAMD,EAAS1U,SACnC,EAAK4U,UAAY,IAAI1pB,KAAKwpB,EAAS/T,YAEnC,EAAKvS,MAAQ,CACXgR,UAAWsV,EAAStV,UACpByV,oBAAoB,EACpBC,OAAO,EACPC,aAAa,EACbC,gBAAgB,EAChBC,gBAAgB,GAGlB,EAAKC,SAAW,EAAKA,SAASzmB,KAAd,gBAChB,EAAK0mB,kBAAoB,EAAKA,kBAAkB1mB,KAAvB,gBACzB,EAAK2mB,iBAAmB,EAAKA,iBAAiB3mB,KAAtB,gBACxB,EAAK4mB,kBAAoB,EAAKA,kBAAkB5mB,KAAvB,gBACzB,EAAK6mB,mBAAqB,EAAKA,mBAAmB7mB,KAAxB,gBAC1B,EAAK8mB,oBAAsB,EAAKA,oBAAoB9mB,KAAzB,gBAvBV,E,uGA0BK2Q,G,iGACCxT,EAAYwG,c,cAA7BrG,E,OACAgN,EAAWjK,KAAKb,MAAM8K,SACtBoB,EAAYrL,KAAKb,MAAMmM,YAAYD,UACnC2F,EAAQhR,KAAKgR,MACbC,EAASjR,KAAKiR,OACdC,EAAUlR,KAAKkR,Q,UAEfzB,EAASiX,SAASzpB,EAAUgN,EAAUoB,EAAW2F,EAAOC,EACtCC,EAASZ,G,eAEjCtQ,KAAK8lB,UAAY,IAAI1pB,KACrBG,OAAOoqB,eAAiB,K,UAElBvsB,EAAMa,gBAAgB+E,KAAM,CAChCsQ,UAAWA,EACXyV,oBAAoB,EACpBC,OAAO,EACPC,aAAa,EACbC,gBAAgB,I,gLAIL/lB,G,iFACP/F,EAAMa,gBAAgB+E,KAAM,CAChC+lB,oBAAoB,EACpBE,aAAa,I,uBAGTjmB,KAAK4mB,kBAAkB5mB,KAAKV,MAAMgR,W,wLAGlBnQ,G,iFAChB/F,EAAMa,gBAAgB+E,KAAM,CAChC+lB,oBAAoB,EACpBG,gBAAgB,I,uBAGZlmB,KAAK4mB,mBAAmB5mB,KAAKV,MAAMgR,W,uLAGpBnQ,G,iFACf/F,EAAMa,gBAAgB+E,KAAM,CAChCmmB,gBAAiBnmB,KAAKV,MAAM6mB,iB,+IAIdhmB,GAChBH,KAAKgR,MAAQ7Q,EAAMG,OAAOC,Q,yCAGTJ,GACjBH,KAAKiR,OAAS9Q,EAAMG,OAAOC,Q,mFAGHsmB,G,oEACxB7mB,KAAKkR,QAAU2V,GAEZ7mB,KAAKV,MAAM0mB,M,gCACN5rB,EAAMa,gBAAgB+E,KAAM,CAChCgmB,OAAO,I,OAGTzpB,OAAOoqB,eAAiBlB,G,oJAK1BzlB,KAAKtF,SAAU,I,+BAIf,IAAIosB,EAAY9mB,KAAKV,MAAM0mB,MAAQ,wBAA0B,iBAC7Dc,GAAa9mB,KAAK8lB,UAAUiB,iBAE5B,IAAMC,EAAoBhnB,KAAKV,MAAMgR,UAAY,YAAc,WAC3D2W,EAAkB,iCAClBC,EAAqB,iCAKzB,OAHGlnB,KAAKV,MAAM2mB,cAAagB,GAAmB,sBAC3CjnB,KAAKV,MAAM4mB,iBAAgBgB,GAAsB,sBAGlD,oCACE,kBAAC,IAAD,CAAQC,MAAOnnB,KAAKV,MAAM0mB,MAClBjrB,QAAQ,8DAEdiF,KAAKV,MAAM6mB,gBACX,kBAAC,GAAD,CAAYlmB,aAAcD,KAAKsmB,iBACnBrc,SAAUjK,KAAKb,MAAM8K,SAAUvF,QAAS1E,KAAKb,MAAMuF,QACnD4G,YAAatL,KAAKb,MAAMmM,cAEtC,0BAAMxK,UAAU,+CACd,2BAAOA,UAAU,kBAAkBK,KAAK,QAAQD,KAAK,OAC9CsX,aAAcxY,KAAKgR,MAAOlD,YAAY,QACtCxE,SAAUtJ,KAAKumB,oBAEtB,4BAAQplB,KAAK,SAASC,GAAG,cAAckI,SAAUtJ,KAAKwmB,mBAC9ChO,aAAcxY,KAAKiR,QACzB,4BAAQ1Q,MAAOkJ,EAAYC,OAAOnJ,OAAlC,UACA,4BAAQA,MAAOkJ,EAAYI,SAAStJ,OAApC,YACA,4BAAQA,MAAOkJ,EAAYK,cAAcvJ,OAAzC,sBACA,4BAAQA,MAAOkJ,EAAYM,SAASxJ,OAApC,aAGF,kBAAC,GAAD,CAAY4d,eAAgBne,KAAKkR,QACrB5H,SAAUtJ,KAAKymB,sBAC3B,uBAAG3lB,UAAU,wBAAwBgmB,GACrC,yBAAKhmB,UAAU,4BACb,2BAAOA,UAAWmmB,EAAiB/lB,KAAK,SAASX,MAAM,OAChDiB,QAASxB,KAAKomB,SACd/kB,SAAUrB,KAAKV,MAAMymB,qBAE5B,2BAAOjlB,UAAWomB,EAAoBhmB,KAAK,SACpCX,MAAOymB,EAAmBxlB,QAASxB,KAAKqmB,kBACxChlB,SAAUrB,KAAKV,MAAMymB,sBAE9B,yBAAKjlB,UAAU,oBACb,4BAAQI,KAAK,SAASJ,UAAU,uCACxBU,QAASxB,KAAKsmB,kBADtB,wC,GAjJe5kB,aCWZ0lB,G,uKApBX,IAAM/pB,EAAO2C,KAAKb,MAAM9B,KAClByS,EAAqB9F,EAAY4H,sBAAsBvU,GAE7D,OACE,yBAAKyD,UAAU,0BACb,yBAAKA,UAAU,sCACb,4BACIgP,GAEJ,uBAAGhP,UAAU,qBAAqBzD,EAAKyN,aACvC,uBAAGhK,UAAU,iBAAiB8D,KAAMvH,EAAKgqB,KAAM/mB,OAAO,SACnDgnB,IAAI,uBADP,sB,GAZgB5lB,a,qDCQ1B,WAAqCvC,EAAOgH,GAA5C,2BAAAC,EAAA,sEACyBtJ,EAAYwG,cADrC,cACQrG,EADR,OAEQgN,EAAW9K,EAAMsZ,MAAMtS,OAAO8D,SAC9BmB,EAAYjM,EAAMsZ,MAAMtS,OAAOiF,UAC/BjB,EAAchL,EAAMsZ,MAAMtS,OAAOgE,YACjCkB,EALR,UAKuBD,EALvB,YAKoCjB,GALpC,SAO4BH,EAAYud,eAAetd,EAAUoB,GAPjE,cAOQC,EAPR,iBAQyBmE,EAAS+X,YAAYvqB,EAAUgN,EAAUoB,GARlE,eAQQua,EARR,yBAUS,CACLta,YAAaA,EACbsa,SAAUA,IAZd,6C,sBA2CetgB,U,gDACU,KAAM,gBA5B/B,YAAiD,IAA7BmB,EAA4B,EAA5BA,WAAYpJ,EAAgB,EAAhBA,KAAM+B,EAAU,EAAVA,OAC9B6K,EAAWxD,EAAWgS,MAAMtS,OAAO8D,SAEzC,OAAG7K,IAAW8F,EAAUG,UAEpB,yBAAKvE,UAAU,sBACb,gDAIE1B,IAAW8F,EAAUC,QAEzB,kBAAC,EAAD,MAKA,oCACE,kBAAC,GAAD,CAAa9H,KAAMA,EAAKiO,YAAarB,SAAUA,IAC/C,kBAAC,GAAD,CAAcqB,YAAajO,EAAKiO,YAClBsa,SAAUvoB,EAAKuoB,SAAU3b,SAAUA,EACnCvF,QAAS+B,EAAW/B,cChC3B+iB,G,+IAbSxqB,EAAUyqB,EAAYzd,EAAUoB,EAAWsc,G,8EACzDtgB,EAAU,CACdpK,SAAUA,EACVyqB,WAAYA,EACZzd,SAAUA,EACVoB,UAAWA,EACXsc,YAAaA,G,SAGF9gB,EAAIyB,QAAQ,cAAejB,G,gKC8B7BugB,OAtCf,YAAqE,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,aAAgB,EACxCniB,mBAASiiB,GAD+B,mBAC5DG,EAD4D,KACrDC,EADqD,OAEtCriB,mBAASkiB,GAF6B,mBAE5D9gB,EAF4D,KAEpDkhB,EAFoD,KAI9DC,EAAkB,cACnBnhB,EAAS,IACVmhB,GAAmB,sBAGrB,IAAIC,EAAY,uCAAG,sBAAAhiB,EAAA,sEACMtJ,EAAYwG,cADlB,wCAGf/G,OAAO8G,sBAHQ,0BAOd2D,EAAS,GACVkhB,EAAU,GACVD,EAASD,EAAQ,GACjBD,EAAa,KAGbG,EAAU,GACVD,EAASD,EAAQ,GACjBD,EAAa,IAfE,2CAAH,qDAmBhB,OACE,yBAAKjnB,UAAU,gBACb,4BAAQA,UAAWqnB,EAAiB3mB,QAAS4mB,GAC3C,0BAAMtnB,UAAU,sBAChB,0BAAMA,UAAU,sBAAsBknB,M,OCY/BK,OAvCf,YAAmC,IAAThrB,EAAQ,EAARA,KAClB6T,EAAUzJ,KAAKoe,MAAMxoB,EAAK6T,SAC1BoX,EAAmB,IAAIlsB,KAAKiB,EAAKwU,YAAakV,iBAC9C1V,EAAcrH,EAAYsH,uBAAuBjU,EAAK4T,QAExD8W,EAAY,uCAAG,WAAOJ,GAAP,qBAAAvhB,EAAA,sEACMtJ,EAAYwG,cADlB,cACXrG,EADW,OAEXyqB,EAAarqB,EAAKJ,SAClBgN,EAAW5M,EAAK4M,SAChBoB,EAAYhO,EAAK6N,UAJN,SAMXuc,GAASc,SAAStrB,EAAUyqB,EAAYzd,EAAUoB,EAAWsc,GANlD,2CAAH,sDAShB,OACE,yBAAK7mB,UAAU,uCACb,wBAAIA,UAAU,wBACZ,0BAAMA,UAAS,gDAA2CuQ,IACxD,0BAAMvQ,UAAU,mDAEjBzD,EAAK2T,OAER,uBAAGlQ,UAAU,qBAAb,cACa,kBAAC,IAAD,CAAMA,UAAU,WAAW2B,GAAE,iBAAYpF,EAAKJ,WACtDI,EAAKJ,WAGV,yBAAK6D,UAAU,oBACb,kBAAC,GAAD,CAAmBoQ,QAASA,EAAS9P,GAAG,mBAAmBigB,UAAU,KAEvE,uBAAGvgB,UAAU,qBAAb,kBACkBwnB,GAElB,kBAAC,GAAD,CAAaT,aAAcxqB,EAAK+S,UAAW0X,cAAezqB,EAAKsqB,YAClDI,aAAcA,MCdlBS,G,sJA1BgBd,EAAYzd,EAAUoB,G,8EAC3ChE,EAAU,CACdqgB,WAAYA,EACZzd,SAAUA,EACVoB,UAAWA,G,SAGAxE,EAAIqB,QAAQ,WAAYb,G,4NAGXpK,EAAUyqB,EAAYzd,EAAUoB,EAChCod,EAAaC,EAASxX,G,8EAC1C7J,EAAU,CACdpK,SAAUA,EACVyqB,WAAYA,EACZzd,SAAUA,EACVoB,UAAWA,EACXod,YAAaA,EACbC,QAASA,EACTxX,QAASzJ,KAAKC,UAAUwJ,I,SAGbrK,EAAIkK,SAAS,WAAY1J,G,sKC8B3BshB,OAlDf,YAA6E,IAA1DtrB,EAAyD,EAAzDA,KAAMurB,EAAmD,EAAnDA,cAAeC,EAAoC,EAApCA,kBAAmBC,EAAiB,EAAjBA,cAAiB,EACpCljB,mBAAS,MAD2B,mBAClEyC,EADkE,KACtD0gB,EADsD,KAG1ExiB,qBAAU,WACLsiB,GACDA,EAAkBE,KAEnB,CAACF,IAEJ,IAAMznB,EAAK/D,EAAK2rB,UACVjX,EAAiB1U,EAAKJ,SACtBgsB,EAAgB7uB,EAAM8uB,iBAAiB7rB,EAAK8rB,cAC5CjY,EAAUzJ,KAAKoe,MAAMxoB,EAAK6T,SAEhC,OACE,yBAAK9P,GAAIA,EAAIN,UAAU,8CAEnB8nB,GACA,0BAAM9nB,UAAU,kCACd,kBAAC,IAAD,CAAMA,UAAU,WAAW2B,GAAE,iBAAYmmB,IACtCA,GAEH,0BAAM9nB,UAAU,gBAIlBuH,GACA,yBAAKvH,UAAU,yBAAyBqI,IAAKd,EAAYe,IAAI,WAE/D,yBAAKtI,UAAU,gCACb,kBAAC,IAAD,CAAMA,UAAU,WAAW2B,GAAE,iBAAYsP,IACtCA,GAEH,0BAAMjR,UAAU,6BACbmoB,GAEH,kBAAC,GAAD,CAAmB7nB,GAAIA,EAAK,IAAK8P,QAASA,EACvBmQ,UAAU,IAC7B,yBAAKvgB,UAAU,mCACb,0BAAMA,UAAU,sBAChB,4BAAQA,UAAU,2CACVU,QAASsnB,GADjB,aCPKM,OAnCf,YAAuF,IAAhEC,EAA+D,EAA/DA,eAAgBC,EAA+C,EAA/CA,YAAanL,EAAkC,EAAlCA,eAAgBoL,EAAkB,EAAlBA,eAAkB,EACtC3jB,mBAASuY,GAD6B,mBAC5EqL,EAD4E,KAC5DC,EAD4D,OAEhC7jB,oBAAS,GAFuB,mBAE5E8jB,EAF4E,KAEzDC,EAFyD,KAW9EC,EAAgB,uCAAG,sBAAAxjB,EAAA,6DACvBujB,GAAqB,GADE,SAEDL,EAAYE,GAFX,eAIrBG,GAAqB,GAJA,2CAAH,qDAQhBE,GAAaL,GAAiD,IAA/BA,EAAe,GAAGrP,EAAEne,OAEzD,OACE,yBAAK8E,UAAU,uBACb,kBAAC,GAAD,CAAYyjB,cAAc,EAAMpG,eAAgBqL,EACpClgB,SApBW,SAACud,GAC1B4C,EAAkB5C,GACf0C,GACDA,EAAe1C,MAkBf,yBAAK/lB,UAAU,aACb,2BAAOI,KAAK,SAASX,MAAM,SAASO,UAAU,iCACvCU,QAAS6nB,IAChB,2BAAOnoB,KAAK,SAASX,MAAM,UAAUc,SAAUwoB,GAAaH,EACrD5oB,UAAU,iCAAiCU,QAASooB,OCoEpDE,OA9Ff,YA2CE,IA3CqE,IAAhDzsB,EAA+C,EAA/CA,KAAM0sB,EAAyC,EAAzCA,uBAAwBjB,EAAiB,EAAjBA,cAAiB,EAC1BljB,oBAAS,GADiB,mBAC5DokB,EAD4D,KAC9CC,EAD8C,KAE9DC,EAAkBvkB,iBAAO,CAC7BuL,QAAS,KACTwX,QAAS,KACTE,cAAe,OAWXuB,EAAiB,uCAAG,sBAAA/jB,EAAA,sEACX0iB,EACXoB,EAAgB5jB,QAAQ4K,QACxB7T,EAAK2rB,UACLkB,EAAgB5jB,QAAQoiB,SAJF,mFAAH,qDAQjB0B,EAAqB,SAAC1B,EAASE,GACnC,6BAAO,sBAAAxiB,EAAA,sEACkBtJ,EAAYwG,cAD9B,wCAGH/G,OAAO8G,sBAHJ,0BAOL6mB,EAAgB5jB,QAAQoiB,QAAUA,EAClCwB,EAAgB5jB,QAAQsiB,cAAgBA,EACxCqB,GAAgB,GATX,4CAaLI,EAAiB,GACjBC,EAAiB,gBACjBjtB,EAAK2rB,UAAa3rB,EAAKJ,UAGnBlB,EAAI,EAAGA,EAAIsB,EAAKktB,QAAQvuB,OAAQD,IAAK,CAC3C,IAAMyuB,EAAQntB,EAAKktB,QAAQxuB,GACrB6sB,EAAgB0B,EAAkBE,EAAM9B,SACxCI,EAAgBsB,EAAmBI,EAAMxB,UAAWwB,EAAMvtB,UAC1D4rB,EAAoBkB,EAAuBS,EAAMvtB,UAEvDotB,EAAe/d,KACb,wBAAI/K,IAAKxF,EAAG+E,UAAU,iCACpB,kBAAC,GAAD,CAASzD,KAAMmtB,EAAO5B,cAAeA,EAC5BC,kBAAmBA,EACnBC,cAAeA,MAG5BwB,EAAkBE,EAAMxB,WAAawB,EAAMvtB,SAG7C,IAAM2rB,EAAgBsB,EAAgB5jB,QAAQsiB,cACxC6B,EACJ,yBAAK3pB,UAAU,8BACb,0BAAMA,UAAU,kCACd,kBAAC,IAAD,CAAMA,UAAU,WAAW2B,GAAE,iBAAYmmB,IACtCA,GAEH,0BAAM9nB,UAAU,gBAElB,wBAAIA,UAAU,iCACZ,kBAAC,GAAD,CAAauoB,eA7DQ,WACzBY,GAAgB,IA6DCV,eA1DU,SAAC1C,GAC5BqD,EAAgB5jB,QAAQ4K,QAAU2V,GA0DjByC,YAAaa,EACbhM,eAAgB+L,EAAgB5jB,QAAQ4K,YAKrDwZ,EAA2BN,EAC/B/sB,EAAK2rB,UAAW3rB,EAAKJ,UAEjB0tB,EAA+BZ,EAAuB1sB,EAAKJ,UAEjE,OACE,oCACE,kBAAC,GAAD,CAASI,KAAMA,EAAMyrB,cAAe4B,EAC3B7B,kBAAmB8B,IAC5B,wBAAI7pB,UAAU,2BACVupB,EACAL,GAAgBS,KCjDXG,OAzCf,YAA0C,IAAhBtB,EAAe,EAAfA,YAAe,EACG1jB,oBAAS,GADZ,mBAC/BokB,EAD+B,KACjBC,EADiB,KAEjCY,EAAgBllB,iBAAO,MACvBmlB,EAAWC,IAAMC,YAEjBC,EAAmB,uCAAG,WAAO9qB,GAAP,SAAAiG,EAAA,sEACHtJ,EAAYwG,cADT,cAOxB2mB,GAAgB,IAJhBa,EAASxkB,QAAQ4kB,OACjB3uB,OAAO8G,uBAJiB,2CAAH,sDAmBzB,OAAI2mB,EAUA,kBAAC,GAAD,CAAaX,eAlBU,SAAClpB,GAC1B8pB,GAAgB,IAiBmCX,YAAaA,EACjDnL,eAAgB0M,EAAcvkB,QAC9BijB,eAhBM,SAAC1C,GACtBgE,EAAcvkB,QAAUugB,KAKtB,yBAAK/lB,UAAU,uBACb,2BAAOI,KAAK,OAAO4M,YAAY,qBACxBD,QAASod,EAAqBE,IAAKL,M,OC5BlD,SAASM,GAAmBjsB,GAC1B,IAAMuoB,EAAavoB,EAAMsZ,MAAMtS,OAAOklB,cAChCphB,EAAW9K,EAAMsZ,MAAMtS,OAAO8D,SAC9BmB,EAAYjM,EAAMsZ,MAAMtS,OAAOiF,UAC/BjB,EAAchL,EAAMsZ,MAAMtS,OAAOgE,YAGvC,MAAO,CAAEud,EAAYzd,EAFN,UAAMmB,EAAN,YAAmBjB,I,8CAKpC,WAA+BhL,EAAOgH,GAAtC,yBAAAC,EAAA,+DAC8CglB,GAAmBjsB,GADjE,mBACUuoB,EADV,KACsBzd,EADtB,KACgCoB,EADhC,cAEyBmd,GAAY8C,gBACjC5D,EAAYzd,EAAUoB,GAH1B,cAEQkgB,EAFR,yBAMS,CACLA,SAAUA,IAPd,4C,oEAWA,WAA8BpsB,EAAOqsB,EAAmB/C,EAAaC,GAArE,2BAAAtiB,EAAA,sEACyBtJ,EAAYwG,cADrC,UACQrG,EADR,8BAIIV,OAAO8G,sBAJX,mCAQ8C+nB,GAAmBjsB,GARjE,mBAQUuoB,EARV,KAQsBzd,EARtB,KAQgCoB,EARhC,cAS6Bmd,GAAYiD,eACrCxuB,EAAUyqB,EAAYzd,EAAUoB,EAAWod,EAAaC,EAAS8C,GAVrE,cASQE,EATR,OAaEvsB,EAAMuF,QAAQ4H,KACZ,iBAAUob,EAAV,YAAwBzd,EAAxB,YAAoCoB,EAAUpG,QAAQ,IAAK,MAA3D,yBACkBymB,IAftB,mBAkBS,GAlBT,6C,sBAqBeC,OCrCf,SAAgCC,EAAaC,GAgH3C,OAAOvmB,EAAuBsmB,EAAa,KAAM,MA/GjD,YAAyD,IAA7BnlB,EAA4B,EAA5BA,WAAYpJ,EAAgB,EAAhBA,KAAM+B,EAAU,EAAVA,OACxC1E,EAAUiL,kBAAO,GAErBY,qBAAU,WACR,IAAMulB,EAAYhkB,IAAY+d,MAAMtpB,OAAOoI,SAASiI,QACpD,GAAGkf,EAAUC,cAAe,CAC1B,IAAMC,EAAiBrQ,SAASC,eAAekQ,EAAUC,eACtDC,GACDA,EAAeC,qBAKrB1lB,qBAAU,WAER,OADA7L,EAAQ4L,SAAU,EACX,WACL5L,EAAQ4L,SAAU,MAItB,IAAMgjB,EAAW,uCAAG,WAAOkC,GAAP,SAAAplB,EAAA,sEACLylB,EAAWplB,EAAY+kB,EAAmB,KAAM,MAD3C,mFAAH,sDAIX1C,EAAa,uCAAG,WAAO0C,EAAmB/C,EAAaC,GAAvC,SAAAtiB,EAAA,sEACPylB,EAAWplB,EAAY+kB,EAAmB/C,EAAaC,GADhD,mFAAH,0DAInB,GAAGtpB,IAAW8F,EAAUC,SAAWsB,EAAWylB,UAC5C,OAAO,KAGP,IADG,EAyCCC,EAxCAC,EAAc,GACdC,EAA0B,GAC1BtC,EAAyB,GAEvBuC,EAAiB,uCAAG,WAAOrvB,GAAP,qBAAAmJ,EAAA,sEACD4B,EAAS0Q,YAAYzb,GAAU,GAD9B,OAClBqb,EADkB,OAExB8T,EAAYnvB,GAAYqb,EAASjQ,WAFT,cAGFgkB,EAAwBpvB,IAHtB,IAGxB,IAAI,EAAJ,qBAAUsQ,EAA+C,QACpD7S,EAAQ4L,SACTiH,EAAS+K,EAASjQ,YALE,yEAAH,sDAUjBkkB,EAAyB,SAACtvB,GAC9BmvB,EAAYnvB,GAAY,KACxBovB,EAAwBpvB,GAAY,GACpC8sB,EAAuB9sB,GAAY,SAACsQ,GAC/B6e,EAAYnvB,IAAavC,EAAQ4L,QAClCiH,EAAS6e,EAAYnvB,IAGrBovB,EAAwBpvB,GAAUqP,KAAKiB,IAG3C+e,EAAkBrvB,IAGdsuB,EAAWluB,EAAKkuB,SA7BnB,cA8BkBA,GA9BlB,IA8BH,IAAI,EAAJ,qBAA+B,CAAC,IAAtBiB,EAAqB,QACxBA,EAAQvvB,YAAYmvB,GACvBG,EAAuBC,EAAQvvB,UAFJ,oBAIVuvB,EAAQjC,SAJE,IAI7B,IAAI,EAAJ,qBAAoC,CAAC,IAA3BC,EAA0B,QAC7BA,EAAMvtB,YAAYmvB,GACrBG,EAAuB/B,EAAMvtB,WANJ,gCA9B5B,8BA0CH,GAAuB,IAApBsuB,EAASvvB,OACVmwB,EACE,uBAAGrrB,UAAU,sBAAb,kCAKC,CAEH,IADA,IAAI2rB,EAAmB,GACf1wB,EAAI,EAAGA,EAAIwvB,EAASvvB,OAAQD,IAAK,CACvC,IAAMywB,EAAUjB,EAASxvB,GACzB0wB,EAAiBngB,KACf,wBAAI/K,IAAKxF,EAAG+E,UAAU,gCACpB,kBAAC,GAAD,CAAazD,KAAMmvB,EAAS1D,cAAeA,EAC9BiB,uBAAwBA,MAK3CoC,EACE,wBAAIrrB,UAAU,4BACV2rB,GAKR,OACE,yBAAK3rB,UAAU,sCACb,wBAAIA,UAAU,kBAAd,YAGA,kBAAC,GAAD,CAAgBwoB,YAAaA,IAC3B6C,MDrEGR,E,oJEpCf,WAAqCxsB,EAAOgH,GAA5C,2BAAAC,EAAA,6DACQilB,EAAgBlsB,EAAMsZ,MAAMtS,OAAOklB,cACnCphB,EAAW9K,EAAMsZ,MAAMtS,OAAO8D,SAC9BmB,EAAYjM,EAAMsZ,MAAMtS,OAAOiF,UAC/BjB,EAAchL,EAAMsZ,MAAMtS,OAAOgE,YACjCkB,EALR,UAKuBD,EALvB,YAKoCjB,GALpC,SAO4BH,EAAYud,eAAetd,EAAUoB,GAPjE,cAOQC,EAPR,iBAQyBmE,EAAS+X,YAAY6D,EAAephB,EAAUoB,GAAW,GARlF,eAQQua,EARR,yBAUS,CACLta,YAAaA,EACbsa,SAAUA,IAZd,6C,sBAkDetgB,U,gDACU,KAAM,gBAnC/B,YAAmD,IAA7BmB,EAA4B,EAA5BA,WAAYpJ,EAAgB,EAAhBA,KAAM+B,EAAU,EAAVA,OAChC6K,EAAWxD,EAAWgS,MAAMtS,OAAO8D,SACnCyiB,IAAsBttB,IAAW8F,EAAUE,MAC3CunB,EACJ,kBAACC,GAAD,CAAoBnU,MAAOhS,EAAWgS,MAAOyT,UAAWQ,EACpChoB,QAAS+B,EAAW/B,QAASnD,IAAI,aAGvD,OAAGnC,IAAW8F,EAAUG,UAEpB,yBAAKvE,UAAU,sBACb,8EAIE1B,IAAW8F,EAAUC,QAEzB,oCACE,kBAAC,EAAD,MACEwnB,GAMJ,oCACE,kBAAC,GAAD,CAAatvB,KAAMA,EAAKiO,YAAarB,SAAUA,IAC/C,kBAAC,GAAD,CAAgB5M,KAAMA,EAAKuoB,WACzB+G,MC9BKE,OApBf,YAAuE,IAA3Ctf,EAA0C,EAA1CA,SAAUuf,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,YAC/CC,EAAoBD,EAAc,KAAO,qBAE/C,OACE,yBAAKjsB,UAAU,gCAEXisB,GACA,2BAAO/rB,QAAQ,YAAf,YAIF,kBAAC,EAAD,CAAcG,KAAK,WAAWC,GAAG,qBACnBwL,OAAQ5E,EAASilB,eAAgBzmB,UAAU,WAC3CqG,SAAS,EAAMiB,YAAakf,EAC5B/f,kBAAmB6f,EACnBvf,SAAUA,M,OCoCf2f,OAjDf,YAA0D,IAAD,EAAnClZ,EAAmC,EAAnCA,YAAamZ,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,MACxCC,EAAe,IAAIjxB,KAAK+wB,GAAcpG,iBAExCuG,EAAW,GACX/Z,EANY,IAMHS,EAAc,GAAiB,EAJW,cAKrCoZ,GALqC,IAKvD,IAAI,EAAJ,qBAAyB,CAAC,IAAhBG,EAAe,QACnBvkB,EAAwBukB,EAAKtkB,aAAe,EAC9C,0BAA4B,GAC9BD,GAAyB,4BAEzBskB,EAAShhB,KACP,wBAAI/K,IAAKgS,GACP,4BAAKA,GACL,wBAAIzS,UAAU,wBACZ,kBAAC,IAAD,CAAMA,UAAU,WAAW2B,GAAE,iBAAY8qB,EAAKtwB,WAC3CswB,EAAKtwB,WAGV,wBAAI6D,UAAWkI,GAAwBukB,EAAKtkB,gBAGhDsK,KArBqD,8BAwBvD,OACE,yBAAKzS,UAAU,eACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,2BACb,+BACE,+BACE,4BACE,iCACA,wBAAIA,UAAU,wBAAd,YACA,wBAAIA,UAAU,4BAAd,kBAGJ,+BACGwsB,MAKT,0BAAMxsB,UAAU,4BAAhB,mBACmBusB,K,8CCxCzB,WAAwBluB,EAAOgJ,GAA/B,eAAA/B,EAAA,sEAC0B4B,EAASwlB,SAASrlB,GAD5C,cACQslB,EADR,yBAES,CACLA,UAAWA,IAHf,4C,sBAwDenoB,U,gDACH,EAAG,gBAlDf,YAA2E,IAAtDmB,EAAqD,EAArDA,WAAYpJ,EAAyC,EAAzCA,KAAM6I,EAAmC,EAAnCA,SAAU9G,EAAyB,EAAzBA,OAAQyG,EAAiB,EAAjBA,cACnD6nB,EAAkB,SAACzwB,GACrBwJ,EAAW/B,QAAQ4H,KAAnB,iBAAkCrP,KAG9BwwB,EAAYpwB,EAAOA,EAAKowB,UAAY,KAE1C,GAAGruB,IAAW8F,EAAUG,UACtB,OACE,yBAAKvE,UAAU,sBAAf,mBAKC,GAAG1B,IAAW8F,EAAUC,QAC3B,OACE,oCACE,wBAAIrE,UAAU,kBAAd,oBAGA,kBAAC,GAAD,CAAkByM,SAAUmgB,IAC5B,yBAAK5sB,UAAU,gBACb,kBAAC,EAAD,QAMN,IAAM8W,EACJ,kBAAC,GAAD,CAAW5D,YAAanO,EAAe0K,WAAYkd,EAAUld,WAClDhD,SAAUrH,IAGvB,OACE,oCACE,wBAAIpF,UAAU,kBAAd,oBAGA,kBAAC,GAAD,CAAkByM,SAAUmgB,IAC5B,yBAAK5sB,UAAU,gBACb,kBAAC,GAAD,CAAYkT,YAAanO,EAAeunB,MAAOK,EAAUL,MAC7CD,YAAaM,EAAUN,cACjCvV,O,uDCjDZ,WAAiCzY,EAAOgH,GAAxC,2BAAAC,EAAA,yDACQnJ,EAAWkC,EAAMlC,SACjBgN,EAAW9K,EAAM8K,SACjBmB,EAAYjM,EAAMiM,UAClBC,EAAYlM,EAAMkM,UAClBlD,EAAOhJ,EAAMgJ,MACEhJ,EAAMoX,aAN7B,iCAUiB9G,EAASke,mBAAmBxlB,GAV7C,OAUI9B,EAVJ,gDAaiBoJ,EAASme,kBACpB3wB,EAAUgN,EAAUmB,EAAWC,EAAWlD,GAdhD,QAaI9B,EAbJ,gCAiBiCvJ,EAAYwG,cAjB7C,eAiBQ6O,EAjBR,sDAoBO9L,GApBP,IAqBI8L,iBAAkBA,KArBtB,6C,sBAgFe7M,U,gDACM,KAAM,gBAxD3B,YAAkD,IAC5CoN,EADejM,EAA4B,EAA5BA,WAAYpJ,EAAgB,EAAhBA,KAAM+B,EAAU,EAAVA,OAErC,GAAGA,IAAW8F,EAAUG,UACtBqN,EACE,uBAAG5R,UAAU,sBAAb,wBAKC,GAAG1B,IAAW8F,EAAUC,QAC3BuN,EACE,kBAAC,EAAD,UAGC,CAOH,IANA,IAAMkF,EACJ,kBAAC,GAAD,CAAW5D,YAAavN,EAAW0B,KAAMoI,WAAYlT,EAAKkT,WAC/ChD,SAAU9G,EAAWonB,qBAG9BlX,EAAmB,GACf5a,EAAI,EAAGA,EAAIsB,EAAK2S,MAAMhU,OAAQD,IACpC4a,EAAiBrK,KACf,kBAAC,EAAD,CAAc/K,IAAKxF,EAAGsB,KAAMA,EAAK2S,MAAMjU,GAAImW,eAAe,EAC5CC,iBAAkB9U,EAAK8U,oBAKvCO,EAD6B,IAA5BiE,EAAiB3a,OAEhB,uBAAG8E,UAAU,sBAAb,iDAOA,oCACI8W,EACF,wBAAI9W,UAAU,mBACV6V,GAEFiB,GAMV,OACE,yBAAK9W,UAAU,2BACX4R,M,OC+DOob,OA5If,YAAmC,IAAZppB,EAAW,EAAXA,QACjBonB,EAAYhkB,IAAY+d,MAAMtpB,OAAOoI,SAASiI,QAC9CzE,EAAO2S,OAAOgR,EAAU3jB,OAAS,EAChCA,EAAO,IACVA,EAAO,GAGT,IAAMlL,EAAW6uB,EAAU7uB,UAAY,GACjCgN,EAAW6hB,EAAU7hB,UAAY,GACjCmB,EAAY0gB,EAAU1gB,WAAa,GACnCC,EAAYygB,EAAUzgB,WAAa,GACnCkL,EAAeuV,EAAUjb,OAEzBkd,EAAyB,SAACC,GAC9B,IAAI,IAAM7Y,KAAa6Y,EACK,OAAvBA,EAAQ7Y,UACF2W,EAAU3W,GAGjB2W,EAAU3W,GAAa6Y,EAAQ7Y,GAGnC,IAAM8Y,EAAiBnmB,IAAYJ,UAAUokB,GAC7CpnB,EAAQ4H,KAAR,iBAAuB2hB,KAvBO,EAgEYroB,oBAAS,GAhErB,mBAgE1BsoB,EAhE0B,KAgEVC,EAhEU,KAqE7B5X,GAAgB2X,GACjBC,GAAkB,GAGpB,IAoBMC,EAAc7X,EAAe,oBAAsB,mBACnD8X,EAAuBH,EAAiB,YAC5C,6DAEI1f,IAAsBnD,IAAcD,EAE1C,OACE,yBAAKtK,UAAU,gBACb,wBAAIA,UAAU,kBACXstB,GAEH,4BAAQ5sB,QAvCa,WACvB2sB,GAAmBD,IAsCkB7sB,SAAUkV,EACrCzV,UAAU,sCACfutB,GAEH,yBAAKvtB,UAAU,qBACb,2BAAOE,QAAQ,eAAf,WACA,4BAAQT,MAAOgW,EAAe,SAAW,QAASpV,KAAK,cAC/CmI,SAtCK,SAACnJ,GAClB,IAAMmuB,EAAUnuB,EAAMG,OAAOC,MAE3BwtB,EADa,WAAZO,EACsB,CACrBrxB,SAAU,KACVgN,SAAU,KACVmB,UAAW,KACXC,UAAW,KACXlD,KAAM,KACN0I,OAAQ,GAIa,CACrB1I,KAAM,KACN0I,OAAQ,SAwBN,4BAAQtQ,MAAM,SAAd,cACA,4BAAQA,MAAM,UAAd,YAIF2tB,GACA,yBAAKptB,UAAU,sBACb,0BAAMA,UAAU,aACd,kBAAC,GAAD,CAAkByM,SAxEL,SAACghB,GACtBR,EAAuB,CACrB9wB,SAAUsxB,EACVpmB,KAAM,QAqE4C2kB,gBAAiB7vB,EAC3C8vB,aAAa,IAC/B,kBAAC,EAAD,CAAqB/e,gBAAiB/D,EACjBgE,iBAAkB7C,EAClB8C,iBAAkB7C,EAClB8C,yBAA0BK,EAC1BJ,eAvEQ,SAACnE,EAAUmB,EAAWC,GAC3D0iB,EAAuB,CACrB9jB,SAAUA,EACVmB,UAAWA,EACXC,UAAWA,EACXlD,KAAM,UAmED,4BAAQ3G,QArGG,SAACrB,GACnBA,EAAMC,iBAEN2tB,EAAuB,CACrB5lB,KAAM,KACNlL,SAAU,KACVgN,SAAU,KACVmB,UAAW,KACXC,UAAW,QA6FwBvK,UAAU,qCAAxC,uBAML,kBAAC,GAAD,CAAW7D,SAAUA,EAAUgN,SAAUA,EAAUmB,UAAWA,EACnDC,UAAWA,EAAWlD,KAAMA,EAAMoO,aAAcA,EAChDsX,mBAjGI,SAACW,GACH,IAAZA,IACDA,EAAU,MAGZT,EAAuB,CACrB5lB,KAAMqmB,S,8CC7CZ,WAAkCrvB,EAAOgH,GAAzC,SAAAC,EAAA,sEACeqJ,EAASke,mBAAmB,GAD3C,oF,sBAgEeroB,U,gDACO,KAAM,MA7D5B,YAAiE,EAAtCmB,WAAsC,EAA1BP,SAA2B,IAC5DwM,EAD2CrV,EAAgB,EAAhBA,KAE/C,GAF+D,EAAV+B,OAEjD/B,EAKC,CAEH,IADA,IAAIoxB,EAAgB,GACZ1yB,EAAI,EAAGA,EAAIsB,EAAK2S,MAAMhU,OAAQD,IAAK,CACzC,IAAM2T,EAAOrS,EAAK2S,MAAMjU,GAClB2yB,EAAWjf,EAASiC,qBAAqBhC,GACzCif,EAAclf,EAASmf,mBAAmBlf,GAEhD+e,EAAcniB,KACZ,wBAAI/K,IAAKxF,GACP,kBAAC,IAAD,CAAM+E,UAAU,WACV2B,GAAE,iBAAYiN,EAAKzS,WACtByS,EAAKzS,UAEP,IACD,0BAAM6D,UAAU,0BACf,IACD,kBAAC,IAAD,CAAMA,UAAU,iBAAiB2B,GAAIisB,GAClCC,GAEF,IACD,0BAAM7tB,UAAU,qBAKtB2tB,EAAcniB,KACZ,wBAAI/K,IAAI,QACN,kBAAC,IAAD,CAAMT,UAAU,WAAW2B,GAAG,mBAA9B,aAMJiQ,EACE,yBAAK5R,UAAU,4BACb,4BACI2tB,SAxCR/b,EACE,kBAAC,EAAD,MA6CJ,OACE,yBAAK5R,UAAU,uBACb,yBAAKA,UAAU,yBACb,+CAEF,yBAAKA,UAAU,gCACb4R,M,4BCvBOmc,OA1Bf,WACE,OACE,kBAAC,IAAD,KACE,yBAAK/tB,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,uBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOguB,OAAK,EAAC5qB,KAAK,IAAI7J,UAAWoK,IACjC,kBAAC,IAAD,CAAOqqB,OAAK,EAAC5qB,KAAK,QAAQ7J,UAAWoK,IACrC,kBAAC,IAAD,CAAOqqB,OAAK,EAAC5qB,KAAK,SAAS7J,UAAW00B,KACtC,kBAAC,IAAD,CAAOD,OAAK,EAAC5qB,KAAK,SAAS7J,UAAWyzB,KACtC,kBAAC,IAAD,CAAOgB,OAAK,EAAC5qB,KAAK,mBAAmB7J,UAAW20B,KAChD,kBAAC,IAAD,CAAOF,OAAK,EAAC5qB,KAAK,gDACX7J,UAAW40B,KAClB,kBAAC,IAAD,CAAOH,OAAK,EAAC5qB,KAAK,0DACX7J,UAAW60B,OAGtB,kBAAC,GAAD,UCvBUC,QACW,cAA7B5yB,OAAOoI,SAASyqB,UAEe,UAA7B7yB,OAAOoI,SAASyqB,UAEhB7yB,OAAOoI,SAASyqB,SAAS3W,MACvB,2D,cCXN4W,UAAQC,UAAUC,IAElB5T,SAASnU,KAAKqa,iBAAiB,aAAa,SAAC1hB,GAC3Cwb,SAASnU,KAAK/D,UAAU+rB,IAAI,yBAG9B7T,SAASnU,KAAKqa,iBAAiB,WAAW,SAAC1hB,GACpB,IAAlBA,EAAMsvB,SACP9T,SAASnU,KAAK/D,UAAUisB,OAAO,yBAInCC,IAASC,OACP,kBAAC,GAAD,MACAjU,SAASC,eAAe,SD8GpB,kBAAmBiU,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAj1B,GACLk1B,QAAQl1B,MAAMA,EAAMH,c","file":"static/js/main.1e80c70c.chunk.js","sourcesContent":["import TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\n\nTimeAgo.addDefaultLocale(en);\nconst timeAgo = new TimeAgo('en-US');\n\nclass Utils {\n  static async setStatePromise(component, stateObject) {\n    return new Promise((resolve, reject) => {\n      if(component.mounted !== false) {\n        component.setState(stateObject, () => {\n          resolve();\n        });\n      }\n      resolve();\n    });\n  }\n\n  static isEmpty(object) {\n    for(const property in object) {\n      if(object.hasOwnProperty(property))\n        return false;\n    }\n    return true;\n  }\n\n  static async componentSetError(component, message) {\n    if(component.setError) {\n      await component.setError(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: `Error: ${message}`\n      });\n    }\n  }\n\n  static async componentSetSuccess(component, message) {\n    if(component.setSuccess) {\n      await component.setSuccess(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: '',\n        success: message\n      });\n    }\n  }\n\n  static convertFileToBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        resolve(reader.result);\n      }\n      reader.onerror = (err) => reject(err);\n    });\n  }\n\n  /* Taken from dynamodbUtils.js in backend */\n  static removePrefixZeroes(inputString) {\n    let zeroCount = 0;\n    for(let i = 0; i < inputString.length; i++) {\n      if(inputString[i] !== '0') break;\n      zeroCount++;\n    }\n\n    return inputString.substring(zeroCount, inputString.length);\n  }\n\n  static getTimeAgoString(timestamp) {\n    const timeDate = new Date(timestamp);\n    return timeAgo.format(timeDate);\n  }\n\n  static renderMathJax(selectors) {\n    if(window.MathJax) {\n      window.MathJax.typeset(selectors);\n    }\n  }\n}\n\nexport default Utils;\n","import Utils from '../Utils';\n\nconst MIN_PASSWORD_LENGTH = 6;\n\nclass HeaderUtils {\n  static async checkPasswords(component, password, confirmPassword) {\n    if(password !== confirmPassword) {\n      await Utils.componentSetError(component, \"Your passwords don't match!\");\n      return false;\n    }\n\n    if(password.length < MIN_PASSWORD_LENGTH) {\n      await Utils.componentSetError(component, 'Your password is too short!');\n      return false;\n    }\n\n    return true;\n  }\n}\n\nexport default HeaderUtils;\n","import { Auth } from 'aws-amplify';\n\nclass UserAuthApi {\n  static async getProfile() {\n    try {\n      return await Auth.currentAuthenticatedUser();\n    }\n    catch(err) {\n      // currentAuthenticatedUser() throws this error if the user is not logged in\n      return null;\n    }\n  }\n\n  static async register(username, email, password) {\n    const info = await Auth.signUp({\n      username,\n      password,\n      attributes: {\n        email: email\n      }\n    });\n\n    // I like how Amplify makes this one inconsistently lowercase... lol\n    return info.codeDeliveryDetails.Destination;\n  }\n\n  static async verifyEmail(username, code) {\n    await Auth.confirmSignUp(username, code);\n  }\n\n  static async resendVerificationEmail(username) {\n    const info = await Auth.resendSignUp(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async forgotPassword(username) {\n    const info = await Auth.forgotPassword(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async resetPassword(username, code, password) {\n    await Auth.forgotPasswordSubmit(username, code, password);\n  }\n\n  static async login(username, password) {\n    await Auth.signIn(username, password);\n  }\n\n  static async logout() {\n    await Auth.signOut();\n  }\n\n  static async getUsername() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    return profile.username;\n  }\n\n  static async getAccessToken() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    const currentSession = profile.getSignInUserSession();\n    const accessToken = currentSession.getAccessToken();\n    return accessToken.getJwtToken();\n  }\n}\n\nexport default UserAuthApi;\n","const HeaderState = Object.freeze({\n  LOGIN: 0,\n  RECOVERY_USERNAME: 1,\n  RECOVERY_PASSWORD: 2,\n  RECOVERY_SUCCESS: 3,\n  REGISTER: 4,\n  REGISTER_VERIFY: 5,\n  REGISTER_SUCCESS: 6\n});\n\nexport default HeaderState;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\nimport '../css/RegisterForm.css';\n\nconst USERNAME_MIN_LENGTH = 3;\nconst USERNAME_MAX_LENGTH = 20;\nconst ERROR_TRIGGER_PREFIX = 'PreSignUp failed with error';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const screen = props.unverifiedAccountUsername ?\n                   HeaderState.REGISTER_VERIFY : HeaderState.REGISTER;\n    this.state = {\n      error: '',\n      success: '',\n      username: props.unverifiedAccountUsername,\n      destination: props.unverifiedAccountDestination,\n      screen: screen,\n      loading: false\n    };\n\n    this.close = this.close.bind(this);\n    this.register = this.register.bind(this);\n    this.verifyEmail = this.verifyEmail.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async setError(message) {\n    if(message.startsWith(ERROR_TRIGGER_PREFIX)) {\n      message = message.substring(\n        ERROR_TRIGGER_PREFIX.length, message.length - 1\n      );\n    }\n\n    await Utils.setStatePromise(this, {\n      error: `Error: ${message}`,\n      success: ''\n    });\n  }\n\n  async register(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const email = form.email.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!username || !email || !password || !confirmPassword) {\n      await this.setError('Please fill out all of the fields.')\n      return;\n    }\n\n    if(username.length < USERNAME_MIN_LENGTH || username.length > USERNAME_MAX_LENGTH) {\n      await this.setError(\n        `Your username must be between ${USERNAME_MIN_LENGTH} ` +\n        `and ${USERNAME_MAX_LENGTH} characters!`\n      );\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    await this.setLoading(true);\n    try {\n      const destination = await UserAuthApi.register(username, email, password);\n      Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.REGISTER_VERIFY\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n    await this.setLoading(false);\n  }\n\n  async verifyEmail(event) {\n    event.preventDefault();\n\n    const code = event.target.code.value;\n    await this.setLoading(true);\n    try {\n      await UserAuthApi.verifyEmail(this.state.username, code);\n      Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.REGISTER_SUCCESS\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n    await this.setLoading(false);\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.resendVerificationEmail(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async setLoading(isLoading) {\n    await Utils.setStatePromise(this, {\n      loading: isLoading\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let submitButtonClassName = 'Askd-button';\n    if(this.state.loading) {\n      submitButtonClassName += ' Askd-form-loading';\n    }\n\n    const createAccountForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Create an account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.register}>\n          <label htmlFor=\"register-username\">Username</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 id=\"register-username\" />\n\n          <label htmlFor=\"register-email\">Email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"email\"\n                 id=\"register-email\" />\n\n          <label htmlFor=\"register-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 id=\"register-password\" />\n\n          <label htmlFor=\"register-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 id=\"register-confirm-password\" />\n\n          <input className={submitButtonClassName} type=\"submit\" value=\"Register\"\n                 disabled={this.state.loading} />\n        </form>\n      </div>\n    );\n\n    const verifyEmailForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Verify your email!</h2>\n        <p>\n          You should've received an email at {this.state.destination} with a\n          verification code. If it isn't convenient for you to verify your\n          account now, you may do so later by logging in.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.verifyEmail}>\n          <label htmlFor=\"verification-code\">Verification code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"verification-code\" id=\"verification-code\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className={submitButtonClassName} type=\"submit\" value=\"Submit\"\n                 disabled={this.state.loading} />\n        </form>\n      </div>\n    );\n\n    const emailVerifiedBox = (\n      <div className=\"Register-form Module-popup\">\n        <h2>Verification success!</h2>\n        <p className=\"Module-popup-last\">\n          Your email was successfully verified! Click the 'X' button in the\n          top-right corner to return to the site, and you'll be able to login.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.REGISTER:\n        currentForm = createAccountForm;\n        break;\n      case HeaderState.REGISTER_VERIFY:\n        currentForm = verifyEmailForm;\n        break;\n      case HeaderState.REGISTER_SUCCESS:\n        currentForm = emailVerifiedBox;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\" />\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      username: null,\n      destination: null,\n      loading: false,\n      screen: props.screen || HeaderState.LOGIN\n    }\n\n    this.close = this.close.bind(this);\n    this.login = this.login.bind(this);\n    this.enablePasswordRecovery = this.enablePasswordRecovery.bind(this);\n    this.forgotPassword = this.forgotPassword.bind(this);\n    this.resetPassword = this.resetPassword.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback(false);\n  }\n\n  async login(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const password = form.password.value;\n\n    if(!username || !password) {\n      await Utils.componentSetError(this, \"Please fill out all of the fields.\");\n      return;\n    }\n\n    await this.setLoading(true);\n    try {\n      await UserAuthApi.login(username, password);\n      this.props.exitCallback(true);\n    }\n    catch(err) {\n      if(err.code === 'UserNotConfirmedException') {\n        const destination = await UserAuthApi.resendVerificationEmail(username);\n        await this.props.emailVerificationCallback(username, destination);\n      }\n      else {\n        await Utils.componentSetError(this, err.message);\n      }\n    }\n    await this.setLoading(false);\n  }\n\n  async enablePasswordRecovery(event) {\n    await Utils.setStatePromise(this, {\n      error: '',\n      screen: HeaderState.RECOVERY_USERNAME\n    });\n  }\n\n  async forgotPassword(event) {\n    event.preventDefault();\n\n    const username = event.target.username.value;\n    if(!username) {\n      await Utils.componentsSetError(this, 'Please input your username.');\n      return;\n    }\n\n    await this.setLoading(true);\n    try {\n      const destination = await UserAuthApi.forgotPassword(username);\n\n      await Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.RECOVERY_PASSWORD\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n    await this.setLoading(false);\n  }\n\n  async resetPassword(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const code = form.code.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!code || !password || !confirmPassword) {\n      Utils.componentSetError(this, 'Please fill out all of the fields.');\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    await this.setLoading(true);\n    try {\n      await UserAuthApi.resetPassword(this.state.username, code, password);\n\n      await Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.RECOVERY_SUCCESS\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n    await this.setLoading(false);\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.forgotPassword(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async setLoading(isLoading) {\n    await Utils.setStatePromise(this, {\n      loading: isLoading\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let submitButtonClassName = 'Askd-button';\n    if(this.state.loading) {\n      submitButtonClassName += ' Askd-form-loading';\n    }\n\n    const loginForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Login to your account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.login}>\n          <label htmlFor=\"login-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"login-username\" id=\"login-username\" />\n\n          <label htmlFor=\"login-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"login-password\" id=\"login-password\" />\n\n          <button type=\"button\" onClick={this.enablePasswordRecovery}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Forgot your password?\n          </button>\n\n          <input className={submitButtonClassName} type=\"submit\" value=\"Login\"\n                 disabled={this.state.loading} />\n        </form>\n      </div>\n    );\n\n    const recoveryUsernameForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          Please provide your username or email, so that you can reset your\n          password via an emailed confirmation code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.forgotPassword}>\n          <label htmlFor=\"reset-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"reset-username\" id=\"reset-username\" />\n\n          <input className={submitButtonClassName} type=\"submit\" value=\"Submit\"\n                 disabled={this.state.loading} />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          You should've received an email at { this.state.destination } with a\n          verification code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.resetPassword}>\n          <label htmlFor=\"reset-code\">Code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"reset-code\" id=\"reset-code\" />\n\n          <label htmlFor=\"reset-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"reset-password\" id=\"reset-password\" />\n\n          <label htmlFor=\"reset-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 key=\"reset-confirm-password\" id=\"reset-confirm-password\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className={submitButtonClassName} type=\"submit\" value=\"Submit\"\n                 disabled={this.state.loading} />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordSuccess= (\n      <div className=\"Register-form Module-popup\">\n        <h2>Password reset success!</h2>\n        <p>\n          Your password has been reset successfully. You'll now be able to\n          login again.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.LOGIN:\n        currentForm = loginForm;\n        break;\n      case HeaderState.RECOVERY_USERNAME:\n        currentForm = recoveryUsernameForm;\n        break;\n      case HeaderState.RECOVERY_PASSWORD:\n        currentForm = recoveryPasswordForm;\n        break;\n      case HeaderState.RECOVERY_SUCCESS:\n        currentForm = recoveryPasswordSuccess;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\" />\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/UserMenu.css'\n\nclass UserMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = this.logout.bind(this);\n  }\n\n  async logout() {\n    await UserAuthApi.logout();\n    await this.props.logoutCallback();\n  }\n\n  render() {\n    return (\n      <div className=\"User-menu\">\n        <ol>\n          <li>\n            <Link className=\"Header-menu-button\" onClick={this.props.closeCallback}\n                  to={`/users/${this.props.username}`}>\n                  Your profile\n            </Link>\n          </li>\n          <div className=\"User-menu-divider\"></div>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\">\n              Settings\n            </button>\n          </li>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\" onClick={this.logout}>\n              Logout\n            </button>\n          </li>\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default UserMenu;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport UserMenu from './UserMenu';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nclass HeaderAuth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      showRegisterForm: false,\n      showLoginForm: false,\n      showUserMenu: false,\n      unverifiedAccountUsername: null,\n      unverifiedAccountDestination: null\n    };\n\n    this.refreshUsername = this.refreshUsername.bind(this);\n    this.toggleRegisterForm = this.toggleRegisterForm.bind(this);\n    this.toggleLoginForm = this.toggleLoginForm.bind(this);\n    this.toggleUserMenu = this.toggleUserMenu.bind(this);\n    this.hideUserMenu = this.hideUserMenu.bind(this);\n    this.afterLogin = this.afterLogin.bind(this);\n    this.unverifiedAccount = this.unverifiedAccount.bind(this);\n\n    window.suggestUserRegister = this.toggleRegisterForm;\n  }\n\n  async refreshUsername() {\n    const username = await UserAuthApi.getUsername();\n\n    await Utils.setStatePromise(this, {\n      username: username,\n      showUserMenu: false,\n      unverifiedAccountUsername: null\n    });\n  }\n\n  async componentDidMount() {\n    await this.refreshUsername();\n  }\n\n  async toggleRegisterForm(event) {\n    if(this.state.showRegisterForm) {\n      await Utils.setStatePromise(this, {\n        unverifiedAccountUsername: null,\n        unverifiedAccountDestination: null\n      });\n    }\n\n    await Utils.setStatePromise(this, {\n      showRegisterForm: !this.state.showRegisterForm\n    });\n  }\n\n  async toggleLoginForm(event) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: !this.state.showLoginForm\n    });\n  }\n\n  async toggleUserMenu(event) {\n    await Utils.setStatePromise(this, {\n      showUserMenu: !this.state.showUserMenu\n    });\n  }\n\n  async hideUserMenu(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.classList.contains('Header-menu-button'))\n      return;\n\n    await Utils.setStatePromise(this, {\n      showUserMenu: false\n    });\n  }\n\n  async afterLogin(loggedIn) {\n    await this.toggleLoginForm();\n\n    if(loggedIn)\n      await this.refreshUsername();\n  }\n\n  async unverifiedAccount(username, destination) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: false,\n      showRegisterForm: true,\n      unverifiedAccountUsername: username,\n      unverifiedAccountDestination: destination\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loginButtons = (\n      <div className=\"Header-top-right\">\n        <button className=\"Header-menu-button\" onClick={this.toggleLoginForm}>\n          Login\n        </button>\n        <span className=\"Header-divider\"></span>\n        <button className=\"Header-menu-button\" onClick={this.toggleRegisterForm}>\n          Create an account\n        </button>\n      </div>\n    );\n\n    const loggedInButton = (\n      <div className=\"Header-logged-in\" tabIndex=\"-1\"\n           onBlur={this.hideUserMenu}>\n        <div className=\"Header-top-right\">\n          <button className=\"Header-menu-button\" onClick={this.toggleUserMenu}>\n            { this.state.username }\n          </button>\n        </div>\n        <div className=\"Header-user-menu\">\n          {\n            this.state.showUserMenu &&\n            <UserMenu username={this.state.username}\n                      closeCallback={this.toggleUserMenu}\n                      logoutCallback={this.refreshUsername} />\n          }\n        </div>\n      </div>\n    );\n\n    const topRightButtons = this.state.username ? loggedInButton : loginButtons;\n\n    return (\n      <>\n        {\n          this.state.showRegisterForm &&\n          <RegisterForm exitCallback={this.toggleRegisterForm}\n                        unverifiedAccountUsername=\n                        {this.state.unverifiedAccountUsername}\n                        unverifiedAccountDestination=\n                        {this.state.unverifiedAccountDestination} />\n        }\n        {\n          this.state.showLoginForm &&\n          <LoginForm exitCallback={this.afterLogin}\n                     emailVerificationCallback={this.unverifiedAccount} />\n        }\n        { topRightButtons }\n      </>\n    );\n  }\n}\n\nexport default HeaderAuth;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport HeaderAuth from './HeaderAuth';\nimport '../css/Header.css';\n\nfunction Header() {\n  const path = useLocation().pathname;\n  const big = (path === '/' || path === '/home');\n  const outerClassName = big ? 'Header' : 'Header-small';\n\n  return (\n    <div className={outerClassName}>\n      { big && <h1>cp-notes beta</h1> }\n      <ul>\n        <li>\n          <Link to=\"/home\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/users\">Users</Link>\n        </li>\n        <li>\n          <Link to=\"/notes\">Notes</Link>\n        </li>\n      </ul>\n      <HeaderAuth />\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\n\nclass CpNotes extends Component {\n  componentDidMount() {\n    Utils.renderMathJax();\n  }\n\n  render() {\n    return (\n      <div className=\"Module-description Module-description-centered\">\n        <p>A work-in-progress web application for storing publicly\n        accessible competitive programming notes! Poggers!\n        \\[\\LaTeX\\]</p>\n      </div>\n    );\n  }\n}\n\nexport default CpNotes;\n","import React from 'react';\nimport CpNotes from '../Home/CpNotes';\n\nfunction Home({ history }) {\n  if(window.location.href.includes('?')) {\n    const correctPath = window.location.href.split('?')[1].replaceAll('#', '/');\n    history.replace(correctPath);\n  }\n\n  return (\n    <>\n      <CpNotes />\n    </>\n  );\n}\n\nexport default Home;\n","const LoadState = Object.freeze({\n  LOADING: 0,\n  DONE: 1,\n  NOT_FOUND: 2\n});\n\nexport default LoadState;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport LoadState from '../Enum/LoadState';\n\nfunction CreateLoadingComponent(getData, defaultParams, notFoundErrorName, WrappedComponent) {\n  return function LoadingComponent(props) {\n    let mounted = useRef(true);\n    let [ currentParams, changeCurrentParams ] = useState(defaultParams);\n    let [ info, changeInfo ] = useState(null);\n    let [ componentScreen, changeScreen ] = useState(LoadState.LOADING);\n\n    const loadInfo = async (params) => {\n      changeScreen(LoadState.LOADING);\n\n      try {\n        const data = await getData(props, params);\n        if(mounted.current) {\n          changeInfo(data);\n          changeCurrentParams(params);\n          changeScreen(LoadState.DONE);\n        }\n      }\n      catch(err) {\n        if(err.name === notFoundErrorName) {\n          if(mounted.current) {\n            changeScreen(LoadState.NOT_FOUND);\n          }\n        }\n        else {\n          throw err;\n        }\n      }\n    };\n\n    const location = useLocation();\n    useEffect(() => {\n      mounted.current = true;\n      loadInfo(defaultParams);\n\n      return () => {\n        mounted.current = false;\n      };\n\n      /* An incomplete set of dependencies is actually useful here, since\n         making an API call each time props is updated is too expensive. The\n         actual proper set of dependencies depends on the specific component\n         returned. */\n      // eslint-disable-next-line\n    }, [props.staticKey, location]);\n\n    return (\n      <WrappedComponent otherProps={props} loadInfo={loadInfo} info={info}\n                        screen={componentScreen} currentParams={currentParams} />\n    );\n  };\n}\n\nexport default CreateLoadingComponent;\n","import React from 'react';\nimport '../css/Misc/LoadingSpinner.css';\n\nfunction LoadingSpinner() {\n  return (\n    <div className=\"Loading-spinner\">\n    </div>\n  );\n}\n\nexport default LoadingSpinner;\n","const ApiConstants = Object.freeze({\n  API_ENDPOINT: 'https://qqmeusmrfk.execute-api.us-east-1.amazonaws.com/prod/'\n});\n\nexport default ApiConstants;\n","import queryString from 'query-string';\nimport ApiConstants from './ApiConstants';\nimport UserAuthApi from './UserAuthApi';\n\nclass Api {\n  static createApiError(name, message) {\n    const err = Error(message);\n    err.name = name;\n\n    return err;\n  }\n\n  static async manageResponseError(response) {\n    if(response.status === 400) {\n      const responseJson = await response.json();\n      throw Api.createApiError(responseJson.name, responseJson.message);\n    }\n    else if(response.status !== 200) {\n      throw Error('Request failed!');\n    }\n  }\n\n  static async sendRequestBody(resource, options, method) {\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + resource, {\n      method: method,\n      body: JSON.stringify(options),\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async getJson(resource, options) {\n    const path = `${resource}?${queryString.stringify(options)}`;\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + path, {\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async postJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'POST');\n  }\n\n  static async putJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'PUT');\n  }\n\n  static async deleteJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'DELETE');\n  }\n}\n\nexport default Api;\n","import Api from './Api';\n\nclass UsersApi {\n  static async getUserInfo(username, basicInfoOnly) {\n    const options = {\n      username: username,\n      basicInfoOnly: basicInfoOnly\n    };\n\n    return await Api.getJson('users', options);\n  }\n\n  static async getUsers(page) {\n    const options = {\n      page: page\n    };\n\n    return await Api.getJson('users', options);\n  }\n\n  static async getSearchUsers(searchTerm) {\n    const options = {\n      searchTerm: searchTerm\n    };\n\n    return await Api.getJson('users', options);\n  }\n\n  static async updateUserInfo(username, avatarData) {\n    const options = {\n      username: username,\n      avatarData: avatarData\n    };\n\n    return await Api.putJson('users', options);\n  }\n}\n\nexport default UsersApi;\n","import React, { useState } from 'react';\nimport UsersApi from '../Api/UsersApi';\nimport LoadingSpinner from '../Misc/LoadingSpinner';\nimport Utils from '../Utils';\nimport '../css/UserInfo.css';\n\nfunction UserInfo({ info }) {\n  let [ imageLoading, setImageLoading ] = useState(false);\n  let [ imageSource, setImageSource ] = useState(info.avatarData);\n  let [ error, setError ] = useState('');\n\n  let handleUpload = async (event) => {\n    const file = event.target.files[0];\n    const avatarData = await Utils.convertFileToBase64(file);\n\n    if(file.type !== 'image/png' && file.type !== 'image/jpeg') {\n      setError('Error: You may only choose .png or .jpeg images!');\n      return;\n    }\n\n    try {\n      setImageLoading(true);\n      setError('');\n      await UsersApi.updateUserInfo(info.username, avatarData);\n    }\n    catch(err) {\n      setError('Error: ' + err.message);\n    }\n\n    setImageLoading(false);\n    setImageSource(avatarData);\n  }\n\n  const contributionClassName = info.contribution > 0 ?\n    'Users-table-contributor' : '';\n\n  const imageContent = (\n    <>\n      <img src={imageSource} alt=\"Avatar\" />\n      {\n        info.email &&\n        <>\n          <label htmlFor=\"User-avatar-upload\" tabIndex=\"0\">\n            Change avatar\n          </label>\n          <input id=\"User-avatar-upload\" name=\"avatar\" type=\"file\"\n                 accept=\"image/jpeg, image/png\" onChange={handleUpload} />\n        </>\n      }\n    </>\n  );\n  const avatarContent = imageLoading ? <LoadingSpinner /> : imageContent;\n\n  return (\n    <div className=\"Module-outer-space\">\n      <h2 className=\"Module-heading Username\">{info.username}</h2>\n      <div className=\"User-info\">\n        <div className=\"User-info-info\">\n          {\n            info.email &&\n            <p>\n              <span className=\"icon-envelope\" />\n              Email: {info.email} (only visible to you)\n            </p>\n          }\n          <p className=\"User-info-info-contribution\">\n            <span className=\"icon-thumb_up_alt\" />\n            Contribution:\n            <span className={contributionClassName}>\n              {info.contribution}\n            </span>\n          </p>\n          <p>\n            <span className=\"icon-note-text\" />\n            {`Total notes: ${info.totalNotes}`}\n          </p>\n          <p>\n            <span className=\"icon-account_box\" />\n            Registered: ?\n          </p>\n          { error && <p className=\"User-info-info-error\">{error}</p> }\n        </div>\n        <div className=\"User-info-avatar-outer\">\n          <div className=\"User-info-avatar\">\n            <div className=\"User-info-avatar-box\">\n              { avatarContent }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserInfo;\n","const SolvedState = Object.freeze({\n  SOLVED: { value: 0, text: 'Solved', css: 'solved' },\n  UPSOLVED: { value: 1, text: 'Upsolved', css: 'upsolved' },\n  UPSOLVED_HELP: { value: 2, text: 'Upsolved with help', css: 'upsolved-help' },\n  UNSOLVED: { value: 3, text: 'Unsolved', css: 'unsolved' }\n});\n\nexport default SolvedState;\n","import Api from './Api';\nimport Utils from '../Utils';\nimport SolvedState from '../Enum/SolvedState';\n\nclass ProblemsApi {\n  static getProblemDisplayNameWithoutPlatform(info) {\n    if(info.platform === 'CodeChef') {\n      return `${info.contestCode} ${info.problemCode} - ${info.problemName}`;\n    }\n    if(info.platform === 'TopCoder') {\n      const divisionLevel = 3 - Math.ceil(info.level/3);\n      const problemLevel = (info.level - 1) % 3 + 1;\n      const divisionString = `Division ${divisionLevel} Level ${problemLevel}`;\n      return `${divisionString} - ${info.problemName}`;\n    }\n    return `${info.problemCode} - ${info.problemName}`;\n  }\n\n  static getProblemDisplayName(info) {\n    const afterText = ProblemsApi.getProblemDisplayNameWithoutPlatform(info);\n    return `${info.platform} ${afterText}`\n  }\n\n  static getContestDisplayName(info) {\n    const lowerCaseContestName = info.contestName.toLowerCase();\n    const lowerCasePlatform = info.platform.toLowerCase();\n    if(lowerCaseContestName.includes(lowerCasePlatform)) {\n      return info.contestName;\n    }\n    return `${info.platform} - ${info.contestName}`;\n  }\n\n  static getProblemLetter(info) {\n    if(info.platform === 'Project Euler') {\n      const inflatedProblemLetter = info.problemSk.split('#')[1];\n      return Utils.removePrefixZeroes(inflatedProblemLetter);\n    }\n    return info.problemSk.split('#')[1];\n  }\n\n  static async getContests(platform) {\n    const options = {\n      platform: platform\n    };\n\n    return await Api.getJson('contests', options);\n  }\n\n  static async getProblems(platform, contestId) {\n    const options = {\n      platform: platform,\n      contestId: contestId\n    };\n\n    return await Api.getJson('problems', options);\n  }\n\n  static async getProblemInfo(platform, problemId) {\n    const options = {\n      platform: platform,\n      problemId: problemId\n    };\n\n    let problemInfo = await Api.getJson('problems', options);\n    problemInfo.problemId = problemId;\n    problemInfo.platform = platform;\n\n    return problemInfo;\n  }\n\n  static getSolvedStateText(solvedStateValue) {\n    solvedStateValue = parseInt(solvedStateValue);\n    for(const state in SolvedState) {\n      if(SolvedState[state].value === solvedStateValue) {\n        return SolvedState[state].text;\n      }\n    }\n  }\n\n  static getSolvedStateCssClass(solvedStateValue) {\n    solvedStateValue = parseInt(solvedStateValue);\n    for(const state in SolvedState) {\n      if(SolvedState[state].value === solvedStateValue) {\n        return SolvedState[state].css;\n      }\n    }\n  }\n}\n\nexport default ProblemsApi;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport '../css/SearchSelect.css';\n\nconst MAX_OPTIONS = 15;\nconst GLOBAL_SORT_KEY = 'sk';\nconst NETWORK_LOAD_DELAY = 250;\n\nclass SearchSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchTerm: '',\n      previousValidSearchTerm: '',\n      showOptions: false,\n      lastChangedTime: 0,\n      lastLoadTime: 0,\n      options: [],\n      filteredOptions: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleOptionSelectWithKeys = this.handleOptionSelectWithKeys.bind(this);\n  }\n\n  getOptionString(option) {\n    const optionStringArray = [];\n    for(const key of this.props.keys)\n      optionStringArray.push(option[key]);\n\n    return optionStringArray.join(' - ');\n  }\n\n  async filterOptions() {\n    var filteredOptions = [];\n    const searchTerm = this.state.searchTerm.toLowerCase();\n\n    for(const option of this.state.options) {\n      if(filteredOptions.length === MAX_OPTIONS)\n        break;\n\n      const optionString = this.getOptionString(option);\n      if(optionString.toLowerCase().includes(searchTerm)) {\n        filteredOptions.push(option);\n        continue;\n      }\n\n      for(const key of this.props.keys) {\n        if(option[key].toLowerCase().includes(searchTerm)) {\n          filteredOptions.push(option);\n          break;\n        }\n      }\n    }\n\n    await Utils.setStatePromise(this, {\n      filteredOptions: filteredOptions\n    });\n  }\n\n  async networkLoadOptions() {\n    if(this.mounted === false) return;\n\n    const currentTime = Date.now();\n    await Utils.setStatePromise(this, {\n      loading: true,\n      lastLoadTime: currentTime\n    });\n\n    const currentSearchTerm = this.state.searchTerm;\n    const filteredOptions = await this.props.search(this.state.searchTerm);\n    if(currentSearchTerm === this.state.searchTerm) {\n      await Utils.setStatePromise(this, {\n        filteredOptions: filteredOptions\n      });\n    }\n\n    if(this.state.lastLoadTime === currentTime) {\n      await Utils.setStatePromise(this, {\n        loading: false\n      });\n    }\n  }\n\n  async componentDidMount() {\n    if(!this.props.network && this.props.search) {\n      if(this.props.initialSearchSortKey) {\n        await Utils.setStatePromise(this, {\n          searchTerm: '',\n          loading: true\n        });\n\n        const options = await this.props.search();\n        for(const option of options) {\n          if(option[GLOBAL_SORT_KEY] === this.props.initialSearchSortKey) {\n            const searchTerm = this.getOptionString(option);\n            await Utils.setStatePromise(this, {\n              searchTerm: searchTerm,\n              previousValidSearchTerm: searchTerm,\n              loading: false,\n              options: options\n            });\n            break;\n          }\n        }\n\n        await this.filterOptions();\n      }\n      else {\n        await this.componentDidUpdate({});\n      }\n    }\n    else if(this.props.initialSearchTerm) {\n      await Utils.setStatePromise(this, {\n        searchTerm: this.props.initialSearchTerm\n      });\n      await this.networkLoadOptions();\n    }\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.staticKey && !this.props.staticKey) {\n      await Utils.setStatePromise(this, {\n        searchTerm: ''\n      });\n      return;\n    }\n\n    if(this.props.initialSearchTerm !== prevProps.initialSearchTerm) {\n       await Utils.setStatePromise(this, {\n         searchTerm: this.props.initialSearchTerm\n       });\n    }\n\n    if(this.props.staticKey === prevProps.staticKey)\n      return;\n\n    await Utils.setStatePromise(this, {\n      searchTerm: '',\n      loading: true\n    });\n    const options = await this.props.search();\n\n    await Utils.setStatePromise(this, {\n      loading: false,\n      previousValidSearchTerm: '',\n      options: options,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleChange(event) {\n    if(this.props.network) {\n      const currentTime = Date.now();\n      await Utils.setStatePromise(this, {\n        searchTerm: event.target.value,\n        lastChangedTime: currentTime\n      });\n\n      if(this.state.searchTerm.length > 0) {\n        window.setTimeout(() => {\n          if(this.state.lastChangedTime === currentTime) {\n            this.networkLoadOptions();\n          }\n        }, NETWORK_LOAD_DELAY);\n      }\n      else {\n        await Utils.setStatePromise(this, {\n          filteredOptions: []\n        });\n      }\n    }\n    else {\n      await Utils.setStatePromise(this, {\n        searchTerm: event.target.value\n      });\n\n      await this.filterOptions();\n    }\n  }\n\n  async handleBlur(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.id === `Select-options-${this.props.name}`)\n      return;\n\n    if(this.props.network) {\n      await Utils.setStatePromise(this, {\n        showOptions: false\n      });\n    }\n    else {\n      await Utils.setStatePromise(this, {\n        showOptions: false,\n        searchTerm: this.state.previousValidSearchTerm\n      });\n    }\n  }\n\n  async handleFocus(event) {\n    await Utils.setStatePromise(this, {\n      showOptions: true\n    });\n  }\n\n  async handleOptionSelectWithKeys(sortKey, optionString) {\n    await Utils.setStatePromise(this, {\n      searchTerm: optionString,\n      previousValidSearchTerm: optionString,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n    this.props.callback(sortKey);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let optionElements = [];\n    for(const option of this.state.filteredOptions) {\n      if(this.props.keys) {\n        const optionString = this.getOptionString(option);\n        const displayString = option[this.props.displayKey];\n        const sortKey = option[GLOBAL_SORT_KEY];\n        optionElements.push(\n          <li onClick={() => this.handleOptionSelectWithKeys(sortKey, displayString)}\n              key={sortKey}>\n              {optionString}\n          </li>\n        );\n      }\n      else {\n        let optionCallback = async () => {\n          await Utils.setStatePromise(this, {\n            searchTerm: option,\n            showOptions: false\n          });\n          this.props.callback(option);\n\n          await this.networkLoadOptions();\n        };\n\n        optionElements.push(\n          <li onClick={optionCallback} key={option}>\n            {option}\n          </li>\n        );\n      }\n    }\n\n    const inputDisabled = !this.props.network &&\n      (!this.props.search || this.state.loading);\n\n    return (\n      <div onBlur={this.handleBlur} className=\"Search-select\">\n        <input className={this.state.loading ? \"Askd-form-loading\" : \"\"}\n               onChange={this.handleChange} autoComplete=\"off\" type=\"text\"\n               value={this.state.searchTerm} onFocus={this.handleFocus}\n               name={this.props.name} id={this.props.id}\n               disabled={inputDisabled} placeholder={this.props.placeholder} />\n        {\n          optionElements.length > 0 && this.state.showOptions &&\n          <ol id={`Select-options-${this.props.name}`} tabIndex=\"-1\"\n              className=\"Search-select-options\">\n            { optionElements }\n          </ol>\n        }\n      </div>\n    );\n  }\n}\n\nexport default SearchSelect;\n","import React, { useState, useEffect } from 'react';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport SearchSelect from './SearchSelect';\n\nfunction SearchProblemSelect({ initialPlatform, initialContestId,\n                               initialProblemId, initialSkipContestSearch,\n                               changeCallback }) {\n  let [ platform, setPlatform ] = useState(initialPlatform);\n  let [ contestSk, setContestSk ] = useState(initialContestId);\n  let [ skipContestSearch, setSkipContestSearch ] =\n    useState(initialSkipContestSearch);\n\n  let handlePlatformChange = (event) => {\n    setPlatform(event.target.value);\n    setContestSk(null);\n    changeCallback(event.target.value, null, null);\n  };\n\n  let updateContestSortKey = (newContestSk) => {\n    setContestSk(newContestSk);\n    changeCallback(platform, newContestSk, null);\n  };\n\n  let updateProblemSortKey = (newProblemSk) => {\n    changeCallback(platform, contestSk, newProblemSk);\n  };\n\n  let toggleSkipContestSearch = () => {\n    setSkipContestSearch(!skipContestSearch);\n    setContestSk(null);\n  };\n\n  let searchContestFunction = null;\n  let searchContestStaticKey = null;\n  if(platform && !skipContestSearch) {\n    searchContestFunction = () => ProblemsApi.getContests(platform);\n    searchContestStaticKey = platform;\n  }\n\n  let searchProblemFunction = null;\n  let searchProblemStaticKey = null;\n  if(platform && contestSk) {\n    searchProblemFunction = () => ProblemsApi.getProblems(platform, contestSk);\n    searchProblemStaticKey = platform + contestSk;\n  }\n  else if(platform && skipContestSearch) {\n    searchProblemFunction = () => ProblemsApi.getProblems(platform);\n    searchProblemStaticKey = platform;\n  }\n\n  const searchContestKeys = (platform === 'Project Euler') ?\n                            ['name'] : ['contestCode', 'name'];\n  const searchProblemKeys = (platform === 'TopCoder') ?\n                            ['name'] : ['problemCode', 'name'];\n\n  const selectPlatformValue = platform ? platform : '';\n  const skipButtonText = skipContestSearch ? 'Want to filter by contest?' :\n                                             'Want to skip filtering by contest?';\n\n  useEffect(() => {\n    if(initialPlatform !== null) setPlatform(initialPlatform);\n    if(initialContestId !== null) setContestSk(initialContestId);\n  }, [initialPlatform, initialContestId]);\n\n  return (\n    <div className=\"Search-problem-select\">\n      <label htmlFor=\"cp-platform\">Platform</label>\n      <select value={selectPlatformValue} onChange={handlePlatformChange}\n              name=\"platform\" id=\"cp-platform\">\n        <option disabled value=\"\"></option>\n        <option value=\"CodeForces\">CodeForces</option>\n        <option value=\"CodeChef\">CodeChef</option>\n        <option value=\"AtCoder\">AtCoder</option>\n        <option value=\"TopCoder\">TopCoder</option>\n        <option value=\"Project Euler\">Project Euler</option>\n        <option value=\"ICPC\">ICPC (Kattis)</option>\n      </select>\n\n      <label htmlFor=\"cp-contest\">Contest</label>\n      <SearchSelect name='contest' id='cp-contest' search={searchContestFunction}\n                    keys={searchContestKeys} callback={updateContestSortKey}\n                    displayKey='name' staticKey={searchContestStaticKey}\n                    initialSearchSortKey={initialContestId} />\n\n      <button onClick={toggleSkipContestSearch}\n              type=\"button\" className=\"Askd-form-link Askd-form-link-separator\">\n        { skipButtonText }\n      </button>\n\n      <label htmlFor=\"cp-title\">Problem</label>\n      <SearchSelect name='title' id='cp-title' search={searchProblemFunction}\n                    keys={searchProblemKeys} callback={updateProblemSortKey}\n                    displayKey='name' staticKey={searchProblemStaticKey}\n                    initialSearchSortKey={initialProblemId} />\n    </div>\n  );\n}\n\nexport default SearchProblemSelect;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport SearchProblemSelect from '../SearchSelect/SearchProblemSelect';\nimport '../css/AddProblemForm.css';\n\nclass AddProblemForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      loading: false\n    };\n\n    this.platform = null;\n    this.contestId = null;\n    this.problemId = null;\n\n    this.close = this.close.bind(this);\n    this.problemChangeCallback = this.problemChangeCallback.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n  }\n\n  close() {\n    this.props.callback(null, null, null);\n  }\n\n  problemChangeCallback(platform, contestId, problemId) {\n    [ this.platform, this.contestId, this.problemId ] = [\n      platform, contestId, problemId\n    ];\n  }\n\n  async addProblem(event) {\n    event.preventDefault();\n\n    if(!this.problemId) {\n      await Utils.componentSetError(this, 'Please search and select a problem.');\n      return;\n    }\n\n    await this.setLoading(true);\n    this.props.callback(this.problemId, this.platform, this);\n  }\n\n  async setLoading(isLoading) {\n    await Utils.setStatePromise(this, {\n      loading: isLoading\n    });\n  }\n\n  render() {\n    let submitButtonClassName = 'Askd-button';\n    if(this.state.loading) {\n      submitButtonClassName += ' Askd-form-loading';\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\" />\n        <div className=\"Add-problem-form Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Add a problem!</h2>\n          <form className=\"Askd-form\" onSubmit={this.addProblem}>\n            <SearchProblemSelect changeCallback={this.problemChangeCallback} />\n            <input className={submitButtonClassName} type=\"submit\"\n                   value=\"Add Problem\" disabled={this.state.loading} />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddProblemForm;\n","import Api from './Api';\nimport ProblemsApi from './ProblemsApi';\n\nconst LIKED_NOTES_PAGE_SIZE = 50;\n\nclass NotesApi {\n  static getNoteEditLink(note) {\n    const problemUrl = note.problemSk.replace('#', '/');\n    return `/notes/edit/${note.platform}/${problemUrl}`;\n  }\n\n  static getNotePublishedLink(note) {\n    const problemUrl = note.problemSk.replace('#', '/');\n    return `/notes/${note.username}/${note.platform}/${problemUrl}`;\n  }\n\n  static getNoteDisplayName(note) {\n    const contestDisplayName = ProblemsApi.getContestDisplayName(note);\n    const problemDisplayName = ProblemsApi.getProblemDisplayNameWithoutPlatform(note);\n    return `${contestDisplayName} ${problemDisplayName}`;\n  }\n\n  static async getNotes(username) {\n    const options = {\n      username: username\n    };\n\n    return await Api.getJson('notes', options);\n  }\n\n  static async getMostLikedNotes(username, platform, contestId, problemId, page) {\n    if(username) {\n      let notes = await NotesApi.getNotes(username);\n      notes.sort((note1, note2) => note2.likeCount - note1.likeCount);\n\n      let publishedNotes = [];\n      for(const note of notes) {\n        if(!note.published) continue;\n        if(platform && note.platform !== platform) continue;\n        if(contestId && note.contestCode !== contestId) continue;\n        if(problemId && note.problemSk !== problemId) continue;\n        publishedNotes.push(note);\n      }\n\n      const totalPages = Math.ceil(publishedNotes.length/LIKED_NOTES_PAGE_SIZE);\n      if(page > Math.max(totalPages, 1)) {\n        let err = Error();\n        err.name = 'PageNotFound';\n        throw err;\n      }\n\n      let visibleNotes = [];\n      const startIndex = (page - 1) * LIKED_NOTES_PAGE_SIZE;\n      const endIndex = Math.min(startIndex + LIKED_NOTES_PAGE_SIZE, publishedNotes.length);\n      for(let i = startIndex; i < endIndex; i++) {\n        visibleNotes.push(publishedNotes[i]);\n      }\n\n      return {\n        notes: visibleNotes,\n        totalPages: Math.max(totalPages, 1)\n      };\n    }\n    else {\n      const options = {\n        username: username,\n        platform: platform,\n        contestId: contestId,\n        problemId: problemId,\n        page: page\n      };\n\n      return await Api.getJson('notes', options);\n    }\n  }\n\n  static async getMostRecentNotes(page) {\n    const options = {\n      page: page,\n      recent: true\n    };\n\n    return await Api.getJson('notes', options);\n  }\n\n  static async getNoteInfo(username, platform, problemId, forcePublished) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId,\n      forcePublished: forcePublished\n    };\n\n    return await Api.getJson('notes', options);\n  }\n\n  static async addNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.postJson('notes', options);\n  }\n\n  static async editNote(username, platform, problemId, title, solved,\n                        content, published) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId,\n      title: title,\n      solved: solved,\n      content: JSON.stringify(content),\n      published: published\n    };\n\n    return await Api.putJson('notes', options);\n  }\n\n  static async deleteNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.deleteJson('notes', options);\n  }\n}\n\nexport default NotesApi;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport NotesApi from '../Api/NotesApi';\n\nclass UserNoteInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    const solvedClass = ProblemsApi.getSolvedStateCssClass(info.solved);\n    const noteEditLink = NotesApi.getNoteEditLink(info);\n    const notePublishedLink = NotesApi.getNotePublishedLink(info);\n    const publishedClass = info.published ? 'published' : 'unpublished';\n    const problemDisplayName =  ProblemsApi.getProblemDisplayName(info);\n    const timestamp = (new Date(info.editedTime)).toLocaleDateString();\n    const authorUsername = info.username;\n    const profileLink = `/users/${authorUsername}`;\n    const noteTitle = this.props.mostLikedMode ? ' - ' + info.title : info.title;\n\n    return (\n      <li className={`User-note-info User-note-info-${solvedClass}`}>\n        <ul className=\"User-note-info-links\">\n          {\n            this.props.loggedInUsername === authorUsername &&\n            <li>\n              <Link className=\"Askd-form-link\" to={noteEditLink}>\n                Edit\n              </Link>\n            </li>\n          }\n          {\n            info.published &&\n            <li>\n              <Link className=\"Askd-form-link\" to={notePublishedLink}>\n                View\n              </Link>\n            </li>\n          }\n        </ul>\n        <h5>\n          {\n            info.published && (info.likeCount > 0) &&\n            <span className=\"Like-dislike-score\">\n              <span className=\"icon-thumb_up_alt\" />\n              {info.likeCount}\n            </span>\n          }\n          {problemDisplayName}\n        </h5>\n        <h6 className=\"User-note-info-title\">\n          {\n            this.props.mostLikedMode &&\n            <Link className=\"Username\" to={profileLink}>\n              {authorUsername}\n            </Link>\n          }\n          {noteTitle}\n        </h6>\n        <h6 className=\"User-note-info-timestamp\">\n          {timestamp}\n        </h6>\n        <ul className=\"User-note-info-tags\">\n          <li className=\"User-note-info-tag User-note-solved-indicator\" />\n          <li className={`User-note-info-tag User-note-tag-${publishedClass}`} />\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default UserNoteInfo;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\n\nclass UserContestInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    let noteElements = [];\n    for(let i = 0; i < info.notes.length; i++) {\n      const note = info.notes[i];\n      const problemLetter = ProblemsApi.getProblemLetter(note);\n      const problemUrl = note.problemSk.replace('#', '/');\n      const authorUsername = note.username;\n\n      let codeClassName = 'User-note-contest-code';\n      if(problemLetter.length >= 3) {\n        codeClassName += '-small';\n      }\n\n      const solvedClass = ProblemsApi.getSolvedStateCssClass(note.solved);\n\n      noteElements.push(\n        <li key={i} className={`User-note-contest-note User-note-contest-${solvedClass}`}>\n          <ul className=\"User-note-contest-links\">\n            {\n              this.props.loggedInUsername === authorUsername &&\n              <li>\n                <Link className=\"Askd-form-link\"\n                      to={`/notes/edit/${note.platform}/${problemUrl}`}>\n                  Edit\n                </Link>\n              </li>\n            }\n            {\n              note.published &&\n              <li>\n                <Link className=\"Askd-form-link\"\n                      to={`/notes/${authorUsername}/${note.platform}/${problemUrl}`}>\n                  View\n                </Link>\n              </li>\n            }\n          </ul>\n          <span className={codeClassName}>\n            {problemLetter}\n          </span>\n        </li>\n      );\n    }\n\n    const contestDisplayName = ProblemsApi.getContestDisplayName(info);\n    const timestamp = (new Date(info.editedTime)).toLocaleDateString();\n\n    return (\n      <li className=\"User-note-info\">\n        <h5>\n          {contestDisplayName}\n        </h5>\n        <h6 className=\"User-note-contest-timestamp\">\n          {timestamp}\n        </h6>\n        <ul className=\"User-note-contest-notes\">\n          { noteElements }\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default UserContestInfo;\n","import React from 'react';\n\nfunction UserNotesTitleDropdown({ title, innerContent, showing,\n                                  colorClass, toggleCallback }) {\n  const showText = showing ? 'Hide' : 'Show';\n\n  if(!colorClass) {\n    colorClass = 'default';\n  }\n\n  const headingClassName = 'User-notes-title-dropdown-heading ' +\n    `User-notes-title-dropdown-heading-${colorClass}`;\n\n  return (\n    <li className=\"User-notes-title-dropdown\">\n      <button className=\"User-notes-title-dropdown-showhide\"\n              onClick={toggleCallback}>\n        { showText }\n      </button>\n      <h4 className={headingClassName}>\n        {title}\n      </h4>\n      { showing && innerContent }\n    </li>\n  );\n}\n\nexport default UserNotesTitleDropdown;\n","class VirtualPaginator {\n  constructor(pageSize, content) {\n    this.pageSize = pageSize;\n    this.setContent(content);\n  }\n\n  setContent(content) {\n    this.content = [];\n    this.activeItems = content.length;\n\n    for(let i = 0; i < content.length; i++) {\n      let item = content[i];\n      item.paginatorActive = true;\n      this.content.push(item);\n    }\n  }\n\n  toggleActiveItems(indices) {\n    for(const index of indices) {\n      const active = this.content[index].paginatorActive;\n      this.content[index].paginatorActive = !active;\n\n      if(active) {\n        this.activeItems--;\n      }\n      else {\n        this.activeItems++;\n      }\n    }\n  }\n\n  getContent(pageIndex) {\n    let currentIndex = 1;\n    let activeBufferSize = 0;\n    let itemBuffer = [];\n\n    for(const item of this.content) {\n      itemBuffer.push(item);\n      if(item.paginatorActive) {\n        activeBufferSize++;\n        if(activeBufferSize === this.pageSize) {\n          if(currentIndex === pageIndex)\n            return itemBuffer;\n          itemBuffer = [];\n          activeBufferSize = 0;\n          currentIndex++;\n        }\n      }\n    }\n\n    if(currentIndex === pageIndex) {\n      return itemBuffer;\n    }\n\n    throw Error('Page index out of range!');\n  }\n\n  getPageCount() {\n    let pageCount = 0;\n    let bufferSize = 0;\n    let activeBufferSize = 0;\n    for(const item of this.content) {\n      if(bufferSize === 0) {\n        pageCount++;\n      }\n\n      bufferSize++;\n      if(item.paginatorActive) {\n        activeBufferSize++;\n      }\n      if(activeBufferSize === this.pageSize) {\n        activeBufferSize = 0;\n        bufferSize = 0;\n      }\n    }\n\n    return pageCount;\n  }\n}\n\nexport default VirtualPaginator;\n","import React from 'react';\nimport '../css/Paginator.css';\n\nfunction Paginator({ currentPage, totalPages, bottom, callback }) {\n  let pageIndices = [ currentPage ];\n\n  let after = currentPage + 1;\n  let increment = 2;\n  while(after < totalPages) {\n    pageIndices.push(after);\n    after += increment;\n    increment *= 2;\n  }\n\n  let before = currentPage - 1;\n  increment = 2;\n  while(before > 1) {\n    pageIndices.push(before);\n    before -= increment;\n    increment *= 2;\n  }\n\n  if(currentPage !== 1)\n    pageIndices.push(1);\n  if(currentPage !== totalPages && totalPages > 1)\n    pageIndices.push(totalPages);\n\n  pageIndices.sort((a, b) => a - b);\n\n  let paginatorButtons = [];\n  for(const pageIndex of pageIndices) {\n    const buttonClassName = (pageIndex === currentPage) ?\n      'Paginator-list-selected' : 'Paginator-list-free';\n    const buttonOnClick = (pageIndex === currentPage) ?\n      null : () => callback(pageIndex);\n\n    paginatorButtons.push(\n      <li key={pageIndex}>\n        <button className={buttonClassName} onClick={buttonOnClick}>\n          {pageIndex}\n        </button>\n      </li>\n    );\n  }\n\n  let outerClassName = 'Paginator';\n  if(bottom) {\n    outerClassName += ' Paginator-bottom';\n  }\n\n  return (\n    <div className={outerClassName}>\n      <ul className=\"Paginator-list\">\n        { paginatorButtons }\n      </ul>\n    </div>\n  );\n}\n\nexport default Paginator;\n","import React, { Component } from 'react';\nimport UserNoteInfo from './UserNoteInfo';\nimport UserContestInfo from './UserContestInfo';\nimport UserNotesTitleDropdown from './UserNotesTitleDropdown';\nimport VirtualPaginator from '../Paginator/VirtualPaginator';\nimport Paginator from '../Paginator/Paginator';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport Utils from '../Utils';\n\nconst RecursionLevel = Object.freeze({\n  CONTEST: 0,\n  PLATFORM: 1,\n  SOLVED: 2\n});\nconst PAGINATE_SIZE = 15;\n\nfunction compareByRecent(note1, note2) {\n  if(note1.editedTime > note2.editedTime)\n    return -1;\n  return 1;\n}\n\nfunction groupByAttributes(objectList, attributes) {\n  let attributeGroups = {};\n  for(const obj of objectList) {\n    let attributeValues = [];\n    for(const attribute of attributes) {\n      attributeValues.push(obj[attribute]);\n    }\n\n    const key = attributeValues.join('#');\n    if(attributeGroups.hasOwnProperty(key)) {\n      attributeGroups[key].push(obj);\n    }\n    else {\n      attributeGroups[key] = [ obj ];\n    }\n  }\n\n  return attributeGroups;\n}\n\nclass UserNotesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 1,\n      loggedInUsername: null\n    };\n\n    this.sortNoteItems(this.props.notes);\n    this.virtualPaginator = new VirtualPaginator(PAGINATE_SIZE, this.sortedNoteItems);\n\n    this.updatePage = this.updatePage.bind(this);\n  }\n\n  async componentDidMount() {\n    const loggedInUsername = await UserAuthApi.getUsername();\n    await Utils.setStatePromise(this, {\n      loggedInUsername: loggedInUsername\n    });\n  }\n\n  createContestObject(notes) {\n    const firstNote = notes[0];\n    let contestObject = {\n      contestCode: firstNote.contestCode,\n      contestName: firstNote.contestName,\n      platform: firstNote.platform,\n      editedTime: firstNote.editedTime,\n      notes: []\n    };\n\n    if(this.props.organizeBySolved)\n      contestObject.solved = firstNote.solved;\n    if(this.props.organizeByPlatform)\n      contestObject.platform = firstNote.platform;\n\n    for(const note of notes) {\n      contestObject.notes.push(note);\n      if(note.editedTime > contestObject.editedTime) {\n        contestObject.editedTime = note.editedTime;\n      }\n    }\n\n    return contestObject;\n  }\n\n  sortNoteItems(notes, recursionLevel = RecursionLevel.SOLVED, keyString = '') {\n    let paginatorIndices = [];\n    if(recursionLevel === RecursionLevel.CONTEST) {\n      if(this.props.organizeByContest) {\n        const contestGroups = groupByAttributes(notes, ['platform', 'contestCode']);\n        for(const key in contestGroups) {\n          let contestObject = this.createContestObject(contestGroups[key]);\n          paginatorIndices.push(this.sortedNoteItems.length);\n          this.sortedNoteItems.push(contestObject);\n        }\n      }\n      else {\n        for(const note of notes) {\n          paginatorIndices.push(this.sortedNoteItems.length);\n          this.sortedNoteItems.push(note);\n        }\n      }\n    }\n    else {\n      let organize, attributeString;\n      if(recursionLevel === RecursionLevel.SOLVED) {\n        this.sortedNoteItems = [];\n        this.dropdownShowing = {};\n        this.dropdownIndices = {};\n\n        if(this.props.sortByRecent) {\n          notes = [...notes].sort(compareByRecent);\n        }\n\n        organize = this.props.organizeBySolved;\n        attributeString = 'solved';\n      }\n      else {\n        organize = this.props.organizeByPlatform;\n        attributeString = 'platform';\n      }\n\n      if(organize) {\n        const groups = groupByAttributes(notes, [attributeString]);\n        for(const key in groups) {\n          const innerKeyString = `${keyString}#${key}`;\n          const innerIndices =\n            this.sortNoteItems(groups[key], recursionLevel - 1, innerKeyString);\n\n          this.dropdownShowing[innerKeyString] = true;\n          this.dropdownIndices[innerKeyString] = innerIndices;\n\n          for(const index of innerIndices) {\n            paginatorIndices.push(index);\n          }\n        }\n      }\n      else {\n        return this.sortNoteItems(notes, recursionLevel - 1, keyString);\n      }\n    }\n\n    return paginatorIndices;\n  }\n\n  renderNoteItems(notes, recursionLevel = RecursionLevel.SOLVED, keyString = '') {\n    let noteInfoElements = [];\n    if(recursionLevel === RecursionLevel.CONTEST) {\n      let NoteComponent =\n        this.props.organizeByContest ? UserContestInfo : UserNoteInfo;\n\n      for(let i = 0; i < notes.length; i++) {\n        noteInfoElements.push(\n          <NoteComponent key={i} info={notes[i]}\n                         loggedInUsername={this.state.loggedInUsername} />\n        );\n      }\n    }\n    else {\n      let organize, attributeString;\n      if(recursionLevel === RecursionLevel.SOLVED) {\n        organize = this.props.organizeBySolved;\n        attributeString = 'solved';\n      }\n      else {\n        organize = this.props.organizeByPlatform;\n        attributeString = 'platform';\n      }\n\n      if(organize) {\n        const groups = groupByAttributes(notes, [attributeString]);\n        for(const key in groups) {\n          const innerKeyString = `${keyString}#${key}`;\n          const innerContent =\n            this.renderNoteItems(groups[key], recursionLevel - 1, innerKeyString);\n          const title = (recursionLevel === RecursionLevel.SOLVED) ?\n            ProblemsApi.getSolvedStateText(key) : key;\n\n          const showing = this.dropdownShowing[innerKeyString];\n          const innerIndices = this.dropdownIndices[innerKeyString];\n          const toggleCallback = async () => {\n            this.virtualPaginator.toggleActiveItems(innerIndices);\n            this.dropdownShowing[innerKeyString] = !this.dropdownShowing[innerKeyString];\n\n            const totalPages = this.virtualPaginator.getPageCount();\n            if(this.state.page > totalPages) {\n              await this.updatePage(totalPages);\n            }\n\n            this.forceUpdate();\n          };\n\n          let solvedStateCssClass = null;\n          if(attributeString === 'solved') {\n            solvedStateCssClass = ProblemsApi.getSolvedStateCssClass(key);\n          }\n\n          noteInfoElements.push(\n            <UserNotesTitleDropdown key={key} title={title}\n                                    innerContent={innerContent} showing={showing}\n                                    toggleCallback={toggleCallback}\n                                    colorClass={solvedStateCssClass} />\n          );\n        }\n      }\n      else {\n        return this.renderNoteItems(notes, recursionLevel - 1);\n      }\n    }\n\n    return (\n      <ul className=\"User-notes-list\">\n        { noteInfoElements }\n      </ul>\n    );\n  }\n\n  async updatePage(page) {\n    await Utils.setStatePromise(this, {\n      page: page\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Only re-sort note items on an (important) props update\n    const importantProps = [\n      'organizeBySolved',\n      'organizeByPlatform',\n      'organizeByContest',\n      'sortByRecent'\n    ];\n    const currentImportantProps = importantProps.map((x) => this.props[x]);\n    const nextImportantProps = importantProps.map((x) => nextProps[x]);\n\n    if(JSON.stringify(currentImportantProps) !== JSON.stringify(nextImportantProps)) {\n      this.props = nextProps;\n      this.sortNoteItems(this.props.notes);\n      this.virtualPaginator.setContent(this.sortedNoteItems);\n\n      if(this.state.page !== 1) {\n        this.updatePage(1);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  render() {\n    if(this.props.notes.length === 0) {\n      return (\n        <p className=\"User-notes-nothing\">There's nothing to see here yet!</p>\n      );\n    }\n\n    const noteItems = this.virtualPaginator.getContent(this.state.page);\n    const totalPages = this.virtualPaginator.getPageCount();\n    const paginator = (bottom) => (\n      <Paginator currentPage={this.state.page} totalPages={totalPages}\n                 callback={this.updatePage} bottom={bottom} />\n    );\n\n    return (\n      <>\n        { paginator(false) }\n        { this.renderNoteItems(noteItems) }\n        { paginator(true) }\n      </>\n    );\n  }\n}\n\nexport default UserNotesList;\n","import React, { Component } from 'react';\nimport AddProblemForm from './AddProblemForm';\nimport NotesApi from '../Api/NotesApi';\nimport UserNotesList from './UserNotesList';\nimport Utils from '../Utils';\nimport '../css/UserNotes.css';\n\nclass UserNotes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAddProblemForm: false,\n      organizeBySolved: false,\n      organizeByPlatform: false,\n      organizeByContest: false,\n      sortByRecent: false\n    };\n\n    this.toggleAddProblemForm = this.toggleAddProblemForm.bind(this);\n    this.toggleOrganizeBySolved = this.toggleOrganizeBySolved.bind(this);\n    this.toggleOrganizeByPlatform = this.toggleOrganizeByPlatform.bind(this);\n    this.toggleOrganizeByContest = this.toggleOrganizeByContest.bind(this);\n    this.toggleSortByRecent = this.toggleSortByRecent.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  async toggleAddProblemForm() {\n    await Utils.setStatePromise(this, {\n      showAddProblemForm: !this.state.showAddProblemForm\n    });\n  }\n\n  async toggleOrganizeBySolved() {\n    await Utils.setStatePromise(this, {\n      organizeBySolved: !this.state.organizeBySolved\n    });\n  }\n\n  async toggleOrganizeByPlatform() {\n    await Utils.setStatePromise(this, {\n      organizeByPlatform: !this.state.organizeByPlatform\n    });\n  }\n\n  async toggleOrganizeByContest() {\n    await Utils.setStatePromise(this, {\n      organizeByContest: !this.state.organizeByContest\n    });\n  }\n\n  async toggleSortByRecent() {\n    await Utils.setStatePromise(this, {\n      sortByRecent: !this.state.sortByRecent\n    });\n  }\n\n  async addProblem(problemSortKey, platform, formComponent) {\n    if(!problemSortKey) {\n      await this.toggleAddProblemForm();\n      return;\n    }\n\n    try {\n      const username = this.props.userInfo.username;\n      await NotesApi.addNote(username, platform, problemSortKey);\n\n      const problemUrl = problemSortKey.replace('#', '/');\n      this.props.history.push(`/notes/edit/${platform}/${problemUrl}`);\n    }\n    catch(err) {\n      await Utils.componentSetError(formComponent, err.message);\n      await formComponent.setLoading(false);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {\n          this.state.showAddProblemForm &&\n          <AddProblemForm callback={this.addProblem} />\n        }\n        <div className=\"User-notes-outer Module-outer-space\">\n          <h2 className=\"Module-heading\">Notes</h2>\n          <form>\n            <div className=\"User-notes-organize\">\n              <label>\n                <b>Organize by</b>\n              </label>\n              <input type=\"checkbox\" name=\"solved\" value=\"solved\"\n                     onChange={this.toggleOrganizeBySolved} />\n              <label htmlFor=\"solved\">Solved</label>\n              <input type=\"checkbox\" name=\"platform\" value=\"platform\"\n                     onChange={this.toggleOrganizeByPlatform} />\n              <label htmlFor=\"platform\">Platform</label>\n              <input type=\"checkbox\" name=\"contest\" value=\"contest\"\n                     onChange={this.toggleOrganizeByContest} />\n              <label htmlFor=\"contest\">Contest</label>\n            </div>\n            <div className=\"User-notes-organize\">\n              <label htmlFor=\"sort\">\n                <b>Sort by</b>\n              </label>\n              <select defaultValue=\"default\" name=\"sort\"\n                      onChange={this.toggleSortByRecent}>\n                <option value=\"default\">Default</option>\n                <option value=\"recent\">Recent</option>\n              </select>\n            </div>\n          </form>\n          <div className=\"User-notes Module-space\">\n            <UserNotesList organizeBySolved={this.state.organizeBySolved}\n                           organizeByPlatform={this.state.organizeByPlatform}\n                           organizeByContest={this.state.organizeByContest}\n                           sortByRecent={this.state.sortByRecent}\n                           notes={this.props.notes} />\n            {\n              this.props.userInfo.email &&\n              <button onClick={this.toggleAddProblemForm}\n                      className=\"User-notes-add Askd-button Askd-button-circular\">\n                <span className=\"icon-plus\" />\n              </button>\n            }\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserNotes;\n","import React from 'react';\nimport CreateLoadingComponent from '../HOC/CreateLoadingComponent';\nimport LoadingSpinner from '../Misc/LoadingSpinner';\nimport UserInfo from './UserInfo';\nimport UserNotes from './UserNotes';\nimport UsersApi from '../Api/UsersApi';\nimport NotesApi from '../Api/NotesApi';\nimport LoadState from '../Enum/LoadState';\n\nasync function getUserData(props, params) {\n  const username = props.match.params.username;\n  const userInfo = await UsersApi.getUserInfo(username);\n  const notes = await NotesApi.getNotes(username);\n\n  userInfo.totalNotes = notes.length;\n  userInfo.username = username;\n\n  return {\n    userInfo: userInfo,\n    notes: notes\n  };\n}\n\nfunction UserProfile({ otherProps, info, screen }) {\n  if(screen === LoadState.NOT_FOUND) {\n    return (\n      <div className=\"Module-description\">\n        <h2>User not found!</h2>\n      </div>\n    );\n  }\n  else if(screen === LoadState.LOADING) {\n    return (\n      <LoadingSpinner />\n    );\n  }\n  else {\n    return (\n      <>\n        <UserInfo info={info.userInfo} />\n        <UserNotes userInfo={info.userInfo} notes={info.notes}\n                   history={otherProps.history} />\n      </>\n    );\n  }\n}\n\nexport default CreateLoadingComponent(\n  getUserData, null, 'UserNotFound', UserProfile\n);\n","const ContentType = Object.freeze({\n  MATH: (1 << 0),\n  BOLD: (1 << 1),\n  ITALIC: (1 << 2),\n  UNDERLINE: (1 << 3)\n});\n\nexport default ContentType;\n","import ContentType from './ContentType';\n\nclass MaskManager {\n  static toolbarMergeBit(bit, on, originalMask) {\n    if(bit === ContentType.MATH) {\n      if(on) return bit;\n      return 0;\n    }\n    else {\n      if(originalMask & ContentType.MATH) {\n        originalMask ^= ContentType.MATH;\n      }\n      return originalMask ^ bit;\n    }\n  }\n\n  static editorMergeBit(bit, on, originalMask) {\n    if(bit === ContentType.MATH) {\n      if(on) return bit;\n\n      if(originalMask & bit) originalMask ^= bit;\n      return originalMask;\n    }\n    else {\n      if(originalMask & ContentType.MATH) originalMask = 0;\n      if(on) return originalMask | bit;\n\n      if(originalMask & bit) originalMask ^= bit;\n      return originalMask;\n    }\n  }\n\n  static getClassName(mask) {\n    let className = '';\n    for(const style in ContentType) {\n      if(mask & ContentType[style]) {\n        className += `Askd-te-${style} `;\n      }\n    }\n    return className;\n  }\n}\n\nexport default MaskManager;\n","import MaskManager from './MaskManager';\n\nfunction lessThan(a, b, c, d) {\n  if(a === c)\n    return b < d;\n  return a < c;\n}\n\nclass Caret {\n  constructor(id) {\n    this.id = id;\n  }\n\n  getInfo() {\n    const selection = window.getSelection();\n    let anchorElement = selection.anchorNode.parentElement;\n    let focusElement = selection.focusNode.parentElement;\n    let originalAnchorElement = anchorElement;\n    let originalFocusElement = focusElement;\n\n    let anchorMathBlock = this.getContainingMathBlock(anchorElement);\n    let focusMathBlock = this.getContainingMathBlock(focusElement);\n    if(anchorMathBlock) anchorElement = anchorMathBlock;\n    if(focusMathBlock) focusElement = focusMathBlock;\n\n    let anchorIndex = anchorElement.getAttribute('index');\n    let focusIndex = focusElement.getAttribute('index');\n    let anchorOffset = anchorElement.getAttribute('position');\n    let focusOffset = focusElement.getAttribute('position');\n    let insideCaretBlock = anchorElement.getAttribute('id') === 'Askd-te-CARET';\n\n    if(anchorIndex === null || focusIndex === null) {\n      return {\n        rangeSelect: false,\n        index: 0,\n        position: 0,\n        insideCaretBlock: false,\n        editorSelected: true\n      };\n    }\n\n    if(originalAnchorElement.classList.contains('Askd-te-MATHJAX') &&\n       selection.anchorOffset === 0) {\n      anchorOffset = 0;\n    }\n    if(originalFocusElement.classList.contains('Askd-te-MATHJAX') &&\n       selection.focusOffset === 0) {\n      focusOffset = 0;\n    }\n\n    if(anchorOffset === null) anchorOffset = selection.anchorOffset;\n    if(focusOffset === null) focusOffset = selection.focusOffset;\n\n    anchorIndex = Number(anchorIndex);\n    anchorOffset = Number(anchorOffset);\n    focusIndex = Number(focusIndex);\n    focusOffset = Number(focusOffset);\n\n    if(anchorIndex === focusIndex && anchorOffset === focusOffset) {\n      return {\n        rangeSelect: false,\n        index: anchorIndex,\n        position: anchorOffset,\n        insideCaretBlock: insideCaretBlock,\n        editorSelected: true\n      };\n    }\n\n    if(!lessThan(anchorIndex, anchorOffset, focusIndex, focusOffset)) {\n      [ anchorIndex, focusIndex ] = [ focusIndex, anchorIndex ];\n      [ anchorOffset, focusOffset ] = [ focusOffset, anchorOffset ];\n    }\n\n    return {\n      rangeSelect: true,\n      leftIndex: anchorIndex,\n      leftPosition: anchorOffset,\n      rightIndex: focusIndex,\n      rightPosition: focusOffset,\n      editorSelected: true\n    };\n  }\n\n  setInfo(newCaretInfo, editorMask) {\n    if(newCaretInfo.rangeSelect) {\n      this.removeCaretBlock();\n      this.setRangePosition(\n        newCaretInfo.leftIndex, newCaretInfo.leftPosition,\n        newCaretInfo.rightIndex, newCaretInfo.rightPosition\n      );\n    }\n    else if(newCaretInfo.insideCaretBlock) {\n      this.addCaretBlock(newCaretInfo.index, newCaretInfo.position, editorMask);\n      this.setPosition(-1, 1);\n    }\n    else {\n      this.removeCaretBlock();\n      this.setPosition(newCaretInfo.index, newCaretInfo.position);\n    }\n  }\n\n  setPosition(index, position) {\n    let blockElement;\n    if(index >= 0) {\n      blockElement = document.getElementById(this.id + index);\n    }\n    else {\n      blockElement = document.getElementById('Askd-te-CARET');\n    }\n\n    let textNode = blockElement.childNodes[0];\n    if(!textNode) {\n      textNode = document.createTextNode('');\n      blockElement.appendChild(textNode);\n    }\n\n    let range = document.createRange();\n    range.setStart(textNode, position);\n    range.collapse(true);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  setRangePosition(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const leftBlockElement = document.getElementById(this.id + leftIndex);\n    const rightBlockElement = document.getElementById(this.id + rightIndex);\n    const leftTextNode = leftBlockElement.childNodes[0];\n    const rightTextNode = rightBlockElement.childNodes[0];\n\n    let range = document.createRange();\n    range.setStart(leftTextNode, leftPosition);\n    range.setEnd(rightTextNode, rightPosition);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  addCaretBlock(index, position, editorMask) {\n    this.removeCaretBlock();\n\n    let caretBlock = document.createElement('div');\n    caretBlock.setAttribute('id', 'Askd-te-CARET');\n    caretBlock.setAttribute('index', index);\n    caretBlock.setAttribute('position', position);\n    caretBlock.setAttribute('class', MaskManager.getClassName(editorMask));\n    caretBlock.innerHTML = String.fromCharCode(8203);\n\n    let nextBlock = document.getElementById(this.id + (index + 1));\n    nextBlock.parentElement.insertBefore(caretBlock, nextBlock);\n  }\n\n  removeCaretBlock() {\n    let existingCaretBlock = document.getElementById('Askd-te-CARET');\n    if(existingCaretBlock) {\n      existingCaretBlock.parentElement.removeChild(existingCaretBlock);\n      return true;\n    }\n    return false;\n  }\n\n  getContainingMathBlock(element) {\n    while(element) {\n      if(element.classList.contains('Askd-te-MATHJAX')) {\n        return element;\n      }\n      element = element.parentElement;\n    }\n    return null;\n  }\n}\n\nexport default Caret;\n","import React, { Component } from 'react';\nimport ContentType from './ContentType';\n\nclass Toolbar extends Component {\n  render() {\n    const boldSelected = (this.props.mask & ContentType.BOLD) > 0;\n    const italicSelected = (this.props.mask & ContentType.ITALIC) > 0;\n    const underlineSelected = (this.props.mask & ContentType.UNDERLINE) > 0;\n    const mathSelected = (this.props.mask & ContentType.MATH) > 0;\n\n    const selectHandler = (type) => {\n      return (event) => {\n        event.preventDefault();\n        this.props.callback(type);\n      };\n    };\n\n    return (\n      <div className=\"Askd-text-editor-toolbar\">\n        <ul>\n          <li className={`Askd-tb-selected-${boldSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-BOLD\"\n                    onPointerDown={selectHandler(ContentType.BOLD)} />\n          </li>\n          <li className={`Askd-tb-selected-${italicSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-ITALIC\"\n                    onPointerDown={selectHandler(ContentType.ITALIC)} />\n          </li>\n          <li className={`Askd-tb-selected-${underlineSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-UNDERLINE\"\n                    onPointerDown={selectHandler(ContentType.UNDERLINE)} />\n          </li>\n          <li className={`Askd-tb-selected-${mathSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-MATH\"\n                    onPointerDown={selectHandler(ContentType.MATH)} />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import MaskManager from './MaskManager';\nimport ContentType from './ContentType';\n\n/* This is different from str.length; for example, emojis can use up 2 or more */\nfunction countCharacters(str) {\n  let counter = 0;\n  for(const character of str) {\n    Number(character);  // Silence unused variable linter warning\n    counter++;\n  }\n  return counter;\n}\n\nclass VirtualTextEditor {\n  constructor(initialContent) {\n    this.characters = [];\n    this.caretBlockIndex = null;\n    this.caretBlockPosition = null;\n\n    if(initialContent) {\n      for(const block of initialContent) {\n        const mask = block.m;\n        for(const char of block.c) {\n          this.characters.push({\n            m: mask,\n            c: char\n          });\n        }\n      }\n\n      /* Remove extra newline character if it exists */\n      this.characters.splice(this.characters.length - 1);\n    }\n\n    this.updateBlocks();\n  }\n\n  getIndexAndPosition(globalIndex) {\n    let charactersScanned = 0;\n    for(let i = 0; i < this.blocks.length; i++) {\n      const block = this.blocks[i];\n      const blockLength = countCharacters(block.c);\n      const blockEndIndex = charactersScanned + blockLength;\n\n      if(globalIndex <= blockEndIndex) {\n        let position = 0;\n        for(let j = charactersScanned; j <= blockEndIndex; j++) {\n          if(globalIndex === j) {\n            return [ i, position ];\n          }\n          position += this.characters[j].c.length;\n        }\n      }\n      charactersScanned += blockLength;\n    }\n\n    return [ null, null ];\n  }\n\n  getGlobalIndex(index, position) {\n    let globalIndex = this.blockStarts[index];\n    let characterCounter = 0;\n    while(characterCounter < position && globalIndex < this.characters.length) {\n      characterCounter += this.characters[globalIndex].c.length;\n      globalIndex++;\n    }\n\n    if(characterCounter <= position)\n      return globalIndex;\n\n    return globalIndex - 1;\n  }\n\n  /* Visually identical caret positions can have two different indices\n  and positions if it's in the middle of two blocks. This method returns the end\n  position of the first block if rangeEnd is false and the starting position\n  of the second block otherwise. */\n  getCorrectedIndexAndPosition(index, position, rangeEnd, globalIndex=null) {\n    if(globalIndex === null) {\n      globalIndex = this.getGlobalIndex(index, position);\n    }\n\n    const firstBlockEnd = this.getIndexAndPosition(globalIndex);\n    if(rangeEnd && globalIndex < this.characters.length) {\n      const nextBlockGlobalIndex = this.getGlobalIndex(firstBlockEnd[0] + 1, 0);\n      if(globalIndex === nextBlockGlobalIndex) {\n        return [ firstBlockEnd[0] + 1, 0 ];\n      }\n    }\n    return firstBlockEnd;\n  }\n\n  getCharacterMask(index, position, rangeSelect) {\n    const globalIndex = this.getGlobalIndex(index, position);\n\n    if(globalIndex === 0) {\n      if(this.characters.length > 0)\n        return this.characters[0].m;\n      return 0;\n    }\n    else if(rangeSelect) {\n      return this.characters[globalIndex].m;\n    }\n    return this.characters[globalIndex - 1].m;\n  }\n\n  insert(index, position, insertedString, mask) {\n    const globalIndex = this.getGlobalIndex(index, position);\n    const rightBuffer = this.characters.splice(globalIndex);\n\n    for(const char of insertedString) {\n      this.characters.push({\n        m: mask,\n        c: char\n      });\n    }\n\n    const globalCaretPosition = this.characters.length;\n    for(const character of rightBuffer) {\n      this.characters.push(character);\n    }\n\n    this.caretBlockIndex = null;\n    this.caretBlockPosition = null;\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  delete(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n    const deleteLength = globalRightIndex - globalLeftIndex;\n\n    if(globalLeftIndex < 0) {\n      return [ 0, 0 ];\n    }\n\n    this.characters.splice(globalLeftIndex, deleteLength);\n    const globalCaretPosition = globalLeftIndex;\n\n    this.caretBlockIndex = null;\n    this.caretBlockPosition = null;\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  rangeMaskUpdate(leftIndex, leftPosition, rightIndex, rightPosition, bit, on) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n\n    for(let i = globalLeftIndex; i < globalRightIndex; i++) {\n      this.characters[i].m = MaskManager.editorMergeBit(bit, on, this.characters[i].m);\n    }\n\n    this.caretBlockIndex = null;\n    this.caretBlockPosition = null;\n    this.updateBlocks();\n\n    const [ newLeftIndex, newLeftPosition ] = this.getIndexAndPosition(globalLeftIndex);\n    const [ newRightIndex, newRightPosition ] = this.getIndexAndPosition(globalRightIndex);\n    return [ newLeftIndex, newLeftPosition, newRightIndex, newRightPosition ];\n  }\n\n  addCaretBlock(index, position) {\n    this.caretBlockIndex = index;\n    this.caretBlockPosition = position;\n    this.updateBlocks();\n  }\n\n  /* Removes the caret block, and appropriately modifies caretInfo if provided */\n  removeCaretBlock(caretInfo) {\n    if(this.caretBlockIndex !== null) {\n      this.caretBlockIndex = null;\n      this.caretBlockPosition = null;\n\n      if(caretInfo) {\n        if(caretInfo.rangeSelect) {\n          let leftGlobalIndex = this.getGlobalIndex(\n            caretInfo.leftIndex, caretInfo.leftPosition\n          );\n\n          let rightGlobalIndex = this.getGlobalIndex(\n            caretInfo.rightIndex, caretInfo.rightPosition\n          );\n\n          this.updateBlocks();\n\n          [ caretInfo.leftIndex, caretInfo.leftPosition ] =\n            this.getCorrectedIndexAndPosition(null, null, false, leftGlobalIndex);\n          [ caretInfo.rightIndex, caretInfo.rightPosition ] =\n            this.getCorrectedIndexAndPosition(null, null, true, rightGlobalIndex);\n        }\n        else {\n          let globalIndex = this.getGlobalIndex(caretInfo.index, caretInfo.position);\n          this.updateBlocks();\n          [ caretInfo.index, caretInfo.position ] =\n            this.getCorrectedIndexAndPosition(null, null, false, globalIndex);\n        }\n      }\n      else {\n        this.updateBlocks();\n      }\n    }\n  }\n\n  isEmpty() {\n    return this.characters.length === 0;\n  }\n\n  /* Returns true if content is empty, or the caret position is at the end of\n  a block and the last character is a newline. This is important for mobile. */\n  atBlockNewlineEnd(index, position) {\n    if(this.isEmpty()) return true;\n    let content = this.blocks[index].c;\n    if(content.length === position && content[position - 1] === String.fromCharCode(10))\n       return true;\n    return false;\n  }\n\n  updateBlocks() {\n    this.blocks = [];\n    this.blockStarts = [];\n\n    let currentMask = this.characters.length > 0 ? this.characters[0].m : 0;\n    let characterBuffer = [];\n    let blockPosition = 0;\n    this.characters.forEach((character, i) => {\n      /* For math mode, replace newlines with spaces */\n      if(character.m === ContentType.MATH && character.c === String.fromCharCode(10)) {\n        character.c = ' ';\n      }\n\n      let caretBlockIncoming = this.blocks.length === this.caretBlockIndex &&\n        blockPosition === this.caretBlockPosition;\n\n      /* End of this block */\n      if(character.m !== currentMask || caretBlockIncoming) {\n        if(characterBuffer.length === 0) {\n          currentMask = 0;\n        }\n\n        this.blocks.push({\n          m: currentMask,\n          c: characterBuffer.join('')\n        });\n        this.blockStarts.push(i - characterBuffer.length);\n\n        blockPosition = character.c.length;\n        currentMask = character.m;\n        characterBuffer = [ character.c ];\n      }\n      else {\n        characterBuffer.push(character.c);\n        blockPosition += character.c.length;\n      }\n    });\n\n    this.blocks.push({\n      m: currentMask,\n      c: characterBuffer.join('')\n    });\n    this.blockStarts.push(this.characters.length - characterBuffer.length);\n\n    /* Extra newline character sets correct caret positioning */\n    this.blocks.push({\n      m: 0,\n      c: String.fromCharCode(10)\n    });\n\n    this.blockStarts.push(this.characters.length);\n  }\n\n  getContent() {\n    return this.blocks;\n  }\n}\n\nexport default VirtualTextEditor;\n","import React, { useEffect, useMemo } from 'react';\nimport Utils from '../../Utils';\n\nfunction MathBlock({ id, index, content, rendered }) {\n  let textContent = rendered ? '\\\\(' + content + '\\\\)' : content;\n  let className = rendered ? 'Askd-te-MATHJAX' : 'Askd-te-MATH';\n  let position = rendered ? content.length : null;\n\n  /* MathJax must be re-rendered when one of the following attributes change */\n  let changeKey = useMemo(() => {\n    return {\n      id: id, rendered: rendered, blockLength: content.length\n    };\n  }, [ id, rendered, content.length ]);\n\n  /* Render MathJax and put a zero-width space before and after,\n  in order to help caret selection */\n  useEffect(() => {\n    if(changeKey.rendered) {\n      Utils.renderMathJax([`#${changeKey.id}`]);\n\n      let blockElement = document.getElementById(changeKey.id);\n      blockElement.innerHTML = String.fromCharCode(8203) +\n        blockElement.innerHTML + String.fromCharCode(8203);\n    }\n  }, [changeKey]);\n\n  return (\n    <div className={className} id={id} index={index} position={position}>\n      { textContent }\n    </div>\n  );\n}\n\nexport default MathBlock;\n","import React, { Component } from 'react';\nimport ContentType from '../ContentType';\nimport MaskManager from '../MaskManager';\nimport MathBlock from './MathBlock';\n\nclass Block extends Component {\n  render() {\n    const block = this.props.block;\n    const editorId = this.props.id;\n    const selected = this.props.selected;\n    const index = this.props.index;\n    const content = block.c;\n\n    if(block.m === ContentType.MATH) {\n      return (\n        <MathBlock id={editorId + index} rendered={!selected} content={content}\n                   index={index} />\n      );\n    }\n\n    return (\n      <div className={MaskManager.getClassName(block.m)} id={editorId + index}\n           index={index}>\n        { content }\n      </div>\n    );\n  }\n}\n\nexport default Block;\n","import React from 'react';\nimport Block from './Block/Block';\n\nfunction TextEditorContent({ content, id, editable, caretInfo, handleBlur, handleFocus }) {\n  let contentElements = [];\n\n  content.forEach((block, i) => {\n    let selected = false;\n\n    if(editable && caretInfo.editorSelected) {\n      if(caretInfo.rangeSelect && caretInfo.leftIndex <= i && i <= caretInfo.rightIndex) {\n        selected = true;\n      }\n      if(!caretInfo.rangeSelect && caretInfo.index === i && !caretInfo.insideCaretBlock) {\n        selected = true;\n      }\n    }\n\n    contentElements.push(\n      <Block block={block} id={id} index={i} key={i} selected={selected} />\n    );\n  });\n\n  let outerClassName = 'Askd-text-editor-text';\n  if(editable) {\n    outerClassName += ' Askd-text-editor-editable';\n  }\n  else {\n    outerClassName += ' Askd-text-editor-uneditable';\n  }\n\n  return (\n    <div className={outerClassName} id={id} contentEditable={editable}\n        suppressContentEditableWarning=\"true\" spellCheck=\"false\"\n        onBlur={handleBlur} onFocus={handleFocus}>\n         { contentElements }\n    </div>\n  );\n}\n\nexport default TextEditorContent;\n","import ContentType from './ContentType';\n\nconst registerEventHandlers = (that) => {\n  that.textEditor.addEventListener('keydown', async (event) => {\n    let mathSelected = (that.state.editorMask & ContentType.MATH) > 0;\n\n    /* TBD, bro who even uses that button lol */\n    if(event.key === 'Delete') {\n      event.preventDefault();\n    }\n    else if(event.key === 'Backspace' && !that.composing) {\n      await that.delete();\n      event.preventDefault();\n    }\n    else if(event.key === 'Enter' && !that.composing && !mathSelected) {\n      await that.insert(String.fromCharCode(10));\n      event.preventDefault();\n    }\n  });\n\n  that.textEditor.addEventListener('beforeinput', async (event) => {\n    if(event.isComposing || that.composing) {\n      return;\n    }\n\n    event.preventDefault();\n\n    /* Mobile autocorrect and word selection from a menu */\n    if(event.inputType === 'insertReplacementText') {\n      that.caretInfo.rangeSelect = true;\n      const insertedString = event.dataTransfer.getData('text');\n      await that.insert(insertedString);\n    }\n    /* Generic event with a valid 'data'; things like undo/redo operations and\n       drag and drop are TBD */\n    else if(event.data) {\n      await that.insert(event.data);\n    }\n  });\n\n  that.textEditor.addEventListener('paste', async (event) => {\n    event.preventDefault();\n\n    const pasteText = event.clipboardData.getData('Text');\n    await that.insert(pasteText);\n  });\n\n  that.textEditor.addEventListener('compositionstart', async (event) => {\n    if(that.caretInfo.rangeSelect) {\n      await that.delete();\n    }\n\n    that.composing = true;\n    that.compositionIndex = that.caretInfo.index;\n    that.compositionPosition = that.caretInfo.position;\n  });\n\n  that.textEditor.addEventListener('compositionend', async (event) => {\n    if(!that.composing) {\n      return;\n    }\n\n    that.composing = false;\n    await that.compositionInsert(event.data);\n  });\n\n  let handleSelectionChange = (event) => {\n    if(that.composing) {\n      return;\n    }\n\n    let selectionChanged = false;\n    try {\n      const selection = window.getSelection();\n      const anchorNode = selection.anchorNode;\n\n      if(that.textEditor.contains(anchorNode)) {\n        const newCaretInfo = that.caret.getInfo();\n        for(const key in newCaretInfo) {\n          if(newCaretInfo.hasOwnProperty(key) &&\n             that.caretInfo[key] !== newCaretInfo[key]) {\n            selectionChanged = true;\n          }\n        }\n      }\n    }\n    catch(err) {\n      /* anchorElement isn't a div inside the text editor */\n    }\n\n    if(selectionChanged) {\n      that.selectionChanged();\n    }\n  };\n\n  document.addEventListener('selectionchange', handleSelectionChange);\n\n  return handleSelectionChange;\n}\n\nexport default registerEventHandlers;\n","import React, { Component } from 'react';\nimport Caret from './Caret';\nimport Toolbar from './Toolbar';\nimport VirtualTextEditor from './VirtualTextEditor';\nimport TextEditorContent from './TextEditorContent';\nimport MaskManager from './MaskManager';\nimport Utils from '../Utils';\nimport registerEventHandlers from './registerEventHandlers';\nimport { v4 as uuidv4 } from 'uuid';\nimport '../css/TextEditor.css';\n\nclass TextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.id = `Askd-text-editor-${uuidv4()}`;\n    this.virtualTextEditor = new VirtualTextEditor(this.props.initialContent);\n    this.caret = new Caret(this.id);\n\n    this.contentChanged = false;\n    this.caretInfo = {\n      rangeSelect: false,\n      index: 0,\n      position: 0,\n      editorSelected: false,\n      insideCaretBlock: false\n    };\n\n    this.composing = false;\n    this.compositionIndex = null;\n    this.compositionPosition = null;\n\n    this.state = {\n      content: this.virtualTextEditor.getContent(),\n      editorMask: 0\n    };\n\n    this.toolbarUpdate = this.toolbarUpdate.bind(this);\n  }\n\n  async delete() {\n    if(!this.caretInfo.rangeSelect) {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.index, this.caretInfo.position - 1,\n        this.caretInfo.index, this.caretInfo.position\n      );\n    }\n    else {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n        this.caretInfo.rightIndex, this.caretInfo.rightPosition\n      );\n    }\n\n    this.caretInfo.rangeSelect = false;\n    await this.insertionUpdate();\n  }\n\n  async insert(newString) {\n    this.updateCaretInfo();\n\n    if(this.caretInfo.rangeSelect) {\n      await this.delete();\n    }\n\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.caretInfo.index, this.caretInfo.position, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.insertionUpdate();\n  }\n\n  async compositionInsert(newString) {\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.compositionIndex, this.compositionPosition, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.insertionUpdate();\n  }\n\n  async rangeMaskUpdate(bit, on) {\n    if(!this.caretInfo.rangeSelect) {\n      return;\n    }\n\n    [ this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition ] =\n    this.virtualTextEditor.rangeMaskUpdate(\n      this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition, bit, on\n    );\n\n    await this.insertionUpdate();\n  }\n\n  async insertionUpdate() {\n    this.contentChanged = true;\n    this.caret.removeCaretBlock();\n    this.caretInfo.insideCaretBlock = false;\n\n    await this.updateContent();\n    this.caret.setInfo(this.caretInfo, this.state.editorMask);\n    await this.selectionChanged();\n  }\n\n  async updateContent() {\n    await Utils.setStatePromise(this, {\n      content: this.virtualTextEditor.getContent()\n    });\n  }\n\n  async updateMask(newMask) {\n    await Utils.setStatePromise(this, {\n      editorMask: newMask\n    });\n  }\n\n  async toolbarUpdate(bit) {\n    this.caretInfo.editorSelected = true;\n\n    const on = (this.state.editorMask & bit) === 0;\n    const newToolbarMask = MaskManager.toolbarMergeBit(bit, on, this.state.editorMask);\n\n    if(!this.caretInfo.rangeSelect) {\n      const leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.index, this.caretInfo.position, false\n      );\n\n      let previouslyInsideCaretBlock = this.caretInfo.insideCaretBlock;\n      this.caretInfo.insideCaretBlock = newToolbarMask !== leftCharacterMask ||\n        this.virtualTextEditor.atBlockNewlineEnd(\n          this.caretInfo.index, this.caretInfo.position\n        );\n\n      if(this.caretInfo.insideCaretBlock) {\n        this.virtualTextEditor.addCaretBlock(\n          this.caretInfo.index, this.caretInfo.position\n        );\n        await this.updateContent();\n      }\n      else {\n        if(previouslyInsideCaretBlock) {\n          this.virtualTextEditor.removeCaretBlock();\n          await this.updateContent();\n        }\n      }\n\n      await this.updateMask(newToolbarMask);\n      this.caret.setInfo(this.caretInfo, this.state.editorMask);\n    }\n    else {\n      await this.rangeMaskUpdate(bit, on);\n    }\n  }\n\n  async selectionChanged() {\n    let previouslyInsideCaretBlock = this.caretInfo.insideCaretBlock;\n    this.updateCaretInfo();\n\n    if(previouslyInsideCaretBlock) {\n      this.virtualTextEditor.removeCaretBlock(this.caretInfo);\n      this.caret.removeCaretBlock();\n      await this.updateContent();\n      this.caret.setInfo(this.caretInfo, this.state.editorMask);\n    }\n\n    if(this.caretInfo.rangeSelect) {\n      let updateCaret = false;\n      const leftElement = document.getElementById(this.id + this.caretInfo.leftIndex);\n      const rightElement = document.getElementById(this.id + this.caretInfo.rightIndex);\n\n      const leftElementLength = this.state.content[this.caretInfo.leftIndex].c.length;\n      const atLeftElementEnd = (this.caretInfo.leftPosition === leftElementLength);\n      const atRightElementBegin = (this.caretInfo.rightPosition === 0);\n\n      if(leftElement.classList.contains('Askd-te-MATHJAX') && !atLeftElementEnd)\n        updateCaret = true;\n      if(rightElement.classList.contains('Askd-te-MATHJAX') && !atRightElementBegin)\n        updateCaret = true;\n\n      let leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition, true\n      );\n      await this.updateMask(leftCharacterMask);\n\n      if(updateCaret) {\n        this.caret.setInfo(this.caretInfo, this.state.editorMask);\n      }\n    }\n    else {\n      let leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.index, this.caretInfo.position, false\n      );\n      await this.updateMask(leftCharacterMask);\n      this.caret.setInfo(this.caretInfo, this.state.editorMask);\n    }\n  }\n\n  updateCaretInfo() {\n    const newCaretInfo = this.caret.getInfo();\n    this.caretInfo.editorSelected = true;\n\n    /* Maintain previous info for the other selection type */\n    if(newCaretInfo.rangeSelect) {\n      [ this.caretInfo.leftIndex, this.caretInfo.leftPosition ] =\n        this.virtualTextEditor.getCorrectedIndexAndPosition(\n          newCaretInfo.leftIndex, newCaretInfo.leftPosition, false\n        );\n\n      [ this.caretInfo.rightIndex, this.caretInfo.rightPosition ] =\n        this.virtualTextEditor.getCorrectedIndexAndPosition(\n          newCaretInfo.rightIndex, newCaretInfo.rightPosition, true\n        );\n\n      this.caretInfo.rangeSelect = true;\n      this.caretInfo.insideCaretBlock = false;\n    }\n    else {\n      [ this.caretInfo.index, this.caretInfo.position ] =\n        this.virtualTextEditor.getCorrectedIndexAndPosition(\n          newCaretInfo.index, newCaretInfo.position, false\n        );\n\n      if(this.virtualTextEditor.atBlockNewlineEnd(\n        this.caretInfo.index, this.caretInfo.position\n      )) {\n        newCaretInfo.insideCaretBlock = true;\n      }\n\n      this.caretInfo.rangeSelect = false;\n      this.caretInfo.insideCaretBlock = newCaretInfo.insideCaretBlock;\n    }\n  }\n\n  componentDidMount() {\n    this.textEditor = document.getElementById(this.id);\n    this.outerTextEditor = document.getElementById(this.id + '!');\n    this.handleSelectionChange = registerEventHandlers(this);\n\n    if(this.props.focusOnMount) {\n      this.textEditor.focus();\n    }\n  }\n\n  componentDidUpdate() {\n    if(!this.contentChanged) {\n      return;\n    }\n\n    /* The rendered text must be manually sanitized */\n    let junkNodes = [];\n    for(const node of this.textEditor.childNodes) {\n      if(node.nodeType === Node.TEXT_NODE || node.nodeName === 'BR' ||\n         node.nodeName === 'SPAN') {\n        junkNodes.push(node);\n      }\n    }\n\n    for(const node of junkNodes) {\n      this.textEditor.removeChild(node);\n    }\n\n    for(let i = 0; i < this.state.content.length; i++) {\n      let childElement = this.textEditor.children[i];\n      if(childElement.classList.contains('Askd-te-MATHJAX')) {\n        continue;\n      }\n\n      if(childElement.innerHTML !== this.state.content[i].c) {\n        childElement.childNodes[0].nodeValue = this.state.content[i].c;\n      }\n    }\n\n    /* Callback with new content */\n    if(this.props.onChange) {\n      this.props.onChange(this.state.content);\n    }\n\n    this.contentChanged = false;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    document.removeEventListener('selectionchange', this.handleSelectionChange);\n  }\n\n  render() {\n    let handleBlur = (event) => {\n      /* Don't blur if event.relatedTarget is one of the toolbar buttons or\n      contained within the 'textarea' */\n      if(event.relatedTarget) {\n        let isIcon = event.relatedTarget.classList.contains('Askd-tb-icon') &&\n           this.outerTextEditor.contains(event.relatedTarget);\n        let contained = this.textEditor.contains(event.relatedTarget);\n\n        if(isIcon || contained) {\n          return;\n        }\n      }\n\n      if(this.caretInfo.editorSelected) {\n        this.caretInfo.editorSelected = false;\n        if(this.caretInfo.insideCaretBlock) {\n          this.caretInfo.insideCaretBlock = false;\n          this.caret.removeCaretBlock();\n          this.virtualTextEditor.removeCaretBlock();\n          this.updateContent();\n        }\n        else {\n          this.forceUpdate();\n        }\n      }\n    };\n\n    return (\n      <div className=\"Askd-text-editor\" id={this.id + '!'}>\n        <Toolbar mask={this.state.editorMask} callback={this.toolbarUpdate} />\n        <TextEditorContent content={this.state.content} id={this.id}\n                           editable={true} handleBlur={handleBlur}\n                           handleFocus={this.handleSelectionChange}\n                           caretInfo={this.caretInfo} />\n      </div>\n    );\n  }\n}\n\nexport default TextEditor;\n","import React, { Component } from 'react';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass DeleteMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: ''\n    };\n    this.randomCode = uuidv4();\n\n    this.close = this.close.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async deleteNote(event) {\n    event.preventDefault();\n\n    const confirmCode = event.target.confirmCode.value;\n    if(confirmCode !== this.randomCode) {\n      await Utils.componentSetError(this, \"Your confirmation code doesn't match!\");\n      return;\n    }\n\n    try {\n      const username = await UserAuthApi.getUsername();\n      const platform = this.props.platform;\n      const problemId = this.props.problemInfo.problemId;\n\n      await this.setLoading(true);\n      await NotesApi.deleteNote(username, platform, problemId);\n      this.props.history.push(`/users/${username}`);\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n      await this.setLoading(false);\n    }\n  }\n\n  async setLoading(isLoading) {\n    await Utils.setStatePromise(this, {\n      loading: isLoading\n    });\n  }\n\n  render() {\n    let submitButtonClassName = 'Askd-button';\n    if(this.state.loading) {\n      submitButtonClassName += ' Askd-form-loading';\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\" />\n        <div className=\"Edit-note-delete-menu Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Are you sure you want to permanently delete this note?</h2>\n          <p>\n            This action cannot be undone! Please enter the following\n            code as confirmation.\n          </p>\n          <form className=\"Askd-form\" onSubmit={this.deleteNote}>\n            <label htmlFor=\"confirmCode\">{this.randomCode}</label>\n            <input autoComplete=\"off\" type=\"text\" name=\"confirmCode\"\n                   key=\"confirmCode\" id=\"confirmCode\" />\n\n            <input className={submitButtonClassName} type=\"submit\" value=\"Delete\"\n                   disabled={this.state.loading} />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DeleteMenu;\n","import React, { Component } from 'react';\nimport { Prompt } from 'react-router';\nimport TextEditor from '../TextEditor/TextEditor';\nimport DeleteMenu from './DeleteMenu';\nimport SolvedState from '../Enum/SolvedState';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\n\nfunction remindUserToSave(event) {\n  event.preventDefault();\n  event.returnValue = '';\n}\n\nclass EditNoteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const noteInfo = this.props.noteInfo;\n    this.title = noteInfo.title;\n    this.solved = noteInfo.solved;\n    this.content = JSON.parse(noteInfo.content);\n    this.lastSaved = new Date(noteInfo.editedTime);\n\n    this.state = {\n      published: noteInfo.published,\n      disableEditButtons: false,\n      saved: true,\n      loadingSave: false,\n      loadingPublish: false,\n      showDeleteMenu: false\n    };\n\n    this.saveNote = this.saveNote.bind(this);\n    this.togglePublishNote = this.togglePublishNote.bind(this);\n    this.toggleDeleteMenu = this.toggleDeleteMenu.bind(this);\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleSolvedChange = this.handleSolvedChange.bind(this);\n    this.handleContentChange = this.handleContentChange.bind(this);\n  }\n\n  async saveOrPublishNote(published) {\n    const username = await UserAuthApi.getUsername();\n    const platform = this.props.platform;\n    const problemId = this.props.problemInfo.problemId;\n    const title = this.title;\n    const solved = this.solved;\n    const content = this.content;\n\n    await NotesApi.editNote(username, platform, problemId, title, solved,\n                            content, published);\n\n    this.lastSaved = new Date();\n    window.onbeforeunload = null;\n\n    await Utils.setStatePromise(this, {\n      published: published,\n      disableEditButtons: false,\n      saved: true,\n      loadingSave: false,\n      loadingPublish: false\n    });\n  }\n\n  async saveNote(event) {\n    await Utils.setStatePromise(this, {\n      disableEditButtons: true,\n      loadingSave: true\n    });\n\n    await this.saveOrPublishNote(this.state.published);\n  }\n\n  async togglePublishNote(event) {\n    await Utils.setStatePromise(this, {\n      disableEditButtons: true,\n      loadingPublish: true\n    });\n\n    await this.saveOrPublishNote(!this.state.published);\n  }\n\n  async toggleDeleteMenu(event) {\n    await Utils.setStatePromise(this, {\n      showDeleteMenu: !this.state.showDeleteMenu\n    });\n  }\n\n  handleTitleChange(event) {\n    this.title = event.target.value;\n  }\n\n  handleSolvedChange(event) {\n    this.solved = event.target.value;\n  }\n\n  async handleContentChange(newContent) {\n    this.content = newContent;\n\n    if(this.state.saved) {\n      await Utils.setStatePromise(this, {\n        saved: false\n      });\n\n      window.onbeforeunload = remindUserToSave;\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let savedText = this.state.saved ? 'All changes saved! - ' : 'Last saved on ';\n    savedText += this.lastSaved.toLocaleString();\n\n    const togglePublishText = this.state.published ? 'Unpublish' : 'Publish!';\n    let saveButtonClass = 'Askd-button Askd-not-fullwidth';\n    let publishButtonClass = 'Askd-button Askd-not-fullwidth';\n\n    if(this.state.loadingSave) saveButtonClass += ' Askd-form-loading';\n    if(this.state.loadingPublish) publishButtonClass += ' Askd-form-loading';\n\n    return (\n      <>\n        <Prompt when={!this.state.saved}\n                message='Are you sure you want to leave? You have unsaved changes.' />\n        {\n          this.state.showDeleteMenu &&\n          <DeleteMenu exitCallback={this.toggleDeleteMenu}\n                      platform={this.props.platform} history={this.props.history}\n                      problemInfo={this.props.problemInfo} />\n        }\n        <form className=\"Edit-note-form Askd-form Module-outer-space\">\n          <input className=\"Edit-note-title\" name=\"title\" type=\"text\"\n                 defaultValue={this.title} placeholder=\"Title\"\n                 onChange={this.handleTitleChange} />\n\n          <select name=\"solved\" id=\"note-solved\" onChange={this.handleSolvedChange}\n                  defaultValue={this.solved}>\n            <option value={SolvedState.SOLVED.value}>Solved</option>\n            <option value={SolvedState.UPSOLVED.value}>Upsolved</option>\n            <option value={SolvedState.UPSOLVED_HELP.value}>Upsolved with help</option>\n            <option value={SolvedState.UNSOLVED.value}>Unsolved</option>\n          </select>\n\n          <TextEditor initialContent={this.content}\n                      onChange={this.handleContentChange} />\n          <p className=\"Edit-note-saved-text\">{savedText}</p>\n          <div className=\"Edit-note-bottom-buttons\">\n            <input className={saveButtonClass} type=\"button\" value=\"Save\"\n                   onClick={this.saveNote}\n                   disabled={this.state.disableEditButtons} />\n\n            <input className={publishButtonClass} type=\"button\"\n                   value={togglePublishText} onClick={this.togglePublishNote}\n                   disabled={this.state.disableEditButtons} />\n          </div>\n          <div className=\"Edit-note-delete\">\n            <button type=\"button\" className=\"Askd-form-link Askd-form-link-bottom\"\n                    onClick={this.toggleDeleteMenu}>\n              Permanently delete this note?\n            </button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default EditNoteForm;\n","import React, { Component } from 'react';\nimport ProblemsApi from '../Api/ProblemsApi';\n\nclass ProblemInfo extends Component {\n  render() {\n    const info = this.props.info;\n    const problemDisplayName = ProblemsApi.getProblemDisplayName(info);\n\n    return (\n      <div className=\"Edit-note-problem-info\">\n        <div className=\"Module-info-box Module-outer-space\">\n          <h4>\n            { problemDisplayName }\n          </h4>\n          <p className=\"Edit-note-contest\">{info.contestName}</p>\n          <a className=\"Askd-form-link\" href={info.link} target=\"_blank\"\n             rel=\"noopener noreferrer\">\n            Problem link\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProblemInfo;\n","import React from 'react';\nimport CreateLoadingComponent from '../HOC/CreateLoadingComponent';\nimport LoadState from '../Enum/LoadState';\nimport LoadingSpinner from '../Misc/LoadingSpinner';\nimport EditNoteForm from './EditNoteForm';\nimport ProblemInfo from './ProblemInfo';\nimport ProblemsApi from '../Api/ProblemsApi'\nimport NotesApi from '../Api/NotesApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/EditNote.css';\n\nasync function getNoteAndProblemData(props, params) {\n  const username = await UserAuthApi.getUsername();\n  const platform = props.match.params.platform;\n  const contestId = props.match.params.contestId;\n  const problemCode = props.match.params.problemCode;\n  const problemId = `${contestId}#${problemCode}`;\n\n  const problemInfo = await ProblemsApi.getProblemInfo(platform, problemId);\n  const noteInfo = await NotesApi.getNoteInfo(username, platform, problemId);\n  \n  return {\n    problemInfo: problemInfo,\n    noteInfo: noteInfo\n  };\n}\n\nfunction EditNote({ otherProps, info, screen }) {\n  const platform = otherProps.match.params.platform;\n\n  if(screen === LoadState.NOT_FOUND) {\n    return (\n      <div className=\"Module-description\">\n        <h2>Note not found!</h2>\n      </div>\n    );\n  }\n  else if(screen === LoadState.LOADING) {\n    return (\n      <LoadingSpinner />\n    );\n  }\n  else {\n    return (\n      <>\n        <ProblemInfo info={info.problemInfo} platform={platform} />\n        <EditNoteForm problemInfo={info.problemInfo}\n                      noteInfo={info.noteInfo} platform={platform}\n                      history={otherProps.history} />\n      </>\n    );\n  }\n}\n\nexport default CreateLoadingComponent(\n  getNoteAndProblemData, null, 'NoteNotFound', EditNote\n);\n","import Api from './Api';\n\nclass LikesApi {\n  static async sendLike(username, noteAuthor, platform, problemId, likedStatus) {\n    const options = {\n      username: username,\n      noteAuthor: noteAuthor,\n      platform: platform,\n      problemId: problemId,\n      likedStatus: likedStatus\n    };\n\n    return await Api.putJson('likes/notes', options);\n  }\n}\n\nexport default LikesApi;\n","import React, { useState } from 'react';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/Misc/LikeDislike.css';\n\nfunction LikeDislike({ initialScore, initialStatus, likeCallback }) {\n  let [ score, setScore ] = useState(initialScore);\n  let [ status, setStatus ] = useState(initialStatus);\n\n  let likeButtonClass = 'Like-button';\n  if(status > 0) {\n    likeButtonClass += ' Like-button-liked';\n  }\n\n  let toggleStatus = async () => {\n    const username = await UserAuthApi.getUsername();\n    if(!username) {\n      window.suggestUserRegister();\n      return;\n    }\n\n    if(status > 0) {\n      setStatus(0);\n      setScore(score - 1);\n      likeCallback(0);\n    }\n    else {\n      setStatus(1);\n      setScore(score + 1);\n      likeCallback(1);\n    }\n  };\n\n  return (\n    <div className=\"Like-dislike\">\n      <button className={likeButtonClass} onClick={toggleStatus}>\n        <span className=\"icon-thumb_up_alt\" />\n        <span className=\"Like-dislike-score\">{score}</span>\n      </button>\n    </div>\n  );\n}\n\nexport default LikeDislike;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport LikesApi from '../Api/LikesApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport TextEditorContent from '../TextEditor/TextEditorContent';\nimport LikeDislike from '../Misc/LikeDislike';\nimport '../css/PublicNoteInfo.css';\n\nfunction PublicNoteInfo({ info }) {\n  const content = JSON.parse(info.content);\n  const editedTimestamp = (new Date(info.editedTime)).toLocaleString();\n  const solvedClass = ProblemsApi.getSolvedStateCssClass(info.solved);\n\n  let likeCallback = async (likedStatus) => {\n    const username = await UserAuthApi.getUsername();\n    const noteAuthor = info.username;\n    const platform = info.platform;\n    const problemId = info.problemSk;\n\n    await LikesApi.sendLike(username, noteAuthor, platform, problemId, likedStatus);\n  };\n\n  return (\n    <div className=\"Public-note-info Module-outer-space\">\n      <h3 className=\"Module-space-heading\">\n        <span className={`Public-note-solved-tag User-note-info-${solvedClass}`}>\n          <span className=\"User-note-info-tag User-note-solved-indicator\" />\n        </span>\n        {info.title}\n      </h3>\n      <p className=\"Module-space-text\">\n        Written by <Link className=\"Username\" to={`/users/${info.username}`}>\n          {info.username}\n        </Link>\n      </p>\n      <div className=\"Askd-text-editor\">\n        <TextEditorContent content={content} id='Askd-public-note' editable={false} />\n      </div>\n      <p className=\"Module-space-text\">\n        Last edited on {editedTimestamp}\n      </p>\n      <LikeDislike initialScore={info.likeCount} initialStatus={info.likedStatus}\n                   likeCallback={likeCallback} />\n    </div>\n  );\n}\n\nexport default PublicNoteInfo;\n","import Api from './Api';\n\nclass CommentsApi {\n  static async getNoteComments(noteAuthor, platform, problemId) {\n    const options = {\n      noteAuthor: noteAuthor,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.getJson('comments', options);\n  }\n\n  static async addNoteComment(username, noteAuthor, platform, problemId,\n                              rootReplyId, replyId, content) {\n    const options = {\n      username: username,\n      noteAuthor: noteAuthor,\n      platform: platform,\n      problemId: problemId,\n      rootReplyId: rootReplyId,\n      replyId: replyId,\n      content: JSON.stringify(content)\n    };\n\n    return await Api.postJson('comments', options);\n  }\n}\n\nexport default CommentsApi;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport TextEditorContent from '../TextEditor/TextEditorContent';\nimport Utils from '../Utils';\n\nfunction Comment({ info, replyUsername, subscribeToAvatar, replyCallback }) {\n  const [ avatarData, setAvatarData ] = useState(null);\n\n  useEffect(() => {\n    if(subscribeToAvatar) {\n      subscribeToAvatar(setAvatarData);\n    }\n  }, [subscribeToAvatar]);\n\n  const id = info.commentId;\n  const authorUsername = info.username;\n  const timeAgoString = Utils.getTimeAgoString(info.creationTime);\n  const content = JSON.parse(info.content);\n\n  return (\n    <div id={id} className=\"Comment-section-comment Module-outer-space\">\n      {\n        replyUsername &&\n        <span className=\"Comment-section-reply-username\">\n          <Link className=\"Username\" to={`/users/${replyUsername}`}>\n            {replyUsername}\n          </Link>\n          <span className=\"icon-reply\" />\n        </span>\n      }\n      {\n        avatarData &&\n        <img className=\"Comment-section-avatar\" src={avatarData} alt=\"avatar\" />\n      }\n      <div className=\"Comment-section-comment-body\">\n        <Link className=\"Username\" to={`/users/${authorUsername}`}>\n          {authorUsername}\n        </Link>\n        <span className=\"Comment-section-timestamp\">\n          {timeAgoString}\n        </span>\n        <TextEditorContent id={id + 'Z'} content={content}\n                           editable={false} />\n        <div className=\"Comment-section-comment-buttons\">\n          <span className=\"icon-thumb_up_alt\" />\n          <button className=\"Comment-section-reply-button Askd-button\"\n                  onClick={replyCallback}>\n            Reply\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Comment;\n","import React, { useState } from 'react';\nimport TextEditor from '../TextEditor/TextEditor';\n\nfunction CommentForm({ cancelCallback, addCallback, initialContent, updateCallback }) {\n  const [ commentContent, setCommentContent ] = useState(initialContent);\n  const [ addCommentLoading, setAddCommentLoading ] = useState(false);\n\n  const handleEditorChange = (newContent) => {\n    setCommentContent(newContent);\n    if(updateCallback) {\n      updateCallback(newContent);\n    }\n  };\n\n  const handleAddComment = async () => {\n    setAddCommentLoading(true);\n    const success = await addCallback(commentContent);\n    if(!success) {\n      setAddCommentLoading(false);\n    }\n  };\n\n  const textEmpty = !commentContent || commentContent[0].c.length === 0;\n\n  return (\n    <div className=\"Comment-section-add\">\n      <TextEditor focusOnMount={true} initialContent={commentContent}\n                  onChange={handleEditorChange} />\n      <div className=\"Askd-form\">\n        <input type=\"button\" value=\"Cancel\" className=\"Askd-button Askd-not-fullwidth\"\n               onClick={cancelCallback} />\n        <input type=\"button\" value=\"Comment\" disabled={textEmpty || addCommentLoading}\n               className=\"Askd-button Askd-not-fullwidth\" onClick={handleAddComment} />\n      </div>\n    </div>\n  );\n}\n\nexport default CommentForm;\n","import React, { useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport Comment from './Comment';\nimport CommentForm from './CommentForm';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nfunction RootComment({ info, addAvatarSubscriptions, replyCallback }) {\n  const [ editorActive, setEditorActive ] = useState(false);\n  const editorReplyInfo = useRef({\n    content: null,\n    replyId: null,\n    replyUsername: null\n  });\n\n  const handleCancelEditor = () => {\n    setEditorActive(false);\n  }\n\n  const editorUpdateCallback = (newContent) => {\n    editorReplyInfo.current.content = newContent;\n  };\n\n  const editorAddCallback = async () => {\n    return await replyCallback(\n      editorReplyInfo.current.content,\n      info.commentId,\n      editorReplyInfo.current.replyId\n    );\n  };\n\n  const createReplyHandler = (replyId, replyUsername) => {\n    return async () => {\n      const username = await UserAuthApi.getUsername();\n      if(!username) {\n        window.suggestUserRegister();\n        return;\n      }\n\n      editorReplyInfo.current.replyId = replyId;\n      editorReplyInfo.current.replyUsername = replyUsername;\n      setEditorActive(true);\n    };\n  }\n\n  let replyListItems = [];\n  let replyIdToUsername = {\n    [ info.commentId ]: info.username\n  };\n\n  for(let i = 0; i < info.replies.length; i++) {\n    const reply = info.replies[i];\n    const replyUsername = replyIdToUsername[reply.replyId];\n    const replyCallback = createReplyHandler(reply.commentId, reply.username);\n    const subscribeToAvatar = addAvatarSubscriptions[reply.username];\n\n    replyListItems.push(\n      <li key={i} className=\"Comment-section-reply-comment\">\n        <Comment info={reply} replyUsername={replyUsername}\n                 subscribeToAvatar={subscribeToAvatar}\n                 replyCallback={replyCallback} />\n      </li>\n    );\n    replyIdToUsername[reply.commentId] = reply.username;\n  }\n\n  const replyUsername = editorReplyInfo.current.replyUsername;\n  const replyCommentForm = (\n    <div className=\"Comment-section-reply-form\">\n      <span className=\"Comment-section-reply-username\">\n        <Link className=\"Username\" to={`/users/${replyUsername}`}>\n          {replyUsername}\n        </Link>\n        <span className=\"icon-reply\" />\n      </span>\n      <li className=\"Comment-section-reply-comment\">\n        <CommentForm cancelCallback={handleCancelEditor}\n                     updateCallback={editorUpdateCallback}\n                     addCallback={editorAddCallback}\n                     initialContent={editorReplyInfo.current.content} />\n      </li>\n    </div>\n  );\n\n  const rootCommentReplyCallback = createReplyHandler(\n    info.commentId, info.username\n  );\n  const rootCommentSubscribeToAvatar = addAvatarSubscriptions[info.username];\n\n  return (\n    <>\n      <Comment info={info} replyCallback={rootCommentReplyCallback}\n               subscribeToAvatar={rootCommentSubscribeToAvatar} />\n      <ol className=\"Comment-section-replies\">\n        { replyListItems }\n        { editorActive && replyCommentForm }\n      </ol>\n    </>\n  );\n}\n\nexport default RootComment;\n","import React, { useState, useRef } from 'react';\nimport CommentForm from './CommentForm';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nfunction AddCommentForm({ addCallback }) {\n  const [ editorActive, setEditorActive ] = useState(false);\n  const editorContent = useRef(null);\n  const inputRef = React.createRef();\n\n  const handleInactiveFocus = async (event) => {\n    const username = await UserAuthApi.getUsername();\n    if(!username) {\n      inputRef.current.blur();\n      window.suggestUserRegister();\n    }\n    else {\n      setEditorActive(true);\n    }\n  };\n\n  const handleCancelEditor = (event) => {\n    setEditorActive(false);\n  }\n\n  const updateCallback = (newContent) => {\n    editorContent.current = newContent;\n  }\n\n  if(!editorActive) {\n    return (\n      <div className=\"Comment-section-add\">\n        <input type=\"text\" placeholder=\"Write a comment...\"\n               onFocus={handleInactiveFocus} ref={inputRef} />\n      </div>\n    );\n  }\n  else {\n    return (\n      <CommentForm cancelCallback={handleCancelEditor} addCallback={addCallback}\n                   initialContent={editorContent.current}\n                   updateCallback={updateCallback} />\n    );\n  }\n}\n\nexport default AddCommentForm;\n","import CommentsApi from '../Api/CommentsApi';\nimport CreateCommentComponent from '../HOC/CreateCommentComponent';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nfunction getParamsFromProps(props) {\n  const noteAuthor = props.match.params.ownerUsername;\n  const platform = props.match.params.platform;\n  const contestId = props.match.params.contestId;\n  const problemCode = props.match.params.problemCode;\n  const problemId = `${contestId}#${problemCode}`;\n\n  return [ noteAuthor, platform, problemId ];\n}\n\nasync function getNoteComments(props, params) {\n  const [ noteAuthor, platform, problemId ] = getParamsFromProps(props);\n  const comments = await CommentsApi.getNoteComments(\n    noteAuthor, platform, problemId\n  );\n\n  return {\n    comments: comments\n  };\n}\n\nasync function addNoteComment(props, newCommentContent, rootReplyId, replyId) {\n  const username = await UserAuthApi.getUsername();\n\n  if(!username) {\n    window.suggestUserRegister();\n    return;\n  }\n\n  const [ noteAuthor, platform, problemId ] = getParamsFromProps(props);\n  const newCommentId = await CommentsApi.addNoteComment(\n    username, noteAuthor, platform, problemId, rootReplyId, replyId, newCommentContent\n  );\n\n  props.history.push(\n    `/notes/${noteAuthor}/${platform}/${problemId.replace('#', '/')}` +\n    `?linkedComment=${newCommentId}`\n  );\n\n  return true;\n}\n\nexport default CreateCommentComponent(getNoteComments, addNoteComment);\n","import React, { useRef, useEffect } from 'react';\nimport CreateLoadingComponent from './CreateLoadingComponent';\nimport LoadState from '../Enum/LoadState';\nimport RootComment from '../CommentForm/RootComment';\nimport AddCommentForm from '../CommentForm/AddCommentForm';\nimport UsersApi from '../Api/UsersApi';\nimport queryString from 'query-string';\nimport '../css/CommentSection.css';\n\nfunction CreateCommentComponent(getComments, addComment) {\n  function CommentComponent({ otherProps, info, screen }) {\n    let mounted = useRef(true);\n\n    useEffect(() => {\n      const urlParams = queryString.parse(window.location.search);\n      if(urlParams.linkedComment) {\n        const commentElement = document.getElementById(urlParams.linkedComment);\n        if(commentElement) {\n          commentElement.scrollIntoView();\n        }\n      }\n    });\n\n    useEffect(() => {\n      mounted.current = true;\n      return () => {\n        mounted.current = false;\n      };\n    });\n\n    const addCallback = async (newCommentContent) => {\n      return await addComment(otherProps, newCommentContent, null, null);\n    };\n\n    const replyCallback = async (newCommentContent, rootReplyId, replyId) => {\n      return await addComment(otherProps, newCommentContent, rootReplyId, replyId);\n    }\n\n    if(screen === LoadState.LOADING || otherProps.doNotShow) {\n      return null;\n    }\n    else {\n      let userAvatars = {};\n      let userAvatarSubscriptions = {};\n      let addAvatarSubscriptions = {};\n\n      const getUserAvatarData = async (username) => {\n        const userInfo = await UsersApi.getUserInfo(username, true);\n        userAvatars[username] = userInfo.avatarData;\n        for(const callback of userAvatarSubscriptions[username]) {\n          if(mounted.current) {\n            callback(userInfo.avatarData);\n          }\n        }\n      };\n\n      const initializeAvatarSystem = (username) => {\n        userAvatars[username] = null;\n        userAvatarSubscriptions[username] = [];\n        addAvatarSubscriptions[username] = (callback) => {\n          if(userAvatars[username] && mounted.current) {\n            callback(userAvatars[username]);\n          }\n          else {\n            userAvatarSubscriptions[username].push(callback);\n          }\n        };\n        getUserAvatarData(username);\n      };\n\n      const comments = info.comments;\n      for(const comment of comments) {\n        if(!(comment.username in userAvatars)) {\n          initializeAvatarSystem(comment.username);\n        }\n        for(const reply of comment.replies) {\n          if(!(reply.username in userAvatars)) {\n            initializeAvatarSystem(reply.username);\n          }\n        }\n      }\n\n      let commentsContent;\n      if(comments.length === 0) {\n        commentsContent = (\n          <p className=\"User-notes-nothing\">\n            There are no comments yet!\n          </p>\n        );\n      }\n      else {\n        let commentListItems = [];\n        for(let i = 0; i < comments.length; i++) {\n          const comment = comments[i];\n          commentListItems.push(\n            <li key={i} className=\"Comment-section-root-comment\">\n              <RootComment info={comment} replyCallback={replyCallback}\n                           addAvatarSubscriptions={addAvatarSubscriptions} />\n            </li>\n          );\n        }\n\n        commentsContent = (\n          <ol className=\"Comment-section-comments\">\n            { commentListItems }\n          </ol>\n        );\n      }\n\n      return (\n        <div className=\"Module-outer-space Comment-section\">\n          <h2 className=\"Module-heading\">\n            Comments\n          </h2>\n          <AddCommentForm addCallback={addCallback} />\n          { commentsContent }\n        </div>\n      );\n    }\n  }\n\n  return CreateLoadingComponent(getComments, null, null, CommentComponent);\n}\n\nexport default CreateCommentComponent;\n","import React from 'react';\nimport CreateLoadingComponent from '../HOC/CreateLoadingComponent';\nimport LoadingSpinner from '../Misc/LoadingSpinner';\nimport LoadState from '../Enum/LoadState';\nimport ProblemInfo from '../EditNote/ProblemInfo';\nimport PublicNoteInfo from './PublicNoteInfo';\nimport PublicNoteComments from './PublicNoteComments';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport NotesApi from '../Api/NotesApi';\n\nasync function getNoteAndProblemData(props, params) {\n  const ownerUsername = props.match.params.ownerUsername;\n  const platform = props.match.params.platform;\n  const contestId = props.match.params.contestId;\n  const problemCode = props.match.params.problemCode;\n  const problemId = `${contestId}#${problemCode}`;\n\n  const problemInfo = await ProblemsApi.getProblemInfo(platform, problemId);\n  const noteInfo = await NotesApi.getNoteInfo(ownerUsername, platform, problemId, true);\n\n  return {\n    problemInfo: problemInfo,\n    noteInfo: noteInfo\n  };\n}\n\nfunction PublicNote({ otherProps, info, screen }) {\n  const platform = otherProps.match.params.platform;\n  const doNotShowComments = !(screen === LoadState.DONE);\n  const commentsComponent = (\n    <PublicNoteComments match={otherProps.match} doNotShow={doNotShowComments}\n                        history={otherProps.history} key=\"comments\" />\n  );\n\n  if(screen === LoadState.NOT_FOUND) {\n    return (\n      <div className=\"Module-description\">\n        <h2>Note is either unpublished or does not exist!</h2>\n      </div>\n    );\n  }\n  else if(screen === LoadState.LOADING) {\n    return (\n      <>\n        <LoadingSpinner />\n        { commentsComponent }\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <ProblemInfo info={info.problemInfo} platform={platform} />\n        <PublicNoteInfo info={info.noteInfo} />\n        { commentsComponent }\n      </>\n    );\n  }\n}\n\nexport default CreateLoadingComponent(\n  getNoteAndProblemData, null, 'NoteNotFound', PublicNote\n);\n","import React from 'react';\nimport SearchSelect from './SearchSelect';\nimport UsersApi from '../Api/UsersApi';\n\nfunction SearchUserSelect({ callback, initialUsername, attachLabel }) {\n  const placeholderString = attachLabel ? null : 'Search by username';\n\n  return (\n    <div className=\"Askd-form Users-table-search\">\n      {\n        attachLabel &&\n        <label htmlFor=\"username\">\n          Username\n        </label>\n      }\n      <SearchSelect name='username' id='cp-username-search'\n                    search={UsersApi.getSearchUsers} staticKey='username'\n                    network={true} placeholder={placeholderString}\n                    initialSearchTerm={initialUsername}\n                    callback={callback} />\n    </div>\n  );\n}\n\nexport default SearchUserSelect;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/UsersTable.css';\n\nconst PAGE_SIZE = 50;\n\nfunction UsersTable({ currentPage, lastUpdated, users }) {\n  const updatedTime = (new Date(lastUpdated)).toLocaleString();\n\n  let userRows = [];\n  let index = (currentPage - 1) * PAGE_SIZE + 1;\n  for(const user of users) {\n    let contributionClassName = user.contribution > 0 ?\n      'Users-table-contributor' : '';\n    contributionClassName += ' Users-table-contribution';\n\n    userRows.push(\n      <tr key={index}>\n        <td>{index}</td>\n        <td className=\"Users-table-username\">\n          <Link className=\"Username\" to={`/users/${user.username}`}>\n            {user.username}\n          </Link>\n        </td>\n        <td className={contributionClassName}>{user.contribution}</td>\n      </tr>\n    );\n    index++;\n  }\n\n  return (\n    <div className=\"Users-table\">\n      <div className=\"Users-table-table\">\n        <div className=\"Users-table-table-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th className=\"Users-table-username\">Username</th>\n                <th className=\"Users-table-contribution\">Contribution</th>\n              </tr>\n            </thead>\n            <tbody>\n              {userRows}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <span className=\"Users-table-last-updated\">\n        Last updated on {updatedTime}\n      </span>\n    </div>\n  );\n}\n\nexport default UsersTable;\n","import React from 'react';\nimport CreateLoadingComponent from '../HOC/CreateLoadingComponent';\nimport LoadingSpinner from '../Misc/LoadingSpinner';\nimport Paginator from '../Paginator/Paginator';\nimport SearchUserSelect from '../SearchSelect/SearchUserSelect';\nimport UsersTable from './UsersTable';\nimport LoadState from '../Enum/LoadState';\nimport UsersApi from '../Api/UsersApi';\n\nasync function getUsers(props, page) {\n  const usersInfo = await UsersApi.getUsers(page);\n  return {\n    usersInfo: usersInfo\n  };\n}\n\nfunction UsersList({ otherProps, info, loadInfo, screen, currentParams }) {\n  let loadUserProfile = (username) => {\n    otherProps.history.push(`/users/${username}`);\n  };\n\n  const usersInfo = info ? info.usersInfo : null;\n\n  if(screen === LoadState.NOT_FOUND) {\n    return (\n      <div className=\"Module-description\">\n        Page not found!\n      </div>\n    );\n  }\n  else if(screen === LoadState.LOADING) {\n    return (\n      <>\n        <h2 className=\"Module-heading\">\n          Top contributors\n        </h2>\n        <SearchUserSelect callback={loadUserProfile} />\n        <div className=\"Module-space\">\n          <LoadingSpinner />\n        </div>\n      </>\n    );\n  }\n  else {\n    const paginator = (\n      <Paginator currentPage={currentParams} totalPages={usersInfo.totalPages}\n                 callback={loadInfo} />\n    );\n\n    return (\n      <>\n        <h2 className=\"Module-heading\">\n          Top contributors\n        </h2>\n        <SearchUserSelect callback={loadUserProfile} />\n        <div className=\"Module-space\">\n          <UsersTable currentPage={currentParams} users={usersInfo.users}\n                      lastUpdated={usersInfo.lastUpdated} />\n          { paginator }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default CreateLoadingComponent(\n  getUsers, 1, 'PageNotFound', UsersList\n);\n","import React from 'react';\nimport NotesApi from '../Api/NotesApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport UserNoteInfo from '../UserProfile/UserNoteInfo';\nimport Paginator from '../Paginator/Paginator';\nimport CreateLoadingComponent from '../HOC/CreateLoadingComponent';\nimport LoadingSpinner from '../Misc/LoadingSpinner';\nimport LoadState from '../Enum/LoadState';\n\nasync function getMostLikedNotes(props, params) {\n  const username = props.username;\n  const platform = props.platform;\n  const contestId = props.contestId;\n  const problemId = props.problemId;\n  const page = props.page;\n  const sortByRecent = props.sortByRecent;\n\n  let data;\n  if(sortByRecent) {\n    data = await NotesApi.getMostRecentNotes(page);\n  }\n  else {\n    data = await NotesApi.getMostLikedNotes(\n      username, platform, contestId, problemId, page\n    );\n  }\n  const loggedInUsername = await UserAuthApi.getUsername();\n\n  return {\n    ...data,\n    loggedInUsername: loggedInUsername\n  };\n}\n\nfunction NotesList({ otherProps, info, screen }) {\n  let innerContent;\n  if(screen === LoadState.NOT_FOUND) {\n    innerContent = (\n      <p className=\"User-notes-nothing\">\n        Page not found!\n      </p>\n    );\n  }\n  else if(screen === LoadState.LOADING) {\n    innerContent = (\n      <LoadingSpinner />\n    );\n  }\n  else {\n    const paginator = (\n      <Paginator currentPage={otherProps.page} totalPages={info.totalPages}\n                 callback={otherProps.pageChangeCallback} />\n    );\n\n    let noteInfoElements = [];\n    for(let i = 0; i < info.notes.length; i++) {\n      noteInfoElements.push(\n        <UserNoteInfo key={i} info={info.notes[i]} mostLikedMode={true}\n                      loggedInUsername={info.loggedInUsername}  />\n      );\n    }\n\n    if(noteInfoElements.length === 0) {\n      innerContent = (\n        <p className=\"User-notes-nothing\">\n          There are no published notes for that search!\n        </p>\n      );\n    }\n    else {\n      innerContent = (\n        <>\n          { paginator }\n          <ul className=\"User-notes-list\">\n            { noteInfoElements }\n          </ul>\n          { paginator }\n        </>\n      );\n    }\n  }\n\n  return (\n    <div className=\"User-notes Module-space\">\n      { innerContent }\n    </div>\n  );\n}\n\nexport default CreateLoadingComponent(\n  getMostLikedNotes, null, 'PageNotFound', NotesList\n);\n","import React, { useState } from 'react';\nimport NotesList from './NotesList';\nimport SearchUserSelect from '../SearchSelect/SearchUserSelect';\nimport SearchProblemSelect from '../SearchSelect/SearchProblemSelect';\nimport queryString from 'query-string';\nimport '../css/NotesSearch.css';\n\nfunction NotesSearch({ history }) {\n  let urlParams = queryString.parse(window.location.search);\n  let page = Number(urlParams.page) || 1;\n  if(!(page > 0)) {\n    page = 1;\n  }\n\n  const username = urlParams.username || '';\n  const platform = urlParams.platform || '';\n  const contestId = urlParams.contestId || '';\n  const problemId = urlParams.problemId || '';\n  const sortByRecent = urlParams.recent;\n\n  const changeSearchAttributes = (changes) => {\n    for(const attribute in changes) {\n      if(changes[attribute] === null) {\n        delete urlParams[attribute];\n      }\n      else {\n        urlParams[attribute] = changes[attribute];\n      }\n    }\n    const newQueryString = queryString.stringify(urlParams);\n    history.push(`/notes?${newQueryString}`);\n  };\n\n  const resetSearch = (event) => {\n    event.preventDefault();\n\n    changeSearchAttributes({\n      page: null,\n      username: null,\n      platform: null,\n      contestId: null,\n      problemId: null\n    });\n  }\n\n  const changePage = (newPage) => {\n    if(newPage === 1) {\n      newPage = null;\n    }\n\n    changeSearchAttributes({\n      page: newPage\n    });\n  };\n\n  const changeUsername = (newUsername) => {\n    changeSearchAttributes({\n      username: newUsername,\n      page: null\n    });\n  }\n\n  const changePlatformContestOrProblem = (platform, contestId, problemId) => {\n    changeSearchAttributes({\n      platform: platform,\n      contestId: contestId,\n      problemId: problemId,\n      page: null\n    });\n  };\n\n  let [ showFilterForm, setShowFilterForm ] = useState(false);\n  const toggleFilterForm = () => {\n    setShowFilterForm(!showFilterForm);\n  };\n\n  if(sortByRecent && showFilterForm) {\n    setShowFilterForm(false);\n  }\n\n  const changeSort = (event) => {\n    const newSort = event.target.value;\n    if(newSort === 'Recent') {\n      changeSearchAttributes({\n        username: null,\n        platform: null,\n        contestId: null,\n        problemId: null,\n        page: null,\n        recent: 1\n      });\n    }\n    else {\n      changeSearchAttributes({\n        page: null,\n        recent: null\n      });\n    }\n  };\n\n  const headingText = sortByRecent ? 'Most recent notes' : 'Most liked notes';\n  const toggleFilterFormText = showFilterForm ? 'Hide this' :\n    'Want to filter by username, platform, contest, or problem?';\n\n  const skipContestSearch = !!problemId && !contestId;\n\n  return (\n    <div className=\"Notes-search\">\n      <h2 className=\"Module-heading\">\n        {headingText}\n      </h2>\n      <button onClick={toggleFilterForm} disabled={sortByRecent}\n              className=\"Notes-search-filter Askd-form-link\">\n        {toggleFilterFormText}\n      </button>\n      <div className=\"Notes-search-sort\">\n        <label htmlFor=\"search-sort\">Sort by</label>\n        <select value={sortByRecent ? 'Recent' : 'Likes'} name=\"search-sort\"\n                onChange={changeSort}>\n          <option value=\"Likes\">Most Liked</option>\n          <option value=\"Recent\">Recent</option>\n        </select>\n      </div>\n      {\n        showFilterForm &&\n        <div className=\"Module-outer-space\">\n          <form className=\"Askd-form\">\n            <SearchUserSelect callback={changeUsername} initialUsername={username}\n                              attachLabel={true} />\n            <SearchProblemSelect initialPlatform={platform}\n                                 initialContestId={contestId}\n                                 initialProblemId={problemId}\n                                 initialSkipContestSearch={skipContestSearch}\n                                 changeCallback={changePlatformContestOrProblem} />\n           <button onClick={resetSearch} className=\"Askd-form-link Notes-search-reset\">\n             Reset all filters\n           </button>\n          </form>\n        </div>\n      }\n      <NotesList username={username} platform={platform} contestId={contestId}\n                 problemId={problemId} page={page} sortByRecent={sortByRecent}\n                 pageChangeCallback={changePage} />\n    </div>\n  );\n}\n\nexport default NotesSearch;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CreateLoadingComponent from '../HOC/CreateLoadingComponent';\nimport LoadingSpinner from './LoadingSpinner';\nimport NotesApi from '../Api/NotesApi';\n\nasync function getMostRecentNotes(props, params) {\n  return await NotesApi.getMostRecentNotes(1);\n}\n\nfunction RecentNotesList({ otherProps, loadInfo, info, screen }) {\n  let innerContent;\n  if(!info) {\n    innerContent = (\n      <LoadingSpinner />\n    );\n  }\n  else {\n    let noteListItems = [];\n    for(let i = 0; i < info.notes.length; i++) {\n      const note = info.notes[i];\n      const noteLink = NotesApi.getNotePublishedLink(note);\n      const displayName = NotesApi.getNoteDisplayName(note);\n\n      noteListItems.push(\n        <li key={i}>\n          <Link className=\"Username\"\n                to={`/users/${note.username}`}>\n            {note.username}\n          </Link>\n          {' '}\n          <span className=\"icon-long-arrow-right\" />\n          {' '}\n          <Link className=\"Askd-form-link\" to={noteLink}>\n            {displayName}\n          </Link>\n          {' '}\n          <span className=\"icon-note-text\" />\n        </li>\n      );\n    }\n\n    noteListItems.push(\n      <li key=\"more\">\n        <Link className=\"Username\" to=\"/notes?recent=1\">\n          More...\n        </Link>\n      </li>\n    );\n\n    innerContent = (\n      <div className=\"Module-recent-notes-list\">\n        <ol>\n          { noteListItems }\n        </ol>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Module-recent-notes\">\n      <div className=\"Module-recent-actions\">\n        <h4>Recent actions</h4>\n      </div>\n      <div className=\"Module-recent-notes-divider\" />\n      { innerContent }\n    </div>\n  );\n}\n\nexport default CreateLoadingComponent(\n  getMostRecentNotes, null, null, RecentNotesList\n);\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './Header/Header';\nimport Home from './Home/Home';\nimport UserProfile from './UserProfile/UserProfile';\nimport EditNote from './EditNote/EditNote';\nimport PublicNote from './PublicNote/PublicNote';\nimport UsersList from './UsersList/UsersList';\nimport NotesSearch from './NotesSearch/NotesSearch';\nimport RecentNotesList from './Misc/RecentNotesList';\n\nimport './css/General/App.css';\nimport './css/General/Module.css';\nimport './css/General/Form.css';\nimport './css/Misc/Username.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <div className=\"Module-wrapper\">\n          <div className=\"Module-content-left\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/home\" component={Home} />\n              <Route exact path=\"/users\" component={UsersList} />\n              <Route exact path=\"/notes\" component={NotesSearch} />\n              <Route exact path=\"/users/:username\" component={UserProfile} />\n              <Route exact path=\"/notes/edit/:platform/:contestId/:problemCode\"\n                     component={EditNote} />\n              <Route exact path=\"/notes/:ownerUsername/:platform/:contestId/:problemCode\"\n                     component={PublicNote} />\n            </Switch>\n          </div>\n          <RecentNotesList />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Amplify from 'aws-amplify';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport amplify_config from './amplify_config';\n\nAmplify.configure(amplify_config);\n\ndocument.body.addEventListener('mousedown', (event) => {\n  document.body.classList.add('Global-mouse-click');\n});\n\ndocument.body.addEventListener('keydown', (event) => {\n  if(event.keyCode === 9) {\n    document.body.classList.remove('Global-mouse-click');\n  }\n});\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}