{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-toast.entry.js"],"names":["AmplifyToast","hostRef","registerInstance","this","message","prototype","render","h","class","name","onClick","handleClose","style"],"mappings":"mIAAA,gEAEIA,EAA8B,WAC9B,SAASA,EAAaC,GAClBC,YAAiBC,KAAMF,GAEvBE,KAAKC,QAAU,GASnB,OAHAJ,EAAaK,UAAUC,OAAS,WAC5B,OAAQC,YAAE,MAAO,CAAEC,MAAO,SAAWD,YAAE,eAAgB,CAAEC,MAAO,aAAcC,KAAM,YAAcN,KAAKC,QAAUG,YAAE,OAAQ,KAAMJ,KAAKC,SAAW,KAAMG,YAAE,OAAQ,MAAOA,YAAE,SAAU,CAAEC,MAAO,cAAeE,QAASP,KAAKQ,gBAEvNX,EAbuB,GAelCA,EAAaY,MAhBS","file":"static/js/31.b497679e.chunk.js","sourcesContent":["import { r as registerInstance, h } from './index-39969785.js';\nvar amplifyToastCss = \":host{--background-color:var(--amplify-secondary-tint);--color:var(--amplify-white);--font-size:var(--amplify-text-sm);--font-family:var(--amplify-font-family);--close-icon-color:var(--amplify-white);--close-icon-hover:var(--amplify-red)}.toast-icon{padding-right:5px}.toast{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;position:absolute;top:0;left:0;width:100%;z-index:99;-webkit-box-shadow:0 0 5px 0 rgba(0, 0, 0, 0.3);box-shadow:0 0 5px 0 rgba(0, 0, 0, 0.3);padding:16px;background-color:var(--background-color);font-size:var(--font-size);color:var(--color);-webkit-box-sizing:border-box;box-sizing:border-box;border-radius:5px;font-family:var(--font-family)}.toast>span{margin-right:10px}.toast-close{margin-left:auto;-ms-flex-item-align:center;align-self:center;position:relative;width:18px;height:18px;overflow:hidden;cursor:pointer;background:transparent;border:none}.toast-close::before,.toast-close::after{content:\\\"\\\";position:absolute;height:2px;width:100%;top:50%;left:0;margin-top:-1px;background:var(--close-icon-color)}.toast-close:hover::before,.toast-close:hover::after{background:var(--close-icon-hover)}.toast-close::before{-webkit-transform:rotate(45deg);-moz-transform:rotate(45deg);-ms-transform:rotate(45deg);-o-transform:rotate(45deg);transform:rotate(45deg)}.toast-close::after{-webkit-transform:rotate(-45deg);-moz-transform:rotate(-45deg);-ms-transform:rotate(-45deg);-o-transform:rotate(-45deg);transform:rotate(-45deg)}\";\nvar AmplifyToast = /** @class */ (function () {\n    function AmplifyToast(hostRef) {\n        registerInstance(this, hostRef);\n        /** Message to be displayed inside the toast*/\n        this.message = '';\n    }\n    /*\n    TODO #170365145: Work on a helper function that will populate and\n    update class colors for success / warning / failure messages\n    */\n    AmplifyToast.prototype.render = function () {\n        return (h(\"div\", { class: \"toast\" }, h(\"amplify-icon\", { class: \"toast-icon\", name: \"warning\" }), this.message ? h(\"span\", null, this.message) : null, h(\"slot\", null), h(\"button\", { class: \"toast-close\", onClick: this.handleClose })));\n    };\n    return AmplifyToast;\n}());\nAmplifyToast.style = amplifyToastCss;\nexport { AmplifyToast as amplify_toast };\n"],"sourceRoot":""}