{"version":3,"sources":["Utils.js","Header/HeaderUtils.js","Api/UserAuthApi.js","Header/HeaderState.js","Header/RegisterForm.js","Header/LoginForm.js","Header/UserMenu.js","Header/HeaderAuth.js","Header/Header.js","Home/HomePost.js","img/user_notes_unorganized.png","img/user_notes_organized.png","img/public_note.png","img/notes_search.png","Home/homeNews.js","Home/CpNotes.js","Home/Home.js","Enum/LoadState.js","HOC/CreateLoadingComponent.js","Misc/LoadingSpinner.js","Api/ApiConstants.js","Api/Api.js","Api/UsersApi.js","Misc/Username.js","UserProfile/UserInfo.js","Enum/SolvedState.js","Api/ProblemsApi.js","SearchSelect/SearchSelect.js","SearchSelect/SearchProblemSelect.js","UserProfile/AddProblemForm.js","Api/NotesApi.js","UserProfile/UserNoteInfo.js","UserProfile/UserContestInfo.js","UserProfile/UserNotesTitleDropdown.js","Paginator/VirtualPaginator.js","Paginator/Paginator.js","UserProfile/UserNotesList.js","UserProfile/UserNotes.js","UserProfile/UserProfile.js","TextEditor/ContentType.js","TextEditor/MaskManager.js","TextEditor/Caret.js","TextEditor/Toolbar.js","TextEditor/VirtualTextEditor.js","TextEditor/Block/MathBlock.js","TextEditor/Block/ImageBlock.js","TextEditor/Block/Block.js","TextEditor/TextEditorContent.js","TextEditor/sanitizeTextArea.js","TextEditor/registerEventHandlers.js","TextEditor/TextEditor.js","Misc/DeleteMenu.js","EditNote/EditNoteForm.js","EditNote/ProblemInfo.js","Misc/SeeOtherNotes.js","EditNote/EditNote.js","Api/LikesApi.js","Misc/LikeDislike.js","PublicNote/PublicNoteInfo.js","Api/CommentsApi.js","CommentForm/CommentForm.js","CommentForm/Comment.js","CommentForm/RootComment.js","CommentForm/AddCommentForm.js","PublicNote/PublicNoteComments.js","HOC/CreateCommentComponent.js","PublicNote/PublicNote.js","SearchSelect/SearchUserSelect.js","UsersList/UsersTable.js","UsersList/UsersList.js","NotesSearch/NotesList.js","NotesSearch/NotesSearch.js","Misc/RecentNotesList.js","Misc/ClipboardCopy.js","UserSettings/LinkCfAccountForm.js","UserSettings/UserSettings.js","TextEditor/TextEditorDemo.js","App.js","serviceWorker.js","index.js"],"names":["TimeAgo","addDefaultLocale","en","timeAgo","Utils","component","stateObject","Promise","resolve","reject","mounted","setState","object","property","hasOwnProperty","message","setError","setStatePromise","error","setSuccess","success","file","reader","FileReader","readAsDataURL","onload","result","onerror","err","inputString","zeroCount","i","length","substring","timestamp","timeDate","Date","format","link","img","Image","src","selectors","window","MathJax","typeset","location","hostname","HeaderUtils","password","confirmPassword","componentSetError","UserAuthApi","Auth","currentAuthenticatedUser","username","email","signUp","attributes","info","codeDeliveryDetails","Destination","code","confirmSignUp","resendSignUp","CodeDeliveryDetails","forgotPassword","forgotPasswordSubmit","signIn","signOut","getProfile","profile","currentSession","getSignInUserSession","accessToken","getAccessToken","getJwtToken","HeaderState","Object","freeze","LOGIN","RECOVERY_USERNAME","RECOVERY_PASSWORD","RECOVERY_SUCCESS","REGISTER","REGISTER_VERIFY","REGISTER_SUCCESS","ERROR_TRIGGER_PREFIX","RegisterForm","props","screen","unverifiedAccountUsername","state","destination","unverifiedAccountDestination","loading","close","bind","register","verifyEmail","resendVerificationEmail","setLoading","this","exitCallback","startsWith","event","preventDefault","form","target","value","checkPasswords","componentSetSuccess","isLoading","submitButtonClassName","currentForm","createAccountForm","className","onSubmit","htmlFor","autoComplete","type","name","id","disabled","verifyEmailForm","key","onClick","emailVerifiedBox","Component","LoginForm","login","enablePasswordRecovery","resetPassword","emailVerificationCallback","componentsSetError","loginForm","recoveryUsernameForm","recoveryPasswordForm","recoveryPasswordSuccess","UserMenu","logout","logoutCallback","closeCallback","to","HeaderAuth","showRegisterForm","showLoginForm","showUserMenu","refreshUsername","toggleRegisterForm","toggleLoginForm","toggleUserMenu","hideUserMenu","afterLogin","unverifiedAccount","suggestUserRegister","getUsername","focusedElement","relatedTarget","classList","contains","loggedIn","loginButtons","loggedInButton","tabIndex","onBlur","topRightButtons","Header","title","whatStageIsThis","path","useLocation","pathname","big","outerClassName","HomePost","date","content","homeNews","prodOnly","userNotesUnorganized","alt","userNotesOrganized","publicNote","notesSearch","betaOnly","href","CpNotes","innerContent","push","Home","history","includes","correctPath","split","splice","join","replace","LoadState","LOADING","DONE","NOT_FOUND","CreateLoadingComponent","getData","defaultParams","notFoundErrorName","WrappedComponent","useRef","useState","currentParams","changeCurrentParams","changeInfo","componentScreen","changeScreen","loadInfo","params","a","data","current","useEffect","staticKey","otherProps","LoadingSpinner","ApiConstants","API_ENDPOINT","beta","prod","Api","Error","response","status","json","responseJson","createApiError","resource","options","method","fetch","body","JSON","stringify","headers","Authorization","manageResponseError","queryString","sendRequestBody","userInfoCache","userInfoCacheSize","UsersApi","basicInfoOnly","cachedData","now","getJson","userInfo","avatarData","cfUsername","cfRank","cfRating","page","searchTerm","putJson","authCfUsername","authId","Username","rank","linkToCf","firstLetter","firstLetterClassName","remainingString","rel","UserInfo","imageLoading","setImageLoading","imageSource","setImageSource","handleUpload","files","convertFileToBase64","updateUserInfo","contributionClassName","contribution","imageContent","accept","onChange","avatarContent","totalNotes","SolvedState","SOLVED","text","css","UPSOLVED","UPSOLVED_HELP","UNSOLVED","ProblemsApi","platform","contestCode","problemCode","problemName","divisionLevel","Math","ceil","level","problemLevel","divisionString","afterText","getProblemDisplayNameWithoutPlatform","lowerCaseContestName","contestName","toLowerCase","lowerCasePlatform","inflatedProblemLetter","problemSk","removePrefixZeroes","contestId","problemId","problemInfo","solvedStateValue","parseInt","SearchSelect","previousValidSearchTerm","showOptions","lastChangedTime","lastLoadTime","filteredOptions","handleChange","handleBlur","handleFocus","handleOptionSelectWithKeys","option","optionStringArray","keys","getOptionString","currentTime","currentSearchTerm","search","initialSearchSortKey","filterOptions","network","componentDidUpdate","initialSearchTerm","networkLoadOptions","prevProps","setInitialSearchSortKey","setTimeout","sortKey","optionString","callback","optionElements","displayString","displayKey","optionCallback","inputDisabled","onFocus","placeholder","SearchProblemSelect","initialPlatform","initialContestId","initialProblemId","initialSkipContestSearch","changeCallback","setPlatform","contestSk","setContestSk","skipContestSearch","setSkipContestSearch","searchContestFunction","searchContestStaticKey","getContests","searchProblemFunction","searchProblemStaticKey","getProblems","searchContestKeys","searchProblemKeys","selectPlatformValue","skipButtonText","newContestSk","newProblemSk","AddProblemForm","problemChangeCallback","addProblem","lastRecentNotesSideUpdate","oldRecentNotesSide","NotesApi","note","problemUrl","contestDisplayName","getContestDisplayName","problemDisplayName","getNotes","noteInfo","notes","sort","note1","note2","likeCount","publishedNotes","published","totalPages","max","visibleNotes","startIndex","endIndex","min","userRanks","recent","mostRecentNotes","forcePublished","postJson","solved","deleteJson","UserNoteInfo","solvedClass","getSolvedStateCssClass","noteEditLink","getNoteEditLink","notePublishedLink","getNotePublishedLink","publishedClass","getProblemDisplayName","editedTime","toLocaleDateString","authorUsername","noteTitle","mostLikedMode","loggedInUsername","authorRank","UserContestInfo","noteElements","problemLetter","getProblemLetter","codeClassName","UserNotesTitleDropdown","showing","colorClass","toggleCallback","showText","headingClassName","VirtualPaginator","pageSize","setContent","activeItems","item","paginatorActive","indices","index","active","pageIndex","currentIndex","activeBufferSize","itemBuffer","pageCount","bufferSize","Paginator","currentPage","bottom","pageIndices","after","increment","before","b","paginatorButtons","buttonClassName","buttonOnClick","RecursionLevel","CONTEST","PLATFORM","compareByRecent","groupByAttributes","objectList","attributeGroups","obj","attributeValues","attribute","UserNotesList","sortNoteItems","virtualPaginator","sortedNoteItems","updatePage","firstNote","contestObject","organizeBySolved","organizeByPlatform","recursionLevel","keyString","paginatorIndices","organizeByContest","contestGroups","createContestObject","organize","attributeString","dropdownShowing","dropdownIndices","sortByRecent","groups","innerKeyString","innerIndices","noteInfoElements","NoteComponent","renderNoteItems","getSolvedStateText","toggleActiveItems","getPageCount","forceUpdate","solvedStateCssClass","nextProps","nextState","importantProps","currentImportantProps","map","x","nextImportantProps","noteItems","getContent","paginator","UserNotes","showAddProblemForm","toggleAddProblemForm","toggleOrganizeBySolved","toggleOrganizeByPlatform","toggleOrganizeByContest","toggleSortByRecent","problemSortKey","formComponent","addNote","defaultValue","match","getUserInfo","ContentType","MATH","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","IMAGE","MaskManager","bit","on","originalMask","mask","style","Caret","selection","getSelection","anchorElement","anchorNode","parentElement","focusElement","focusNode","originalAnchorElement","originalFocusElement","anchorMathBlock","getContainingMathBlock","focusMathBlock","c","d","anchorIndex","getAttribute","focusIndex","anchorOffset","focusOffset","insideCaretBlock","rangeSelect","position","editorSelected","Number","leftIndex","leftPosition","rightIndex","rightPosition","newCaretInfo","editorMask","removeCaretBlock","setRangePosition","addCaretBlock","setPosition","blockElement","textNode","document","getElementById","childNodes","createTextNode","appendChild","range","createRange","setStart","collapse","removeAllRanges","addRange","leftBlockElement","rightBlockElement","leftTextNode","rightTextNode","setEnd","caretBlock","createElement","setAttribute","getClassName","innerHTML","String","fromCharCode","nextBlock","insertBefore","existingCaretBlock","removeChild","element","Toolbar","boldSelected","italicSelected","underlineSelected","strikethroughSelected","mathSelected","selectHandler","onPointerDown","countCharacters","str","counter","character","VirtualTextEditor","initialContent","characters","caretBlockIndex","caretBlockPosition","block","m","imageLink","l","imageSize","s","char","createBlock","updateBlocks","globalIndex","charactersScanned","blocks","blockLength","blockEndIndex","j","blockStarts","characterCounter","rangeEnd","getGlobalIndex","firstBlockEnd","getIndexAndPosition","nextBlockGlobalIndex","insertedString","rightBuffer","globalCaretPosition","globalLeftIndex","deleteLength","globalRightIndex","editorMergeBit","newLeftIndex","newLeftPosition","newLink","newSize","imageGlobalIndex","caretInfo","leftGlobalIndex","rightGlobalIndex","getCorrectedIndexAndPosition","isEmpty","size","currentMask","currentLink","currentSize","characterBuffer","blockPosition","forEach","caretBlockIncoming","isImageBlock","MathBlock","rendered","textContent","changeKey","useMemo","renderMathJax","children","removeAttribute","ImageBlock","caretSelected","editable","initialLink","initialSize","handleBlockUpdate","selected","setSelected","setImageLink","validImageLink","setValidImageLink","setImageSize","lastValidImageLinkTime","blockRef","React","createRef","disableSelectionChange","add","currentTarget","remove","handleLinkChange","isImageLinkValid","imageUpdate","handleSizeChange","contentEditable","ref","width","Block","editorId","blockId","TextEditorContent","contentElements","suppressContentEditableWarning","spellCheck","sanitizeTextArea","textEditor","junkNodes","node","nodeType","Node","TEXT_NODE","nodeName","childElement","childIsMath","childIsImage","nodeValue","registerEventHandlers","that","addEventListener","composing","delete","insert","inputType","isComposing","dataTransfer","pasteText","clipboardData","compositionIndex","compositionPosition","compositionInsert","handleSelectionChange","selectionChanged","caret","getInfo","virtualTextEditor","updateContent","TextEditor","uuidv4","contentChanged","toolbarUpdate","blockUpdate","insertionUpdate","newString","useLastKnownCaretInfo","updateCaretInfo","rangeMaskUpdate","checkCaretNextToImage","setInfo","newMask","imageInsert","newToolbarMask","toolbarMergeBit","leftCharacterMask","getCharacterMask","previouslyInsideCaretBlock","atBlockNewlineEnd","updateMask","updateImage","outerTextEditor","focusOnMount","focus","removeEventListener","confirmationTextOptions","DeleteMenu","randomIndex","floor","random","randomCode","confirmCode","deleteCallback","entityName","remindUserToSave","returnValue","EditNoteForm","parse","lastSaved","publishedUrl","disableEditButtons","saved","loadingSave","loadingPublish","showDeleteMenu","saveNote","deleteNote","togglePublishNote","toggleDeleteMenu","handleTitleChange","handleSolvedChange","handleContentChange","editNote","onbeforeunload","saveOrPublishNote","newContent","savedText","toLocaleString","togglePublishText","saveButtonClass","publishButtonClass","when","ProblemInfo","SeeOtherNotes","goDownOneLevel","notesSearchObject","otherNotesText","notesSearchQueryString","otherNotesUrl","getNoteInfo","LikesApi","noteAuthor","likedStatus","LikeDislike","initialScore","initialStatus","likeCallback","score","setScore","setStatus","likeButtonClass","toggleStatus","PublicNoteInfo","editedTimestamp","editLink","sendLike","authorCfRank","CommentsApi","rootReplyId","replyId","commentId","CommentForm","cancelCallback","addCallback","updateCallback","commentContent","setCommentContent","addCommentLoading","setAddCommentLoading","handleAddComment","textEmpty","Comment","replyUsername","subscribeToUserInfo","subscribeToReplyInfo","replyCallback","editCallback","setAvatarData","setRank","replyRank","setReplyRank","editFormOpen","setEditFormOpen","deleteMenuOpen","setDeleteMenuOpen","editedContent","setAvatarAndRank","timeAgoString","submitEditedContent","deleteComment","textContentId","getTimeAgoString","creationTime","commentClassName","RootComment","addInfoSubscriptions","editorActive","setEditorActive","setReplyUsername","editorReplyInfo","editorAddCallback","createReplyHandler","commentReplyId","commentReplyUsername","replyListItems","replyIdToUsername","replies","reply","replyCommentForm","rootCommentSubscribeToUserInfo","rootCommentReplyCallback","AddCommentForm","editorContent","inputRef","handleInactiveFocus","blur","getParamsFromProps","ownerUsername","getNoteComments","comments","newCommentContent","addNoteComment","CreateCommentComponent","getComments","addComment","userInfos","userInfoSubscriptions","urlParams","linkedComment","commentElement","scrollIntoView","initializeInfoSystem","comment","redirectToCommentId","basePath","verifyUserIsSignedIn","newCommentId","editComment","doNotShow","commentsContent","commentListItems","doNotShowComments","commentsComponent","PublicNoteComments","SearchUserSelect","initialUsername","attachLabel","placeholderString","getSearchUsers","UsersTable","lastUpdated","users","updatedTime","userRows","user","getUsers","usersInfo","loadUserProfile","getMostRecentNotes","getMostLikedNotes","pageChangeCallback","NotesSearch","changeSearchAttributes","changes","newQueryString","showFilterForm","setShowFilterForm","headingText","toggleFilterFormText","showSeeOtherNotes","newSort","newUsername","newPage","noteListItems","noteLink","displayName","getNoteDisplayName","commentIcon","activityTime","userRank","ClipboardCopy","innerDivRef","copy","CF_DOWN_MESSAGE","LinkCfAccountForm","setCfUsername","setAuthCfUsername","setAuthId","beginCfVerification","verificationCode","endCfVerification","copyText","innerInnerContent","TextEditorDemo","App","exact","UsersList","UserSettings","UserProfile","EditNote","PublicNote","Boolean","Amplify","configure","amplify_config","keyCode","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.c99d1112.chunk.js","sourcesContent":["import TimeAgo from 'javascript-time-ago';\nimport en from 'javascript-time-ago/locale/en';\n\nTimeAgo.addDefaultLocale(en);\nconst timeAgo = new TimeAgo('en-US');\n\nclass Utils {\n  static async setStatePromise(component, stateObject) {\n    return new Promise((resolve, reject) => {\n      if(component.mounted !== false) {\n        component.setState(stateObject, () => {\n          resolve();\n        });\n      }\n      resolve();\n    });\n  }\n\n  static isEmpty(object) {\n    for(const property in object) {\n      if(object.hasOwnProperty(property))\n        return false;\n    }\n    return true;\n  }\n\n  static async componentSetError(component, message) {\n    if(component.setError) {\n      await component.setError(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: `Error: ${message}`\n      });\n    }\n  }\n\n  static async componentSetSuccess(component, message) {\n    if(component.setSuccess) {\n      await component.setSuccess(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: '',\n        success: message\n      });\n    }\n  }\n\n  static convertFileToBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        resolve(reader.result);\n      }\n      reader.onerror = (err) => reject(err);\n    });\n  }\n\n  /* Taken from dynamodbUtils.js in backend */\n  static removePrefixZeroes(inputString) {\n    let zeroCount = 0;\n    for(let i = 0; i < inputString.length; i++) {\n      if(inputString[i] !== '0') break;\n      zeroCount++;\n    }\n\n    return inputString.substring(zeroCount, inputString.length);\n  }\n\n  static getTimeAgoString(timestamp) {\n    const timeDate = new Date(timestamp);\n    return timeAgo.format(timeDate);\n  }\n\n  static async isImageLinkValid(link) {\n    return new Promise((resolve, reject) => {\n      let img = new Image();\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = link;\n    });\n  }\n\n  static renderMathJax(selectors) {\n    if(window.MathJax) {\n      window.MathJax.typeset(selectors);\n    }\n  }\n\n  static whatStageIsThis() {\n    if(window.location.hostname === 'cp-notes.com') {\n      return 'prod';\n    }\n    return 'beta';\n  }\n}\n\nexport default Utils;\n","import Utils from '../Utils';\n\nconst MIN_PASSWORD_LENGTH = 6;\n\nclass HeaderUtils {\n  static async checkPasswords(component, password, confirmPassword) {\n    if(password !== confirmPassword) {\n      await Utils.componentSetError(component, \"Your passwords don't match!\");\n      return false;\n    }\n\n    if(password.length < MIN_PASSWORD_LENGTH) {\n      await Utils.componentSetError(component, 'Your password is too short!');\n      return false;\n    }\n\n    return true;\n  }\n}\n\nexport default HeaderUtils;\n","import { Auth } from 'aws-amplify';\n\nclass UserAuthApi {\n  static async getProfile() {\n    try {\n      return await Auth.currentAuthenticatedUser();\n    }\n    catch(err) {\n      // currentAuthenticatedUser() throws this error if the user is not logged in\n      return null;\n    }\n  }\n\n  static async register(username, email, password) {\n    const info = await Auth.signUp({\n      username,\n      password,\n      attributes: {\n        email: email\n      }\n    });\n\n    // I like how Amplify makes this one inconsistently lowercase... lol\n    return info.codeDeliveryDetails.Destination;\n  }\n\n  static async verifyEmail(username, code) {\n    await Auth.confirmSignUp(username, code);\n  }\n\n  static async resendVerificationEmail(username) {\n    const info = await Auth.resendSignUp(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async forgotPassword(username) {\n    const info = await Auth.forgotPassword(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async resetPassword(username, code, password) {\n    await Auth.forgotPasswordSubmit(username, code, password);\n  }\n\n  static async login(username, password) {\n    await Auth.signIn(username, password);\n  }\n\n  static async logout() {\n    await Auth.signOut();\n  }\n\n  static async getUsername() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    return profile.username;\n  }\n\n  static async getAccessToken() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    const currentSession = profile.getSignInUserSession();\n    const accessToken = currentSession.getAccessToken();\n    return accessToken.getJwtToken();\n  }\n}\n\nexport default UserAuthApi;\n","const HeaderState = Object.freeze({\n  LOGIN: 0,\n  RECOVERY_USERNAME: 1,\n  RECOVERY_PASSWORD: 2,\n  RECOVERY_SUCCESS: 3,\n  REGISTER: 4,\n  REGISTER_VERIFY: 5,\n  REGISTER_SUCCESS: 6\n});\n\nexport default HeaderState;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\nimport '../css/RegisterForm.css';\n\nconst USERNAME_MIN_LENGTH = 3;\nconst USERNAME_MAX_LENGTH = 20;\nconst ERROR_TRIGGER_PREFIX = 'PreSignUp failed with error';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const screen = props.unverifiedAccountUsername ?\n                   HeaderState.REGISTER_VERIFY : HeaderState.REGISTER;\n    this.state = {\n      error: '',\n      success: '',\n      username: props.unverifiedAccountUsername,\n      destination: props.unverifiedAccountDestination,\n      screen: screen,\n      loading: false\n    };\n\n    this.close = this.close.bind(this);\n    this.register = this.register.bind(this);\n    this.verifyEmail = this.verifyEmail.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async setError(message) {\n    if(message.startsWith(ERROR_TRIGGER_PREFIX)) {\n      message = message.substring(\n        ERROR_TRIGGER_PREFIX.length, message.length - 1\n      );\n    }\n\n    await Utils.setStatePromise(this, {\n      error: `Error: ${message}`,\n      success: ''\n    });\n  }\n\n  async register(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const email = form.email.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!username || !email || !password || !confirmPassword) {\n      await this.setError('Please fill out all of the fields.')\n      return;\n    }\n\n    if(username.length < USERNAME_MIN_LENGTH || username.length > USERNAME_MAX_LENGTH) {\n      await this.setError(\n        `Your username must be between ${USERNAME_MIN_LENGTH} ` +\n        `and ${USERNAME_MAX_LENGTH} characters!`\n      );\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    await this.setLoading(true);\n    try {\n      const destination = await UserAuthApi.register(username, email, password);\n      Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.REGISTER_VERIFY\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n    await this.setLoading(false);\n  }\n\n  async verifyEmail(event) {\n    event.preventDefault();\n\n    const code = event.target.code.value;\n    await this.setLoading(true);\n    try {\n      await UserAuthApi.verifyEmail(this.state.username, code);\n      Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.REGISTER_SUCCESS\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n    await this.setLoading(false);\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.resendVerificationEmail(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async setLoading(isLoading) {\n    await Utils.setStatePromise(this, {\n      loading: isLoading\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let submitButtonClassName = 'Askd-button';\n    if(this.state.loading) {\n      submitButtonClassName += ' Askd-form-loading';\n    }\n\n    const createAccountForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Create an account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.register}>\n          <label htmlFor=\"register-username\">Username</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 id=\"register-username\" />\n\n          <label htmlFor=\"register-email\">Email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"email\"\n                 id=\"register-email\" />\n\n          <label htmlFor=\"register-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 id=\"register-password\" />\n\n          <label htmlFor=\"register-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 id=\"register-confirm-password\" />\n\n          <input className={submitButtonClassName} type=\"submit\" value=\"Register\"\n                 disabled={this.state.loading} />\n        </form>\n      </div>\n    );\n\n    const verifyEmailForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Verify your email!</h2>\n        <p>\n          You should've received an email at {this.state.destination} with a\n          verification code. If it isn't convenient for you to verify your\n          account now, you may do so later by logging in.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.verifyEmail}>\n          <label htmlFor=\"verification-code\">Verification code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"verification-code\" id=\"verification-code\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className={submitButtonClassName} type=\"submit\" value=\"Submit\"\n                 disabled={this.state.loading} />\n        </form>\n      </div>\n    );\n\n    const emailVerifiedBox = (\n      <div className=\"Register-form Module-popup\">\n        <h2>Verification success!</h2>\n        <p className=\"Module-popup-last\">\n          Your email was successfully verified! Click the 'X' button in the\n          top-right corner to return to the site, and you'll be able to login.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.REGISTER:\n        currentForm = createAccountForm;\n        break;\n      case HeaderState.REGISTER_VERIFY:\n        currentForm = verifyEmailForm;\n        break;\n      case HeaderState.REGISTER_SUCCESS:\n        currentForm = emailVerifiedBox;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\" />\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      username: null,\n      destination: null,\n      loading: false,\n      screen: props.screen || HeaderState.LOGIN\n    }\n\n    this.close = this.close.bind(this);\n    this.login = this.login.bind(this);\n    this.enablePasswordRecovery = this.enablePasswordRecovery.bind(this);\n    this.forgotPassword = this.forgotPassword.bind(this);\n    this.resetPassword = this.resetPassword.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback(false);\n  }\n\n  async login(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const password = form.password.value;\n\n    if(!username || !password) {\n      await Utils.componentSetError(this, \"Please fill out all of the fields.\");\n      return;\n    }\n\n    await this.setLoading(true);\n    try {\n      await UserAuthApi.login(username, password);\n      this.props.exitCallback(true);\n    }\n    catch(err) {\n      if(err.code === 'UserNotConfirmedException') {\n        const destination = await UserAuthApi.resendVerificationEmail(username);\n        await this.props.emailVerificationCallback(username, destination);\n      }\n      else {\n        await Utils.componentSetError(this, err.message);\n      }\n    }\n    await this.setLoading(false);\n  }\n\n  async enablePasswordRecovery(event) {\n    await Utils.setStatePromise(this, {\n      error: '',\n      screen: HeaderState.RECOVERY_USERNAME\n    });\n  }\n\n  async forgotPassword(event) {\n    event.preventDefault();\n\n    const username = event.target.username.value;\n    if(!username) {\n      await Utils.componentsSetError(this, 'Please input your username.');\n      return;\n    }\n\n    await this.setLoading(true);\n    try {\n      const destination = await UserAuthApi.forgotPassword(username);\n\n      await Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.RECOVERY_PASSWORD\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n    await this.setLoading(false);\n  }\n\n  async resetPassword(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const code = form.code.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!code || !password || !confirmPassword) {\n      Utils.componentSetError(this, 'Please fill out all of the fields.');\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    await this.setLoading(true);\n    try {\n      await UserAuthApi.resetPassword(this.state.username, code, password);\n\n      await Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.RECOVERY_SUCCESS\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n    await this.setLoading(false);\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.forgotPassword(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async setLoading(isLoading) {\n    await Utils.setStatePromise(this, {\n      loading: isLoading\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let submitButtonClassName = 'Askd-button';\n    if(this.state.loading) {\n      submitButtonClassName += ' Askd-form-loading';\n    }\n\n    const loginForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Login to your account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.login}>\n          <label htmlFor=\"login-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"login-username\" id=\"login-username\" />\n\n          <label htmlFor=\"login-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"login-password\" id=\"login-password\" />\n\n          <button type=\"button\" onClick={this.enablePasswordRecovery}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Forgot your password?\n          </button>\n\n          <input className={submitButtonClassName} type=\"submit\" value=\"Login\"\n                 disabled={this.state.loading} />\n        </form>\n      </div>\n    );\n\n    const recoveryUsernameForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          Please provide your username or email, so that you can reset your\n          password via an emailed confirmation code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.forgotPassword}>\n          <label htmlFor=\"reset-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"reset-username\" id=\"reset-username\" />\n\n          <input className={submitButtonClassName} type=\"submit\" value=\"Submit\"\n                 disabled={this.state.loading} />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          You should've received an email at { this.state.destination } with a\n          verification code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.resetPassword}>\n          <label htmlFor=\"reset-code\">Code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"reset-code\" id=\"reset-code\" />\n\n          <label htmlFor=\"reset-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"reset-password\" id=\"reset-password\" />\n\n          <label htmlFor=\"reset-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 key=\"reset-confirm-password\" id=\"reset-confirm-password\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className={submitButtonClassName} type=\"submit\" value=\"Submit\"\n                 disabled={this.state.loading} />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordSuccess= (\n      <div className=\"Register-form Module-popup\">\n        <h2>Password reset success!</h2>\n        <p>\n          Your password has been reset successfully. You'll now be able to\n          login again.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.LOGIN:\n        currentForm = loginForm;\n        break;\n      case HeaderState.RECOVERY_USERNAME:\n        currentForm = recoveryUsernameForm;\n        break;\n      case HeaderState.RECOVERY_PASSWORD:\n        currentForm = recoveryPasswordForm;\n        break;\n      case HeaderState.RECOVERY_SUCCESS:\n        currentForm = recoveryPasswordSuccess;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\" />\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/UserMenu.css'\n\nclass UserMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = this.logout.bind(this);\n  }\n\n  async logout() {\n    await UserAuthApi.logout();\n    await this.props.logoutCallback();\n  }\n\n  render() {\n    return (\n      <div className=\"User-menu\">\n        <ol>\n          <li>\n            <Link className=\"Header-menu-button\" onClick={this.props.closeCallback}\n                  to={`/users/${this.props.username}`}>\n                  Your profile\n            </Link>\n          </li>\n          <div className=\"User-menu-divider\"></div>\n          <li className=\"User-menu-not-link\">\n            <Link className=\"Header-menu-button\" onClick={this.props.closeCallback}\n                  to=\"/settings\">\n              Settings\n            </Link>\n          </li>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\" onClick={this.logout}>\n              Logout\n            </button>\n          </li>\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default UserMenu;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport UserMenu from './UserMenu';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nclass HeaderAuth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      showRegisterForm: false,\n      showLoginForm: false,\n      showUserMenu: false,\n      unverifiedAccountUsername: null,\n      unverifiedAccountDestination: null\n    };\n\n    this.refreshUsername = this.refreshUsername.bind(this);\n    this.toggleRegisterForm = this.toggleRegisterForm.bind(this);\n    this.toggleLoginForm = this.toggleLoginForm.bind(this);\n    this.toggleUserMenu = this.toggleUserMenu.bind(this);\n    this.hideUserMenu = this.hideUserMenu.bind(this);\n    this.afterLogin = this.afterLogin.bind(this);\n    this.unverifiedAccount = this.unverifiedAccount.bind(this);\n\n    window.suggestUserRegister = this.toggleRegisterForm;\n  }\n\n  async refreshUsername() {\n    const username = await UserAuthApi.getUsername();\n\n    await Utils.setStatePromise(this, {\n      username: username,\n      showUserMenu: false,\n      unverifiedAccountUsername: null\n    });\n  }\n\n  async componentDidMount() {\n    await this.refreshUsername();\n  }\n\n  async toggleRegisterForm(event) {\n    if(this.state.showRegisterForm) {\n      await Utils.setStatePromise(this, {\n        unverifiedAccountUsername: null,\n        unverifiedAccountDestination: null\n      });\n    }\n\n    await Utils.setStatePromise(this, {\n      showRegisterForm: !this.state.showRegisterForm\n    });\n  }\n\n  async toggleLoginForm(event) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: !this.state.showLoginForm\n    });\n  }\n\n  async toggleUserMenu(event) {\n    await Utils.setStatePromise(this, {\n      showUserMenu: !this.state.showUserMenu\n    });\n  }\n\n  async hideUserMenu(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.classList.contains('Header-menu-button'))\n      return;\n\n    await Utils.setStatePromise(this, {\n      showUserMenu: false\n    });\n  }\n\n  async afterLogin(loggedIn) {\n    await this.toggleLoginForm();\n\n    if(loggedIn)\n      await this.refreshUsername();\n  }\n\n  async unverifiedAccount(username, destination) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: false,\n      showRegisterForm: true,\n      unverifiedAccountUsername: username,\n      unverifiedAccountDestination: destination\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loginButtons = (\n      <div className=\"Header-top-right\">\n        <button className=\"Header-menu-button\" onClick={this.toggleLoginForm}>\n          Login\n        </button>\n        <span className=\"Header-divider\"></span>\n        <button className=\"Header-menu-button\" onClick={this.toggleRegisterForm}>\n          Create an account\n        </button>\n      </div>\n    );\n\n    const loggedInButton = (\n      <div className=\"Header-logged-in\" tabIndex=\"-1\"\n           onBlur={this.hideUserMenu}>\n        <div className=\"Header-top-right\">\n          <button className=\"Header-menu-button\" onClick={this.toggleUserMenu}>\n            { this.state.username }\n          </button>\n        </div>\n        <div className=\"Header-user-menu\">\n          {\n            this.state.showUserMenu &&\n            <UserMenu username={this.state.username}\n                      closeCallback={this.toggleUserMenu}\n                      logoutCallback={this.refreshUsername} />\n          }\n        </div>\n      </div>\n    );\n\n    const topRightButtons = this.state.username ? loggedInButton : loginButtons;\n\n    return (\n      <>\n        {\n          this.state.showRegisterForm &&\n          <RegisterForm exitCallback={this.toggleRegisterForm}\n                        unverifiedAccountUsername=\n                        {this.state.unverifiedAccountUsername}\n                        unverifiedAccountDestination=\n                        {this.state.unverifiedAccountDestination} />\n        }\n        {\n          this.state.showLoginForm &&\n          <LoginForm exitCallback={this.afterLogin}\n                     emailVerificationCallback={this.unverifiedAccount} />\n        }\n        { topRightButtons }\n      </>\n    );\n  }\n}\n\nexport default HeaderAuth;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport HeaderAuth from './HeaderAuth';\nimport Utils from '../Utils';\nimport '../css/Header.css';\n\nfunction Header() {\n  let title = 'cp-notes!';\n  if(Utils.whatStageIsThis() === 'beta') {\n    title += ' beta';\n  }\n\n  const path = useLocation().pathname;\n  const big = (path === '/' || path === '/home');\n  const outerClassName = big ? 'Header' : 'Header-small';\n\n  return (\n    <div className={outerClassName}>\n      { big && <h1>{title}</h1> }\n      <ul>\n        <li>\n          <Link to=\"/home\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/users\">Users</Link>\n        </li>\n        <li>\n          <Link to=\"/notes\">Notes</Link>\n        </li>\n      </ul>\n      <HeaderAuth />\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction HomePost({ info }) {\n  return (\n    <>\n      <h3 className=\"Module-heading\">{info.title}</h3>\n      <span className=\"Cp-notes-home-post-date\">{info.date}</span>\n      <div className=\"Cp-notes-home-post-content\">\n        { info.content }\n      </div>\n    </>\n  );\n}\n\nexport default HomePost;\n","export default __webpack_public_path__ + \"static/media/user_notes_unorganized.673faef2.png\";","export default __webpack_public_path__ + \"static/media/user_notes_organized.dc4db41b.png\";","export default __webpack_public_path__ + \"static/media/public_note.ecb72e27.png\";","export default __webpack_public_path__ + \"static/media/notes_search.1fe98aef.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport userNotesUnorganized from '../img/user_notes_unorganized.png';\nimport userNotesOrganized from '../img/user_notes_organized.png';\nimport publicNote from '../img/public_note.png';\nimport notesSearch from '../img/notes_search.png';\n\nconst homeNews = [\n  {\n    title: 'Welcome!',\n    date: '04-16-21',\n    prodOnly: true,\n    content: (\n      <>\n        <p className=\"Module-paragraph\">\n          Hello there, and welcome to cp-notes.com! I'm currently making some\n          finishing touches to the site. How did you find this though :p? If\n          you wouldn't mind, please let me know by messaging me on Codeforces\n          (my username is askd).\n        </p>\n        <p className=\"Module-paragraph\">\n          Thanks for taking the time to visit! This site is intended\n          to be a place for competitive programmers to share notes about their\n          most interesting problems! Here's a list of some of the things you\n          can do:\n        </p>\n        <div className=\"Cp-notes-home-post-image\">\n          <div className=\"Cp-notes-home-post-image-area\">\n            <div>\n              <img src={userNotesUnorganized} alt=\"User profile, no organization\" />\n            </div>\n            <div>\n              <img src={userNotesOrganized} alt=\"User profile, organized by solved\" />\n            </div>\n          </div>\n          <p>\n            Maintain an organizable profile of solved and unsolved problems\n            from 6 different platforms\n          </p>\n        </div>\n        <div className=\"Cp-notes-home-post-image\">\n          <div className=\"Cp-notes-home-post-image-area\">\n            <div>\n              <img src={publicNote} alt=\"Published note page\" />\n            </div>\n          </div>\n          <p>Share notes with others and receive feedback</p>\n        </div>\n        <div className=\"Cp-notes-home-post-image\">\n          <div className=\"Cp-notes-home-post-image-area\">\n            <div>\n              <img src={notesSearch} alt=\"Notes search page\" />\n            </div>\n          </div>\n          <p>Search and find notes written by other users</p>\n        </div>\n        <p className=\"Module-paragraph\">\n          As a side-effect of this project, I've also produced a rich\n          text editor written in React, using HTML's <i>lovely</i> contenteditable.\n          Definitely a little rough around the edges, but the inline math mode\n          is quite unique from what I've seen - you can demo it\n          {' '}\n          <Link className=\"Askd-form-link\" to=\"/demo\">here</Link>!\n        </p>\n      </>\n    )\n  },\n  {\n    title: 'Welcome!',\n    date: '04-16-21',\n    betaOnly: true,\n    content: (\n      <>\n        <p className=\"Module-paragraph\">\n          Hello there, and welcome to the beta site of\n          {' '}\n          <a className=\"Askd-form-link\" href=\"https://cp-notes.com\">\n            cp-notes.com\n          </a>!\n          You've probably arrived here after looking at the name of the\n          Github repository. This site is meant for me to test things without\n          interfering with the production site. You can still make an account\n          here and do all of the same things, but everything will be stored in\n          databases separate from the production site, so you're not really\n          supposed to use this. Why is it public, you might ask? I don't know,\n          I think keeping it visible is kind of neat (and also results in less\n          work for me).\n        </p>\n        <p className=\"Module-paragraph\">\n          Anyways, thanks for taking the time to visit! This site is intended\n          to be a place for competitive programmers to share notes about their\n          most interesting problems! Here's a list of some of the things you\n          can do:\n        </p>\n        <div className=\"Cp-notes-home-post-image\">\n          <div className=\"Cp-notes-home-post-image-area\">\n            <div>\n              <img src={userNotesUnorganized} alt=\"User profile, no organization\" />\n            </div>\n            <div>\n              <img src={userNotesOrganized} alt=\"User profile, organized by solved\" />\n            </div>\n          </div>\n          <p>\n            Maintain an organizable profile of solved and unsolved problems\n            from 6 different platforms\n          </p>\n        </div>\n        <div className=\"Cp-notes-home-post-image\">\n          <div className=\"Cp-notes-home-post-image-area\">\n            <div>\n              <img src={publicNote} alt=\"Published note page\" />\n            </div>\n          </div>\n          <p>Share notes with others and receive feedback</p>\n        </div>\n        <div className=\"Cp-notes-home-post-image\">\n          <div className=\"Cp-notes-home-post-image-area\">\n            <div>\n              <img src={notesSearch} alt=\"Notes search page\" />\n            </div>\n          </div>\n          <p>Search and find notes written by other users</p>\n        </div>\n        <p className=\"Module-paragraph\">\n          As a side-effect of this project, I've also produced a rich\n          text editor written in React, using HTML's <i>lovely</i> contenteditable.\n          Definitely a little rough around the edges, but the inline math mode\n          is quite unique from what I've seen - you can demo it\n          {' '}\n          <Link className=\"Askd-form-link\" to=\"/demo\">here</Link>!\n        </p>\n      </>\n    )\n  }\n];\n\nexport default homeNews;\n","import React from 'react';\nimport HomePost from './HomePost';\nimport Utils from '../Utils';\nimport homeNews from './homeNews';\nimport '../css/CpNotes.css';\n\nfunction CpNotes() {\n  let innerContent = [];\n  for(let i = 0; i < homeNews.length; i++) {\n    if(homeNews[i].betaOnly && Utils.whatStageIsThis() !== 'beta') continue;\n    if(homeNews[i].prodOnly && Utils.whatStageIsThis() !== 'prod') continue;\n\n    innerContent.push(\n      <li className=\"Module-outer-space Cp-notes-home-post\" key={i}>\n        <HomePost info={homeNews[i]} />\n      </li>\n    )\n  }\n\n  return (\n    <ol className=\"Cp-notes-home-list\">\n      { innerContent }\n    </ol>\n  );\n}\n\nexport default CpNotes;\n","import React from 'react';\nimport CpNotes from '../Home/CpNotes';\n\nfunction Home({ history }) {\n  if(window.location.href.includes('?')) {\n    const urlSegments = window.location.href.split('?').splice(1);\n    const correctPath = urlSegments.join('?').split('#').join('/');\n    history.replace(correctPath);\n  }\n\n  return (\n    <CpNotes />\n  );\n}\n\nexport default Home;\n","const LoadState = Object.freeze({\n  LOADING: 0,\n  DONE: 1,\n  NOT_FOUND: 2\n});\n\nexport default LoadState;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport LoadState from '../Enum/LoadState';\n\nfunction CreateLoadingComponent(getData, defaultParams, notFoundErrorName, WrappedComponent) {\n  return function LoadingComponent(props) {\n    let mounted = useRef(true);\n    let [ currentParams, changeCurrentParams ] = useState(defaultParams);\n    let [ info, changeInfo ] = useState(null);\n    let [ componentScreen, changeScreen ] = useState(LoadState.LOADING);\n\n    const loadInfo = async (params) => {\n      changeScreen(LoadState.LOADING);\n\n      try {\n        const data = await getData(props, params);\n        if(mounted.current) {\n          changeInfo(data);\n          changeCurrentParams(params);\n          changeScreen(LoadState.DONE);\n        }\n      }\n      catch(err) {\n        if(err.name === notFoundErrorName) {\n          if(mounted.current) {\n            changeScreen(LoadState.NOT_FOUND);\n          }\n        }\n        else {\n          throw err;\n        }\n      }\n    };\n\n    const location = useLocation();\n    useEffect(() => {\n      mounted.current = true;\n      loadInfo(defaultParams);\n\n      return () => {\n        mounted.current = false;\n      };\n\n      /* An incomplete set of dependencies is actually useful here, since\n         making an API call each time props is updated is too expensive. The\n         actual proper set of dependencies depends on the specific component\n         returned. */\n      // eslint-disable-next-line\n    }, [props.staticKey, location]);\n\n    return (\n      <WrappedComponent otherProps={props} loadInfo={loadInfo} info={info}\n                        screen={componentScreen} currentParams={currentParams} />\n    );\n  };\n}\n\nexport default CreateLoadingComponent;\n","import React from 'react';\nimport '../css/Misc/LoadingSpinner.css';\n\nfunction LoadingSpinner() {\n  return (\n    <div className=\"Loading-spinner\">\n    </div>\n  );\n}\n\nexport default LoadingSpinner;\n","import Utils from '../Utils';\n\nconst API_ENDPOINTS = {\n  beta: 'https://qqmeusmrfk.execute-api.us-east-1.amazonaws.com/prod/',\n  prod: 'https://5ktb1hi8c7.execute-api.us-east-1.amazonaws.com/prod/'\n}\n\nconst ApiConstants = Object.freeze({\n  API_ENDPOINT: API_ENDPOINTS[Utils.whatStageIsThis()]\n});\n\nexport default ApiConstants;\n","import queryString from 'query-string';\nimport ApiConstants from './ApiConstants';\nimport UserAuthApi from './UserAuthApi';\n\nclass Api {\n  static createApiError(name, message) {\n    const err = Error(message);\n    err.name = name;\n\n    return err;\n  }\n\n  static async manageResponseError(response) {\n    if(response.status === 400) {\n      const responseJson = await response.json();\n      throw Api.createApiError(responseJson.name, responseJson.message);\n    }\n    else if(response.status !== 200) {\n      throw Error('Request failed!');\n    }\n  }\n\n  static async sendRequestBody(resource, options, method) {\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + resource, {\n      method: method,\n      body: JSON.stringify(options),\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async getJson(resource, options) {\n    const path = `${resource}?${queryString.stringify(options)}`;\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + path, {\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async postJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'POST');\n  }\n\n  static async putJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'PUT');\n  }\n\n  static async deleteJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'DELETE');\n  }\n}\n\nexport default Api;\n","import Api from './Api';\n\nconst CACHE_CAPACITY = 100;\nconst CACHE_EXPIRATION = 60 * 60 * 1000;\nlet userInfoCache = {};\nlet userInfoCacheSize = 0;\n\nclass UsersApi {\n  static async getUserInfo(username, basicInfoOnly) {\n    if(basicInfoOnly && username in userInfoCache) {\n      const cachedData = userInfoCache[username];\n      if(Date.now() - cachedData.timestamp > CACHE_EXPIRATION) {\n        delete userInfoCache[username];\n        userInfoCacheSize--;\n      }\n      else {\n        return cachedData;\n      }\n    }\n\n    const options = {\n      username: username,\n      basicInfoOnly: basicInfoOnly\n    };\n\n    const userInfo = await Api.getJson('users', options);\n\n    if(!(username in userInfoCache)) {\n      userInfoCacheSize++;\n    }\n\n    userInfoCache[username] = {\n      username: username,\n      avatarData: userInfo.avatarData,\n      cfUsername: userInfo.cfUsername,\n      cfRank: userInfo.cfRank,\n      cfRating: userInfo.cfRating,\n      timestamp: Date.now()\n    };\n\n    if(userInfoCacheSize > CACHE_CAPACITY) {\n      for(const key in userInfoCache) {\n        delete userInfoCache[key];\n        break;\n      }\n      userInfoCacheSize--;\n    }\n\n    return userInfo;\n  }\n\n  static async getUsers(page) {\n    const options = {\n      page: page\n    };\n\n    return await Api.getJson('users', options);\n  }\n\n  static async getSearchUsers(searchTerm) {\n    const options = {\n      searchTerm: searchTerm\n    };\n\n    return await Api.getJson('users', options);\n  }\n\n  static async updateUserInfo(username, avatarData) {\n    const options = {\n      username: username,\n      avatarData: avatarData\n    };\n\n    return await Api.putJson('users', options);\n  }\n\n  static async beginCfVerification(username, authCfUsername) {\n    const options = {\n      username: username,\n      authCfUsername: authCfUsername\n    };\n\n    return await Api.putJson('users/link', options);\n  }\n\n  static async endCfVerification(username, authCfUsername, authId) {\n    const options = {\n      username: username,\n      authCfUsername: authCfUsername,\n      authId: authId\n    };\n\n    return await Api.putJson('users/link', options);\n  }\n}\n\nexport default UsersApi;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/Misc/Username.css';\n\nfunction Username({ username, rank, linkToCf }) {\n  if(rank) {\n    rank = rank.split(' ').join('-');\n  }\n  else {\n    rank = 'newbie';\n  }\n  const className = `Username Username-${rank}`;\n\n  let innerContent;\n  if(rank === 'legendary-grandmaster') {\n    const firstLetter = username[0];\n    const firstLetterClassName = `Username-first-letter-${rank}`;\n    const remainingString = username.substring(1, username.length);\n    innerContent = (\n      <>\n        <div className={firstLetterClassName}>\n          {firstLetter}\n        </div>\n        {remainingString}\n      </>\n    );\n  }\n  else {\n    innerContent = (\n      <>\n        {username}\n      </>\n    );\n  }\n\n  if(linkToCf) {\n    return (\n      <a className={className} href={`https://codeforces.com/profile/${username}`}\n         target='_blank' rel='noopener noreferrer'>\n        { innerContent }\n      </a>\n    );\n  }\n  else {\n    return (\n      <Link className={className} to={`/users/${username}`}>\n        { innerContent }\n      </Link>\n    );\n  }\n}\n\nexport default Username;\n","import React, { useState } from 'react';\nimport UsersApi from '../Api/UsersApi';\nimport LoadingSpinner from '../Misc/LoadingSpinner';\nimport Username from '../Misc/Username';\nimport Utils from '../Utils';\nimport '../css/UserInfo.css';\n\nfunction UserInfo({ info }) {\n  let [ imageLoading, setImageLoading ] = useState(false);\n  let [ imageSource, setImageSource ] = useState(info.avatarData);\n  let [ error, setError ] = useState('');\n\n  let handleUpload = async (event) => {\n    const file = event.target.files[0];\n    const avatarData = await Utils.convertFileToBase64(file);\n\n    if(file.type !== 'image/png' && file.type !== 'image/jpeg') {\n      setError('Error: You may only choose .png or .jpeg images!');\n      return;\n    }\n\n    try {\n      setImageLoading(true);\n      setError('');\n      await UsersApi.updateUserInfo(info.username, avatarData);\n    }\n    catch(err) {\n      setError('Error: ' + err.message);\n    }\n\n    setImageLoading(false);\n    setImageSource(avatarData);\n  }\n\n  const contributionClassName = info.contribution > 0 ?\n    'Users-table-contributor' : '';\n\n  const imageContent = (\n    <>\n      <img src={imageSource} alt=\"Avatar\" />\n      {\n        info.email &&\n        <>\n          <label htmlFor=\"User-avatar-upload\" tabIndex=\"0\">\n            Change avatar\n          </label>\n          <input id=\"User-avatar-upload\" name=\"avatar\" type=\"file\"\n                 accept=\"image/jpeg, image/png\" onChange={handleUpload} />\n        </>\n      }\n    </>\n  );\n  const avatarContent = imageLoading ? <LoadingSpinner /> : imageContent;\n\n  return (\n    <div className=\"Module-outer-space\">\n      <h2 className=\"Module-heading Username\">\n        <Username username={info.username} rank={info.cfRank} />\n      </h2>\n      <div className=\"User-info\">\n        <ol className=\"User-info-info\">\n          {\n            info.email &&\n            <li>\n              <span className=\"icon-envelope\" />\n              Email: {info.email} (only visible to you)\n            </li>\n          }\n          <li className=\"User-info-info-contribution\">\n            <span className=\"icon-thumb_up_alt\" />\n            Contribution:\n            <span className={contributionClassName}>\n              {info.contribution}\n            </span>\n          </li>\n          <li>\n            <span className=\"icon-note-text\" />\n            {`Total notes: ${info.totalNotes}`}\n          </li>\n          {\n            info.cfUsername &&\n            <li>\n              <span className=\"icon-account_box\" />\n              Codeforces handle:\n              {' '}\n              <Username username={info.cfUsername} rank={info.cfRank}\n                        linkToCf={true} />\n              {' '}\n              <b>({info.cfRating})</b>\n            </li>\n          }\n          { error && <li className=\"User-info-info-error\">{error}</li> }\n        </ol>\n        <div className=\"User-info-avatar-outer\">\n          <div className=\"User-info-avatar\">\n            <div className=\"User-info-avatar-box\">\n              { avatarContent }\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserInfo;\n","const SolvedState = Object.freeze({\n  SOLVED: { value: 0, text: 'Solved', css: 'solved' },\n  UPSOLVED: { value: 1, text: 'Upsolved', css: 'upsolved' },\n  UPSOLVED_HELP: { value: 2, text: 'Upsolved with help', css: 'upsolved-help' },\n  UNSOLVED: { value: 3, text: 'Unsolved', css: 'unsolved' }\n});\n\nexport default SolvedState;\n","import Api from './Api';\nimport Utils from '../Utils';\nimport SolvedState from '../Enum/SolvedState';\n\nclass ProblemsApi {\n  static getProblemDisplayNameWithoutPlatform(info) {\n    if(info.platform === 'CodeChef') {\n      return `${info.contestCode} ${info.problemCode} - ${info.problemName}`;\n    }\n    if(info.platform === 'TopCoder') {\n      const divisionLevel = 3 - Math.ceil(info.level/3);\n      const problemLevel = (info.level - 1) % 3 + 1;\n      const divisionString = `Division ${divisionLevel} Level ${problemLevel}`;\n      return `${divisionString} - ${info.problemName}`;\n    }\n    return `${info.problemCode} - ${info.problemName}`;\n  }\n\n  static getProblemDisplayName(info) {\n    const afterText = ProblemsApi.getProblemDisplayNameWithoutPlatform(info);\n    return `${info.platform} ${afterText}`\n  }\n\n  static getContestDisplayName(info) {\n    const lowerCaseContestName = info.contestName.toLowerCase();\n    const lowerCasePlatform = info.platform.toLowerCase();\n    if(lowerCaseContestName.includes(lowerCasePlatform)) {\n      return info.contestName;\n    }\n    return `${info.platform} - ${info.contestName}`;\n  }\n\n  static getProblemLetter(info) {\n    if(info.platform === 'Project Euler') {\n      const inflatedProblemLetter = info.problemSk.split('#')[1];\n      return Utils.removePrefixZeroes(inflatedProblemLetter);\n    }\n    return info.problemSk.split('#')[1];\n  }\n\n  static async getContests(platform) {\n    const options = {\n      platform: platform\n    };\n\n    return await Api.getJson('contests', options);\n  }\n\n  static async getProblems(platform, contestId) {\n    const options = {\n      platform: platform,\n      contestId: contestId\n    };\n\n    return await Api.getJson('problems', options);\n  }\n\n  static async getProblemInfo(platform, problemId) {\n    const options = {\n      platform: platform,\n      problemId: problemId\n    };\n\n    let problemInfo = await Api.getJson('problems', options);\n    problemInfo.problemId = problemId;\n    problemInfo.platform = platform;\n\n    return problemInfo;\n  }\n\n  static getSolvedStateText(solvedStateValue) {\n    solvedStateValue = parseInt(solvedStateValue);\n    for(const state in SolvedState) {\n      if(SolvedState[state].value === solvedStateValue) {\n        return SolvedState[state].text;\n      }\n    }\n  }\n\n  static getSolvedStateCssClass(solvedStateValue) {\n    solvedStateValue = parseInt(solvedStateValue);\n    for(const state in SolvedState) {\n      if(SolvedState[state].value === solvedStateValue) {\n        return SolvedState[state].css;\n      }\n    }\n  }\n}\n\nexport default ProblemsApi;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport '../css/SearchSelect.css';\n\nconst MAX_OPTIONS = 15;\nconst GLOBAL_SORT_KEY = 'sk';\nconst NETWORK_LOAD_DELAY = 250;\n\nclass SearchSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchTerm: '',\n      previousValidSearchTerm: '',\n      showOptions: false,\n      lastChangedTime: 0,\n      lastLoadTime: 0,\n      options: [],\n      filteredOptions: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleOptionSelectWithKeys = this.handleOptionSelectWithKeys.bind(this);\n  }\n\n  getOptionString(option) {\n    const optionStringArray = [];\n    for(const key of this.props.keys)\n      optionStringArray.push(option[key]);\n\n    return optionStringArray.join(' - ');\n  }\n\n  async filterOptions() {\n    var filteredOptions = [];\n    const searchTerm = this.state.searchTerm.toLowerCase();\n\n    for(const option of this.state.options) {\n      if(filteredOptions.length === MAX_OPTIONS)\n        break;\n\n      const optionString = this.getOptionString(option);\n      if(optionString.toLowerCase().includes(searchTerm)) {\n        filteredOptions.push(option);\n        continue;\n      }\n\n      for(const key of this.props.keys) {\n        if(option[key].toLowerCase().includes(searchTerm)) {\n          filteredOptions.push(option);\n          break;\n        }\n      }\n    }\n\n    await Utils.setStatePromise(this, {\n      filteredOptions: filteredOptions\n    });\n  }\n\n  async networkLoadOptions() {\n    if(this.mounted === false) return;\n\n    const currentTime = Date.now();\n    await Utils.setStatePromise(this, {\n      loading: true,\n      lastLoadTime: currentTime\n    });\n\n    const currentSearchTerm = this.state.searchTerm;\n    const filteredOptions = await this.props.search(this.state.searchTerm);\n    if(currentSearchTerm === this.state.searchTerm) {\n      await Utils.setStatePromise(this, {\n        filteredOptions: filteredOptions\n      });\n    }\n\n    if(this.state.lastLoadTime === currentTime) {\n      await Utils.setStatePromise(this, {\n        loading: false\n      });\n    }\n  }\n\n  async setInitialSearchSortKey() {\n    await Utils.setStatePromise(this, {\n      searchTerm: ''\n    });\n\n    for(const option of this.state.options) {\n      if(option[GLOBAL_SORT_KEY] === this.props.initialSearchSortKey) {\n        const searchTerm = this.getOptionString(option);\n        await Utils.setStatePromise(this, {\n          searchTerm: searchTerm,\n          previousValidSearchTerm: searchTerm,\n          loading: false\n        });\n        break;\n      }\n    }\n\n    await this.filterOptions();\n  }\n\n  async componentDidMount() {\n    if(!this.props.network && this.props.search) {\n      await this.componentDidUpdate({});\n    }\n    else if(this.props.initialSearchTerm) {\n      await Utils.setStatePromise(this, {\n        searchTerm: this.props.initialSearchTerm\n      });\n      await this.networkLoadOptions();\n    }\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.staticKey && !this.props.staticKey) {\n      await Utils.setStatePromise(this, {\n        searchTerm: ''\n      });\n      return;\n    }\n\n    if(this.props.initialSearchTerm !== prevProps.initialSearchTerm) {\n       await Utils.setStatePromise(this, {\n         searchTerm: this.props.initialSearchTerm\n       });\n    }\n\n    if(this.props.staticKey !== prevProps.staticKey) {\n      await Utils.setStatePromise(this, {\n        searchTerm: '',\n        loading: true\n      });\n\n      if(!this.props.search) {\n        await Utils.setStatePromise(this, {\n          loading: false\n        });\n        return;\n      }\n      const options = await this.props.search();\n\n      await Utils.setStatePromise(this, {\n        loading: false,\n        previousValidSearchTerm: '',\n        options: options,\n        showOptions: false\n      });\n\n      await this.filterOptions();\n    }\n\n    if(this.props.initialSearchSortKey !== prevProps.initialSearchSortKey) {\n      await this.setInitialSearchSortKey();\n    }\n  }\n\n  async handleChange(event) {\n    if(this.props.network) {\n      const currentTime = Date.now();\n      await Utils.setStatePromise(this, {\n        searchTerm: event.target.value,\n        lastChangedTime: currentTime\n      });\n\n      if(this.state.searchTerm.length > 0) {\n        window.setTimeout(() => {\n          if(this.state.lastChangedTime === currentTime) {\n            this.networkLoadOptions();\n          }\n        }, NETWORK_LOAD_DELAY);\n      }\n      else {\n        await Utils.setStatePromise(this, {\n          filteredOptions: []\n        });\n      }\n    }\n    else {\n      await Utils.setStatePromise(this, {\n        searchTerm: event.target.value\n      });\n\n      await this.filterOptions();\n    }\n  }\n\n  async handleBlur(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.id === `Select-options-${this.props.name}`)\n      return;\n\n    if(this.props.network) {\n      await Utils.setStatePromise(this, {\n        showOptions: false\n      });\n    }\n    else {\n      await Utils.setStatePromise(this, {\n        showOptions: false,\n        searchTerm: this.state.previousValidSearchTerm\n      });\n    }\n  }\n\n  async handleFocus(event) {\n    await Utils.setStatePromise(this, {\n      showOptions: true\n    });\n  }\n\n  async handleOptionSelectWithKeys(sortKey, optionString) {\n    await Utils.setStatePromise(this, {\n      searchTerm: optionString,\n      previousValidSearchTerm: optionString,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n    this.props.callback(sortKey);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let optionElements = [];\n    for(const option of this.state.filteredOptions) {\n      if(this.props.keys) {\n        const optionString = this.getOptionString(option);\n        const displayString = option[this.props.displayKey];\n        const sortKey = option[GLOBAL_SORT_KEY];\n        optionElements.push(\n          <li onClick={() => this.handleOptionSelectWithKeys(sortKey, displayString)}\n              key={sortKey}>\n              {optionString}\n          </li>\n        );\n      }\n      else {\n        let optionCallback = async () => {\n          await Utils.setStatePromise(this, {\n            searchTerm: option,\n            showOptions: false\n          });\n          this.props.callback(option);\n\n          await this.networkLoadOptions();\n        };\n\n        optionElements.push(\n          <li onClick={optionCallback} key={option}>\n            {option}\n          </li>\n        );\n      }\n    }\n\n    const inputDisabled = !this.props.network &&\n      (!this.props.search || this.state.loading);\n\n    return (\n      <div onBlur={this.handleBlur} className=\"Search-select\">\n        <input className={this.state.loading ? \"Askd-form-loading\" : \"\"}\n               onChange={this.handleChange} autoComplete=\"off\" type=\"text\"\n               value={this.state.searchTerm} onFocus={this.handleFocus}\n               name={this.props.name} id={this.props.id}\n               disabled={inputDisabled} placeholder={this.props.placeholder} />\n        {\n          optionElements.length > 0 && this.state.showOptions &&\n          <ol id={`Select-options-${this.props.name}`} tabIndex=\"-1\"\n              className=\"Search-select-options\">\n            { optionElements }\n          </ol>\n        }\n      </div>\n    );\n  }\n}\n\nexport default SearchSelect;\n","import React, { useState, useEffect } from 'react';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport SearchSelect from './SearchSelect';\n\nfunction SearchProblemSelect({ initialPlatform, initialContestId,\n                               initialProblemId, initialSkipContestSearch,\n                               changeCallback }) {\n  let [ platform, setPlatform ] = useState(initialPlatform);\n  let [ contestSk, setContestSk ] = useState(initialContestId);\n  let [ skipContestSearch, setSkipContestSearch ] =\n    useState(initialSkipContestSearch);\n\n  let handlePlatformChange = (event) => {\n    setPlatform(event.target.value);\n    setContestSk(null);\n    changeCallback(event.target.value, null, null);\n  };\n\n  let updateContestSortKey = (newContestSk) => {\n    setContestSk(newContestSk);\n    changeCallback(platform, newContestSk, null);\n  };\n\n  let updateProblemSortKey = (newProblemSk) => {\n    changeCallback(platform, contestSk, newProblemSk);\n  };\n\n  let toggleSkipContestSearch = () => {\n    setSkipContestSearch(!skipContestSearch);\n    setContestSk(null);\n  };\n\n  let searchContestFunction = null;\n  let searchContestStaticKey = null;\n  if(platform && !skipContestSearch) {\n    searchContestFunction = () => ProblemsApi.getContests(platform);\n    searchContestStaticKey = platform;\n  }\n\n  let searchProblemFunction = null;\n  let searchProblemStaticKey = null;\n  if(platform && contestSk) {\n    searchProblemFunction = () => ProblemsApi.getProblems(platform, contestSk);\n    searchProblemStaticKey = platform + contestSk;\n  }\n  else if(platform && skipContestSearch) {\n    searchProblemFunction = () => ProblemsApi.getProblems(platform);\n    searchProblemStaticKey = platform;\n  }\n\n  const searchContestKeys = (platform === 'Project Euler') ?\n                            ['name'] : ['contestCode', 'name'];\n  const searchProblemKeys = (platform === 'TopCoder') ?\n                            ['name'] : ['problemCode', 'name'];\n\n  const selectPlatformValue = platform ? platform : '';\n  const skipButtonText = skipContestSearch ? 'Want to filter by contest?' :\n                                             'Want to skip filtering by contest?';\n\n  useEffect(() => {\n    if(initialContestId) {\n      setSkipContestSearch(false);\n    }\n    \n    setPlatform(initialPlatform);\n    setContestSk(initialContestId);\n  }, [initialPlatform, initialContestId]);\n\n  return (\n    <div className=\"Search-problem-select\">\n      <label htmlFor=\"cp-platform\">Platform</label>\n      <select value={selectPlatformValue} onChange={handlePlatformChange}\n              name=\"platform\" id=\"cp-platform\">\n        <option disabled value=\"\"></option>\n        <option value=\"CodeForces\">CodeForces</option>\n        <option value=\"CodeChef\">CodeChef</option>\n        <option value=\"AtCoder\">AtCoder</option>\n        <option value=\"TopCoder\">TopCoder</option>\n        <option value=\"Project Euler\">Project Euler</option>\n        <option value=\"ICPC\">ICPC (Kattis)</option>\n      </select>\n\n      <label htmlFor=\"cp-contest\">Contest</label>\n      <SearchSelect name='contest' id='cp-contest' search={searchContestFunction}\n                    keys={searchContestKeys} callback={updateContestSortKey}\n                    displayKey='name' staticKey={searchContestStaticKey}\n                    initialSearchSortKey={initialContestId} />\n\n      <button onClick={toggleSkipContestSearch}\n              type=\"button\" className=\"Askd-form-link Askd-form-link-separator\">\n        { skipButtonText }\n      </button>\n\n      <label htmlFor=\"cp-title\">Problem</label>\n      <SearchSelect name='title' id='cp-title' search={searchProblemFunction}\n                    keys={searchProblemKeys} callback={updateProblemSortKey}\n                    displayKey='name' staticKey={searchProblemStaticKey}\n                    initialSearchSortKey={initialProblemId} />\n    </div>\n  );\n}\n\nexport default SearchProblemSelect;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport SearchProblemSelect from '../SearchSelect/SearchProblemSelect';\nimport '../css/AddProblemForm.css';\n\nclass AddProblemForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      loading: false\n    };\n\n    this.platform = null;\n    this.contestId = null;\n    this.problemId = null;\n\n    this.close = this.close.bind(this);\n    this.problemChangeCallback = this.problemChangeCallback.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n  }\n\n  close() {\n    this.props.callback(null, null, null);\n  }\n\n  problemChangeCallback(platform, contestId, problemId) {\n    [ this.platform, this.contestId, this.problemId ] = [\n      platform, contestId, problemId\n    ];\n  }\n\n  async addProblem(event) {\n    event.preventDefault();\n\n    if(!this.problemId) {\n      await Utils.componentSetError(this, 'Please search and select a problem.');\n      return;\n    }\n\n    await this.setLoading(true);\n    this.props.callback(this.problemId, this.platform, this);\n  }\n\n  async setLoading(isLoading) {\n    await Utils.setStatePromise(this, {\n      loading: isLoading\n    });\n  }\n\n  render() {\n    let submitButtonClassName = 'Askd-button';\n    if(this.state.loading) {\n      submitButtonClassName += ' Askd-form-loading';\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\" />\n        <div className=\"Add-problem-form Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Add a problem!</h2>\n          <form className=\"Askd-form\" onSubmit={this.addProblem}>\n            <SearchProblemSelect changeCallback={this.problemChangeCallback} />\n            <input className={submitButtonClassName} type=\"submit\"\n                   value=\"Add Problem\" disabled={this.state.loading} />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddProblemForm;\n","import Api from './Api';\nimport ProblemsApi from './ProblemsApi';\n\nconst LIKED_NOTES_PAGE_SIZE = 50;\nconst RECENT_NOTES_SIDE_EXPIRATION = 2 * 60 * 1000;\nlet lastRecentNotesSideUpdate = null;\nlet oldRecentNotesSide = null;\n\nclass NotesApi {\n  static getNoteEditLink(note) {\n    const problemUrl = note.problemSk.replace('#', '/');\n    return `/notes/edit/${note.platform}/${problemUrl}`;\n  }\n\n  static getNotePublishedLink(note) {\n    const problemUrl = note.problemSk.replace('#', '/');\n    return `/notes/${note.username}/${note.platform}/${problemUrl}`;\n  }\n\n  static getNoteDisplayName(note) {\n    const contestDisplayName = ProblemsApi.getContestDisplayName(note);\n    const problemDisplayName = ProblemsApi.getProblemDisplayNameWithoutPlatform(note);\n    return `${contestDisplayName} ${problemDisplayName}`;\n  }\n\n  static async getNotes(username) {\n    const options = {\n      username: username\n    };\n\n    return await Api.getJson('notes', options);\n  }\n\n  static async getMostLikedNotes(username, platform, contestId, problemId, page) {\n    if(username) {\n      let noteInfo = await NotesApi.getNotes(username);\n      noteInfo.notes.sort((note1, note2) => note2.likeCount - note1.likeCount);\n\n      let publishedNotes = [];\n      for(const note of noteInfo.notes) {\n        if(!note.published) continue;\n        if(platform && note.platform !== platform) continue;\n        if(contestId && note.contestCode !== contestId) continue;\n        if(problemId && note.problemSk !== problemId) continue;\n        publishedNotes.push(note);\n      }\n\n      const totalPages = Math.ceil(publishedNotes.length/LIKED_NOTES_PAGE_SIZE);\n      if(page > Math.max(totalPages, 1)) {\n        let err = Error();\n        err.name = 'PageNotFound';\n        throw err;\n      }\n\n      let visibleNotes = [];\n      const startIndex = (page - 1) * LIKED_NOTES_PAGE_SIZE;\n      const endIndex = Math.min(startIndex + LIKED_NOTES_PAGE_SIZE, publishedNotes.length);\n      for(let i = startIndex; i < endIndex; i++) {\n        visibleNotes.push(publishedNotes[i]);\n      }\n\n      return {\n        notes: visibleNotes,\n        userRanks: noteInfo.userRanks,\n        totalPages: Math.max(totalPages, 1)\n      };\n    }\n    else {\n      const options = {\n        username: username,\n        platform: platform,\n        contestId: contestId,\n        problemId: problemId,\n        page: page\n      };\n\n      return await Api.getJson('notes', options);\n    }\n  }\n\n  static async getMostRecentNotes(page) {\n    if(page === 1 && Date.now() - lastRecentNotesSideUpdate < RECENT_NOTES_SIDE_EXPIRATION) {\n      return oldRecentNotesSide;\n    }\n\n    const options = {\n      page: page,\n      recent: true\n    };\n\n    const mostRecentNotes = await Api.getJson('notes', options);\n    if(page === 1) {\n      oldRecentNotesSide = mostRecentNotes;\n      lastRecentNotesSideUpdate = Date.now();\n    }\n\n    return mostRecentNotes;\n  }\n\n  static async getNoteInfo(username, platform, problemId, forcePublished) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId,\n      forcePublished: forcePublished\n    };\n\n    let noteInfo = await Api.getJson('notes', options);\n\n    noteInfo.problemInfo.platform = platform;\n    noteInfo.problemInfo.problemId = problemId;\n\n    return noteInfo;\n  }\n\n  static async addNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.postJson('notes', options);\n  }\n\n  static async editNote(username, platform, problemId, title, solved,\n                        content, published) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId,\n      title: title,\n      solved: solved,\n      content: JSON.stringify(content),\n      published: published\n    };\n\n    return await Api.putJson('notes', options);\n  }\n\n  static async deleteNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.deleteJson('notes', options);\n  }\n}\n\nexport default NotesApi;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport NotesApi from '../Api/NotesApi';\nimport Username from '../Misc/Username';\n\nclass UserNoteInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    const solvedClass = ProblemsApi.getSolvedStateCssClass(info.solved);\n    const noteEditLink = NotesApi.getNoteEditLink(info);\n    const notePublishedLink = NotesApi.getNotePublishedLink(info);\n    const publishedClass = info.published ? 'published' : 'unpublished';\n    const problemDisplayName =  ProblemsApi.getProblemDisplayName(info);\n    const timestamp = (new Date(info.editedTime)).toLocaleDateString();\n    const authorUsername = info.username;\n    const noteTitle = this.props.mostLikedMode ? ' - ' + info.title : info.title;\n\n    return (\n      <li className={`User-note-info User-note-info-${solvedClass}`}>\n        <ul className=\"User-note-info-links\">\n          {\n            this.props.loggedInUsername === authorUsername &&\n            <li>\n              <Link className=\"Askd-form-link\" to={noteEditLink}>\n                Edit\n              </Link>\n            </li>\n          }\n          {\n            info.published &&\n            <li>\n              <Link className=\"Askd-form-link\" to={notePublishedLink}>\n                View\n              </Link>\n            </li>\n          }\n        </ul>\n        <h5>\n          {\n            info.published && (info.likeCount > 0) &&\n            <span className=\"Like-dislike-score\">\n              <span className=\"icon-thumb_up_alt\" />\n              {info.likeCount}\n            </span>\n          }\n          {problemDisplayName}\n        </h5>\n        <h6 className=\"User-note-info-title\">\n          {\n            this.props.mostLikedMode &&\n            <Username username={authorUsername} rank={this.props.authorRank} />\n          }\n          {noteTitle}\n        </h6>\n        <h6 className=\"User-note-info-timestamp\">\n          {timestamp}\n        </h6>\n        <ul className=\"User-note-info-tags\">\n          <li className=\"User-note-info-tag User-note-solved-indicator\" />\n          <li className={`User-note-info-tag User-note-tag-${publishedClass}`} />\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default UserNoteInfo;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\n\nclass UserContestInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    let noteElements = [];\n    for(let i = 0; i < info.notes.length; i++) {\n      const note = info.notes[i];\n      const problemLetter = ProblemsApi.getProblemLetter(note);\n      const problemUrl = note.problemSk.replace('#', '/');\n      const authorUsername = note.username;\n\n      let codeClassName = 'User-note-contest-code';\n      if(problemLetter.length >= 3) {\n        codeClassName += '-small';\n      }\n\n      const solvedClass = ProblemsApi.getSolvedStateCssClass(note.solved);\n\n      noteElements.push(\n        <li key={i} className={`User-note-contest-note User-note-contest-${solvedClass}`}>\n          <ul className=\"User-note-contest-links\">\n            {\n              this.props.loggedInUsername === authorUsername &&\n              <li>\n                <Link className=\"Askd-form-link\"\n                      to={`/notes/edit/${note.platform}/${problemUrl}`}>\n                  Edit\n                </Link>\n              </li>\n            }\n            {\n              note.published &&\n              <li>\n                <Link className=\"Askd-form-link\"\n                      to={`/notes/${authorUsername}/${note.platform}/${problemUrl}`}>\n                  View\n                </Link>\n              </li>\n            }\n          </ul>\n          <span className={codeClassName}>\n            {problemLetter}\n          </span>\n        </li>\n      );\n    }\n\n    const contestDisplayName = ProblemsApi.getContestDisplayName(info);\n    const timestamp = (new Date(info.editedTime)).toLocaleDateString();\n\n    return (\n      <li className=\"User-note-info\">\n        <h5>\n          {contestDisplayName}\n        </h5>\n        <h6 className=\"User-note-contest-timestamp\">\n          {timestamp}\n        </h6>\n        <ul className=\"User-note-contest-notes\">\n          { noteElements }\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default UserContestInfo;\n","import React from 'react';\n\nfunction UserNotesTitleDropdown({ title, innerContent, showing,\n                                  colorClass, toggleCallback }) {\n  const showText = showing ? 'Hide' : 'Show';\n\n  if(!colorClass) {\n    colorClass = 'default';\n  }\n\n  const headingClassName = 'User-notes-title-dropdown-heading ' +\n    `User-notes-title-dropdown-heading-${colorClass}`;\n\n  return (\n    <li className=\"User-notes-title-dropdown\">\n      <button className=\"User-notes-title-dropdown-showhide\"\n              onClick={toggleCallback}>\n        { showText }\n      </button>\n      <h4 className={headingClassName}>\n        {title}\n      </h4>\n      { showing && innerContent }\n    </li>\n  );\n}\n\nexport default UserNotesTitleDropdown;\n","class VirtualPaginator {\n  constructor(pageSize, content) {\n    this.pageSize = pageSize;\n    this.setContent(content);\n  }\n\n  setContent(content) {\n    this.content = [];\n    this.activeItems = content.length;\n\n    for(let i = 0; i < content.length; i++) {\n      let item = content[i];\n      item.paginatorActive = true;\n      this.content.push(item);\n    }\n  }\n\n  toggleActiveItems(indices) {\n    for(const index of indices) {\n      const active = this.content[index].paginatorActive;\n      this.content[index].paginatorActive = !active;\n\n      if(active) {\n        this.activeItems--;\n      }\n      else {\n        this.activeItems++;\n      }\n    }\n  }\n\n  getContent(pageIndex) {\n    let currentIndex = 1;\n    let activeBufferSize = 0;\n    let itemBuffer = [];\n\n    for(const item of this.content) {\n      itemBuffer.push(item);\n      if(item.paginatorActive) {\n        activeBufferSize++;\n        if(activeBufferSize === this.pageSize) {\n          if(currentIndex === pageIndex)\n            return itemBuffer;\n          itemBuffer = [];\n          activeBufferSize = 0;\n          currentIndex++;\n        }\n      }\n    }\n\n    if(currentIndex === pageIndex) {\n      return itemBuffer;\n    }\n\n    throw Error('Page index out of range!');\n  }\n\n  getPageCount() {\n    let pageCount = 0;\n    let bufferSize = 0;\n    let activeBufferSize = 0;\n    for(const item of this.content) {\n      if(bufferSize === 0) {\n        pageCount++;\n      }\n\n      bufferSize++;\n      if(item.paginatorActive) {\n        activeBufferSize++;\n      }\n      if(activeBufferSize === this.pageSize) {\n        activeBufferSize = 0;\n        bufferSize = 0;\n      }\n    }\n\n    return pageCount;\n  }\n}\n\nexport default VirtualPaginator;\n","import React from 'react';\nimport '../css/Paginator.css';\n\nfunction Paginator({ currentPage, totalPages, bottom, callback }) {\n  let pageIndices = [ currentPage ];\n\n  let after = currentPage + 1;\n  let increment = 2;\n  while(after < totalPages) {\n    pageIndices.push(after);\n    after += increment;\n    increment *= 2;\n  }\n\n  let before = currentPage - 1;\n  increment = 2;\n  while(before > 1) {\n    pageIndices.push(before);\n    before -= increment;\n    increment *= 2;\n  }\n\n  if(currentPage !== 1)\n    pageIndices.push(1);\n  if(currentPage !== totalPages && totalPages > 1)\n    pageIndices.push(totalPages);\n\n  pageIndices.sort((a, b) => a - b);\n\n  let paginatorButtons = [];\n  for(const pageIndex of pageIndices) {\n    const buttonClassName = (pageIndex === currentPage) ?\n      'Paginator-list-selected' : 'Paginator-list-free';\n    const buttonOnClick = (pageIndex === currentPage) ?\n      null : () => callback(pageIndex);\n\n    paginatorButtons.push(\n      <li key={pageIndex}>\n        <button className={buttonClassName} onClick={buttonOnClick}>\n          {pageIndex}\n        </button>\n      </li>\n    );\n  }\n\n  let outerClassName = 'Paginator';\n  if(bottom) {\n    outerClassName += ' Paginator-bottom';\n  }\n\n  return (\n    <div className={outerClassName}>\n      <ul className=\"Paginator-list\">\n        { paginatorButtons }\n      </ul>\n    </div>\n  );\n}\n\nexport default Paginator;\n","import React, { Component } from 'react';\nimport UserNoteInfo from './UserNoteInfo';\nimport UserContestInfo from './UserContestInfo';\nimport UserNotesTitleDropdown from './UserNotesTitleDropdown';\nimport VirtualPaginator from '../Paginator/VirtualPaginator';\nimport Paginator from '../Paginator/Paginator';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport Utils from '../Utils';\n\nconst RecursionLevel = Object.freeze({\n  CONTEST: 0,\n  PLATFORM: 1,\n  SOLVED: 2\n});\nconst PAGINATE_SIZE = 15;\n\nfunction compareByRecent(note1, note2) {\n  if(note1.editedTime > note2.editedTime)\n    return -1;\n  return 1;\n}\n\nfunction groupByAttributes(objectList, attributes) {\n  let attributeGroups = {};\n  for(const obj of objectList) {\n    let attributeValues = [];\n    for(const attribute of attributes) {\n      attributeValues.push(obj[attribute]);\n    }\n\n    const key = attributeValues.join('#');\n    if(attributeGroups.hasOwnProperty(key)) {\n      attributeGroups[key].push(obj);\n    }\n    else {\n      attributeGroups[key] = [ obj ];\n    }\n  }\n\n  return attributeGroups;\n}\n\nclass UserNotesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 1,\n      loggedInUsername: null\n    };\n\n    this.sortNoteItems(this.props.notes);\n    this.virtualPaginator = new VirtualPaginator(PAGINATE_SIZE, this.sortedNoteItems);\n\n    this.updatePage = this.updatePage.bind(this);\n  }\n\n  async componentDidMount() {\n    const loggedInUsername = await UserAuthApi.getUsername();\n    await Utils.setStatePromise(this, {\n      loggedInUsername: loggedInUsername\n    });\n  }\n\n  createContestObject(notes) {\n    const firstNote = notes[0];\n    let contestObject = {\n      contestCode: firstNote.contestCode,\n      contestName: firstNote.contestName,\n      platform: firstNote.platform,\n      editedTime: firstNote.editedTime,\n      notes: []\n    };\n\n    if(this.props.organizeBySolved)\n      contestObject.solved = firstNote.solved;\n    if(this.props.organizeByPlatform)\n      contestObject.platform = firstNote.platform;\n\n    for(const note of notes) {\n      contestObject.notes.push(note);\n      if(note.editedTime > contestObject.editedTime) {\n        contestObject.editedTime = note.editedTime;\n      }\n    }\n\n    return contestObject;\n  }\n\n  sortNoteItems(notes, recursionLevel = RecursionLevel.SOLVED, keyString = '') {\n    let paginatorIndices = [];\n    if(recursionLevel === RecursionLevel.CONTEST) {\n      if(this.props.organizeByContest) {\n        const contestGroups = groupByAttributes(notes, ['platform', 'contestCode']);\n        for(const key in contestGroups) {\n          let contestObject = this.createContestObject(contestGroups[key]);\n          paginatorIndices.push(this.sortedNoteItems.length);\n          this.sortedNoteItems.push(contestObject);\n        }\n      }\n      else {\n        for(const note of notes) {\n          paginatorIndices.push(this.sortedNoteItems.length);\n          this.sortedNoteItems.push(note);\n        }\n      }\n    }\n    else {\n      let organize, attributeString;\n      if(recursionLevel === RecursionLevel.SOLVED) {\n        this.sortedNoteItems = [];\n        this.dropdownShowing = {};\n        this.dropdownIndices = {};\n\n        if(this.props.sortByRecent) {\n          notes = [...notes].sort(compareByRecent);\n        }\n\n        organize = this.props.organizeBySolved;\n        attributeString = 'solved';\n      }\n      else {\n        organize = this.props.organizeByPlatform;\n        attributeString = 'platform';\n      }\n\n      if(organize) {\n        const groups = groupByAttributes(notes, [attributeString]);\n        for(const key in groups) {\n          const innerKeyString = `${keyString}#${key}`;\n          const innerIndices =\n            this.sortNoteItems(groups[key], recursionLevel - 1, innerKeyString);\n\n          this.dropdownShowing[innerKeyString] = true;\n          this.dropdownIndices[innerKeyString] = innerIndices;\n\n          for(const index of innerIndices) {\n            paginatorIndices.push(index);\n          }\n        }\n      }\n      else {\n        return this.sortNoteItems(notes, recursionLevel - 1, keyString);\n      }\n    }\n\n    return paginatorIndices;\n  }\n\n  renderNoteItems(notes, recursionLevel = RecursionLevel.SOLVED, keyString = '') {\n    let noteInfoElements = [];\n    if(recursionLevel === RecursionLevel.CONTEST) {\n      let NoteComponent =\n        this.props.organizeByContest ? UserContestInfo : UserNoteInfo;\n\n      for(let i = 0; i < notes.length; i++) {\n        noteInfoElements.push(\n          <NoteComponent key={i} info={notes[i]}\n                         loggedInUsername={this.state.loggedInUsername} />\n        );\n      }\n    }\n    else {\n      let organize, attributeString;\n      if(recursionLevel === RecursionLevel.SOLVED) {\n        organize = this.props.organizeBySolved;\n        attributeString = 'solved';\n      }\n      else {\n        organize = this.props.organizeByPlatform;\n        attributeString = 'platform';\n      }\n\n      if(organize) {\n        const groups = groupByAttributes(notes, [attributeString]);\n        for(const key in groups) {\n          const innerKeyString = `${keyString}#${key}`;\n          const innerContent =\n            this.renderNoteItems(groups[key], recursionLevel - 1, innerKeyString);\n          const title = (recursionLevel === RecursionLevel.SOLVED) ?\n            ProblemsApi.getSolvedStateText(key) : key;\n\n          const showing = this.dropdownShowing[innerKeyString];\n          const innerIndices = this.dropdownIndices[innerKeyString];\n          const toggleCallback = async () => {\n            this.virtualPaginator.toggleActiveItems(innerIndices);\n            this.dropdownShowing[innerKeyString] = !this.dropdownShowing[innerKeyString];\n\n            const totalPages = this.virtualPaginator.getPageCount();\n            if(this.state.page > totalPages) {\n              await this.updatePage(totalPages);\n            }\n\n            this.forceUpdate();\n          };\n\n          let solvedStateCssClass = null;\n          if(attributeString === 'solved') {\n            solvedStateCssClass = ProblemsApi.getSolvedStateCssClass(key);\n          }\n\n          noteInfoElements.push(\n            <UserNotesTitleDropdown key={key} title={title}\n                                    innerContent={innerContent} showing={showing}\n                                    toggleCallback={toggleCallback}\n                                    colorClass={solvedStateCssClass} />\n          );\n        }\n      }\n      else {\n        return this.renderNoteItems(notes, recursionLevel - 1);\n      }\n    }\n\n    return (\n      <ul className=\"User-notes-list\">\n        { noteInfoElements }\n      </ul>\n    );\n  }\n\n  async updatePage(page) {\n    await Utils.setStatePromise(this, {\n      page: page\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Only re-sort note items on an (important) props update\n    const importantProps = [\n      'organizeBySolved',\n      'organizeByPlatform',\n      'organizeByContest',\n      'sortByRecent'\n    ];\n    const currentImportantProps = importantProps.map((x) => this.props[x]);\n    const nextImportantProps = importantProps.map((x) => nextProps[x]);\n\n    if(JSON.stringify(currentImportantProps) !== JSON.stringify(nextImportantProps)) {\n      this.props = nextProps;\n      this.sortNoteItems(this.props.notes);\n      this.virtualPaginator.setContent(this.sortedNoteItems);\n\n      if(this.state.page !== 1) {\n        this.updatePage(1);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  render() {\n    if(this.props.notes.length === 0) {\n      return (\n        <p className=\"User-notes-nothing\">There's nothing to see here yet!</p>\n      );\n    }\n\n    const noteItems = this.virtualPaginator.getContent(this.state.page);\n    const totalPages = this.virtualPaginator.getPageCount();\n    const paginator = (bottom) => (\n      <Paginator currentPage={this.state.page} totalPages={totalPages}\n                 callback={this.updatePage} bottom={bottom} />\n    );\n\n    return (\n      <>\n        { paginator(false) }\n        { this.renderNoteItems(noteItems) }\n        { paginator(true) }\n      </>\n    );\n  }\n}\n\nexport default UserNotesList;\n","import React, { Component } from 'react';\nimport AddProblemForm from './AddProblemForm';\nimport NotesApi from '../Api/NotesApi';\nimport UserNotesList from './UserNotesList';\nimport Utils from '../Utils';\nimport '../css/UserNotes.css';\n\nclass UserNotes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAddProblemForm: false,\n      organizeBySolved: false,\n      organizeByPlatform: false,\n      organizeByContest: false,\n      sortByRecent: false\n    };\n\n    this.toggleAddProblemForm = this.toggleAddProblemForm.bind(this);\n    this.toggleOrganizeBySolved = this.toggleOrganizeBySolved.bind(this);\n    this.toggleOrganizeByPlatform = this.toggleOrganizeByPlatform.bind(this);\n    this.toggleOrganizeByContest = this.toggleOrganizeByContest.bind(this);\n    this.toggleSortByRecent = this.toggleSortByRecent.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  async toggleAddProblemForm() {\n    await Utils.setStatePromise(this, {\n      showAddProblemForm: !this.state.showAddProblemForm\n    });\n  }\n\n  async toggleOrganizeBySolved() {\n    await Utils.setStatePromise(this, {\n      organizeBySolved: !this.state.organizeBySolved\n    });\n  }\n\n  async toggleOrganizeByPlatform() {\n    await Utils.setStatePromise(this, {\n      organizeByPlatform: !this.state.organizeByPlatform\n    });\n  }\n\n  async toggleOrganizeByContest() {\n    await Utils.setStatePromise(this, {\n      organizeByContest: !this.state.organizeByContest\n    });\n  }\n\n  async toggleSortByRecent() {\n    await Utils.setStatePromise(this, {\n      sortByRecent: !this.state.sortByRecent\n    });\n  }\n\n  async addProblem(problemSortKey, platform, formComponent) {\n    if(!problemSortKey) {\n      await this.toggleAddProblemForm();\n      return;\n    }\n\n    try {\n      const username = this.props.userInfo.username;\n      await NotesApi.addNote(username, platform, problemSortKey);\n\n      const problemUrl = problemSortKey.replace('#', '/');\n      this.props.history.push(`/notes/edit/${platform}/${problemUrl}`);\n    }\n    catch(err) {\n      await Utils.componentSetError(formComponent, err.message);\n      await formComponent.setLoading(false);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        {\n          this.state.showAddProblemForm &&\n          <AddProblemForm callback={this.addProblem} />\n        }\n        <div className=\"User-notes-outer Module-outer-space\">\n          <h2 className=\"Module-heading\">Notes</h2>\n          <form>\n            <div className=\"User-notes-organize\">\n              <label>\n                <b>Organize by</b>\n              </label>\n              <input type=\"checkbox\" name=\"solved\" value=\"solved\"\n                     onChange={this.toggleOrganizeBySolved} />\n              <label htmlFor=\"solved\">Solved</label>\n              <input type=\"checkbox\" name=\"platform\" value=\"platform\"\n                     onChange={this.toggleOrganizeByPlatform} />\n              <label htmlFor=\"platform\">Platform</label>\n              <input type=\"checkbox\" name=\"contest\" value=\"contest\"\n                     onChange={this.toggleOrganizeByContest} />\n              <label htmlFor=\"contest\">Contest</label>\n            </div>\n            <div className=\"User-notes-organize\">\n              <label htmlFor=\"sort\">\n                <b>Sort by</b>\n              </label>\n              <select defaultValue=\"default\" name=\"sort\"\n                      onChange={this.toggleSortByRecent}>\n                <option value=\"default\">Default</option>\n                <option value=\"recent\">Recent</option>\n              </select>\n            </div>\n          </form>\n          <div className=\"User-notes Module-space\">\n            <UserNotesList organizeBySolved={this.state.organizeBySolved}\n                           organizeByPlatform={this.state.organizeByPlatform}\n                           organizeByContest={this.state.organizeByContest}\n                           sortByRecent={this.state.sortByRecent}\n                           notes={this.props.notes} />\n            {\n              this.props.userInfo.email &&\n              <button onClick={this.toggleAddProblemForm}\n                      className=\"User-notes-add Askd-button Askd-button-circular\">\n                <span className=\"icon-plus\" />\n              </button>\n            }\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserNotes;\n","import React from 'react';\nimport CreateLoadingComponent from '../HOC/CreateLoadingComponent';\nimport LoadingSpinner from '../Misc/LoadingSpinner';\nimport UserInfo from './UserInfo';\nimport UserNotes from './UserNotes';\nimport UsersApi from '../Api/UsersApi';\nimport NotesApi from '../Api/NotesApi';\nimport LoadState from '../Enum/LoadState';\n\nasync function getUserData(props, params) {\n  const username = props.match.params.username;\n  const userInfo = await UsersApi.getUserInfo(username);\n  const noteInfo = await NotesApi.getNotes(username);\n\n  userInfo.totalNotes = noteInfo.notes.length;\n  userInfo.username = username;\n\n  return {\n    userInfo: userInfo,\n    notes: noteInfo.notes\n  };\n}\n\nfunction UserProfile({ otherProps, info, screen }) {\n  if(screen === LoadState.NOT_FOUND) {\n    return (\n      <div className=\"Module-description\">\n        <h2>User not found!</h2>\n      </div>\n    );\n  }\n  else if(screen === LoadState.LOADING) {\n    return (\n      <LoadingSpinner />\n    );\n  }\n  else {\n    return (\n      <>\n        <UserInfo info={info.userInfo} />\n        <UserNotes userInfo={info.userInfo} notes={info.notes}\n                   history={otherProps.history} />\n      </>\n    );\n  }\n}\n\nexport default CreateLoadingComponent(\n  getUserData, null, 'UserNotFound', UserProfile\n);\n","const ContentType = Object.freeze({\n  MATH: (1 << 0),\n  BOLD: (1 << 1),\n  ITALIC: (1 << 2),\n  UNDERLINE: (1 << 3),\n  STRIKETHROUGH: (1 << 4),\n  IMAGE: (1 << 5)\n});\n\nexport default ContentType;\n","import ContentType from './ContentType';\n\nclass MaskManager {\n  static toolbarMergeBit(bit, on, originalMask) {\n    if(bit === ContentType.MATH) {\n      if(on) return bit;\n      return 0;\n    }\n    else {\n      if(originalMask & ContentType.MATH) {\n        originalMask ^= ContentType.MATH;\n      }\n      return originalMask ^ bit;\n    }\n  }\n\n  static editorMergeBit(bit, on, originalMask) {\n    if(originalMask & ContentType.IMAGE) {\n      return originalMask;\n    }\n\n    if(bit === ContentType.MATH) {\n      if(on) return bit;\n\n      if(originalMask & bit) originalMask ^= bit;\n      return originalMask;\n    }\n    else {\n      if(originalMask & ContentType.MATH) originalMask = 0;\n      if(on) return originalMask | bit;\n\n      if(originalMask & bit) originalMask ^= bit;\n      return originalMask;\n    }\n  }\n\n  static getClassName(mask) {\n    let className = '';\n    for(const style in ContentType) {\n      if(mask & ContentType[style]) {\n        className += `Askd-te-${style} `;\n      }\n    }\n    return className;\n  }\n}\n\nexport default MaskManager;\n","import MaskManager from './MaskManager';\n\nfunction lessThan(a, b, c, d) {\n  if(a === c)\n    return b < d;\n  return a < c;\n}\n\nclass Caret {\n  constructor(id) {\n    this.id = id;\n  }\n\n  getInfo() {\n    const selection = window.getSelection();\n    let anchorElement = selection.anchorNode.parentElement;\n    let focusElement = selection.focusNode.parentElement;\n    let originalAnchorElement = anchorElement;\n    let originalFocusElement = focusElement;\n\n    let anchorMathBlock = this.getContainingMathBlock(anchorElement);\n    let focusMathBlock = this.getContainingMathBlock(focusElement);\n    if(anchorMathBlock) anchorElement = anchorMathBlock;\n    if(focusMathBlock) focusElement = focusMathBlock;\n\n    let anchorIndex = anchorElement.getAttribute('index');\n    let focusIndex = focusElement.getAttribute('index');\n    let anchorOffset = anchorElement.getAttribute('position');\n    let focusOffset = focusElement.getAttribute('position');\n    let insideCaretBlock = anchorElement.getAttribute('id') === 'Askd-te-CARET';\n\n    if(anchorIndex === null || focusIndex === null) {\n      return {\n        rangeSelect: false,\n        index: 0,\n        position: 0,\n        insideCaretBlock: false,\n        editorSelected: true\n      };\n    }\n\n    if(originalAnchorElement.classList.contains('Askd-te-MATHJAX') &&\n       selection.anchorOffset === 0) {\n      anchorOffset = 0;\n    }\n    if(originalFocusElement.classList.contains('Askd-te-MATHJAX') &&\n       selection.focusOffset === 0) {\n      focusOffset = 0;\n    }\n\n    if(anchorOffset === null) anchorOffset = selection.anchorOffset;\n    if(focusOffset === null) focusOffset = selection.focusOffset;\n\n    anchorIndex = Number(anchorIndex);\n    anchorOffset = Number(anchorOffset);\n    focusIndex = Number(focusIndex);\n    focusOffset = Number(focusOffset);\n\n    if(anchorIndex === focusIndex && anchorOffset === focusOffset) {\n      return {\n        rangeSelect: false,\n        index: anchorIndex,\n        position: anchorOffset,\n        insideCaretBlock: insideCaretBlock,\n        editorSelected: true\n      };\n    }\n\n    if(!lessThan(anchorIndex, anchorOffset, focusIndex, focusOffset)) {\n      [ anchorIndex, focusIndex ] = [ focusIndex, anchorIndex ];\n      [ anchorOffset, focusOffset ] = [ focusOffset, anchorOffset ];\n    }\n\n    return {\n      rangeSelect: true,\n      leftIndex: anchorIndex,\n      leftPosition: anchorOffset,\n      rightIndex: focusIndex,\n      rightPosition: focusOffset,\n      editorSelected: true\n    };\n  }\n\n  setInfo(newCaretInfo, editorMask) {\n    if(newCaretInfo.rangeSelect) {\n      this.removeCaretBlock();\n      this.setRangePosition(\n        newCaretInfo.leftIndex, newCaretInfo.leftPosition,\n        newCaretInfo.rightIndex, newCaretInfo.rightPosition\n      );\n    }\n    else if(newCaretInfo.insideCaretBlock) {\n      this.addCaretBlock(newCaretInfo.index, newCaretInfo.position, editorMask);\n      this.setPosition(-1, 1);\n    }\n    else {\n      this.removeCaretBlock();\n      this.setPosition(newCaretInfo.index, newCaretInfo.position);\n    }\n  }\n\n  setPosition(index, position) {\n    let blockElement;\n    if(index >= 0) {\n      blockElement = document.getElementById(this.id + index);\n    }\n    else {\n      blockElement = document.getElementById('Askd-te-CARET');\n    }\n\n    let textNode = blockElement.childNodes[0];\n    if(!textNode) {\n      textNode = document.createTextNode('');\n      blockElement.appendChild(textNode);\n    }\n\n    let range = document.createRange();\n    range.setStart(textNode, position);\n    range.collapse(true);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  setRangePosition(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const leftBlockElement = document.getElementById(this.id + leftIndex);\n    const rightBlockElement = document.getElementById(this.id + rightIndex);\n    const leftTextNode = leftBlockElement.childNodes[0];\n    const rightTextNode = rightBlockElement.childNodes[0];\n\n    let range = document.createRange();\n    range.setStart(leftTextNode, leftPosition);\n    range.setEnd(rightTextNode, rightPosition);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  addCaretBlock(index, position, editorMask) {\n    this.removeCaretBlock();\n\n    let caretBlock = document.createElement('div');\n    caretBlock.setAttribute('id', 'Askd-te-CARET');\n    caretBlock.setAttribute('index', index);\n    caretBlock.setAttribute('position', position);\n    caretBlock.setAttribute('class', MaskManager.getClassName(editorMask));\n    caretBlock.innerHTML = String.fromCharCode(8203);\n\n    let nextBlock = document.getElementById(this.id + (index + 1));\n    nextBlock.parentElement.insertBefore(caretBlock, nextBlock);\n  }\n\n  removeCaretBlock() {\n    let existingCaretBlock = document.getElementById('Askd-te-CARET');\n    if(existingCaretBlock) {\n      existingCaretBlock.parentElement.removeChild(existingCaretBlock);\n      return true;\n    }\n    return false;\n  }\n\n  getContainingMathBlock(element) {\n    while(element) {\n      if(element.classList.contains('Askd-te-MATHJAX')) {\n        return element;\n      }\n      element = element.parentElement;\n    }\n    return null;\n  }\n}\n\nexport default Caret;\n","import React, { Component } from 'react';\nimport ContentType from './ContentType';\n\nclass Toolbar extends Component {\n  render() {\n    const boldSelected = (this.props.mask & ContentType.BOLD) > 0;\n    const italicSelected = (this.props.mask & ContentType.ITALIC) > 0;\n    const underlineSelected = (this.props.mask & ContentType.UNDERLINE) > 0;\n    const strikethroughSelected = (this.props.mask & ContentType.STRIKETHROUGH) > 0;\n    const mathSelected = (this.props.mask & ContentType.MATH) > 0;\n\n    const selectHandler = (type) => {\n      return (event) => {\n        event.preventDefault();\n        this.props.callback(type);\n      };\n    };\n\n    return (\n      <div className=\"Askd-text-editor-toolbar\">\n        <ul>\n          <li className={`Askd-tb-selected-${boldSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-BOLD\"\n                    onPointerDown={selectHandler(ContentType.BOLD)} />\n          </li>\n          <li className={`Askd-tb-selected-${italicSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-ITALIC\"\n                    onPointerDown={selectHandler(ContentType.ITALIC)} />\n          </li>\n          <li className={`Askd-tb-selected-${underlineSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-UNDERLINE\"\n                    onPointerDown={selectHandler(ContentType.UNDERLINE)} />\n          </li>\n          <li className={`Askd-tb-selected-${strikethroughSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-STRIKETHROUGH\"\n                    onPointerDown={selectHandler(ContentType.STRIKETHROUGH)} />\n          </li>\n          <li className={`Askd-tb-selected-${mathSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-MATH\"\n                    onPointerDown={selectHandler(ContentType.MATH)} />\n          </li>\n          <li className={`Askd-tb-selected-false`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-IMAGE\"\n                    onPointerDown={selectHandler(ContentType.IMAGE)} />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import MaskManager from './MaskManager';\nimport ContentType from './ContentType';\n\n/* This is different from str.length; for example, emojis can use up 2 or more */\nfunction countCharacters(str) {\n  let counter = 0;\n  for(const character of str) {\n    Number(character);  // Silence unused variable linter warning\n    counter++;\n  }\n  return counter;\n}\n\nclass VirtualTextEditor {\n  constructor(initialContent) {\n    this.characters = [];\n    this.caretBlockIndex = null;\n    this.caretBlockPosition = null;\n\n    if(initialContent) {\n      for(const block of initialContent) {\n        const mask = block.m;\n        const imageLink = block.l;\n        const imageSize = block.s;\n        for(const char of block.c) {\n          this.characters.push(this.createBlock(\n            char, mask, imageLink, imageSize\n          ));\n        }\n      }\n\n      /* Remove extra newline character if it exists */\n      this.characters.splice(this.characters.length - 1);\n    }\n\n    this.updateBlocks();\n  }\n\n  getIndexAndPosition(globalIndex) {\n    let charactersScanned = 0;\n    for(let i = 0; i < this.blocks.length; i++) {\n      const block = this.blocks[i];\n      const blockLength = countCharacters(block.c);\n      const blockEndIndex = charactersScanned + blockLength;\n\n      if(globalIndex <= blockEndIndex) {\n        let position = 0;\n        for(let j = charactersScanned; j <= blockEndIndex; j++) {\n          if(globalIndex === j) {\n            return [ i, position ];\n          }\n          position += this.characters[j].c.length;\n        }\n      }\n      charactersScanned += blockLength;\n    }\n\n    return [ null, null ];\n  }\n\n  getGlobalIndex(index, position) {\n    let globalIndex = this.blockStarts[index];\n    let characterCounter = 0;\n    while(characterCounter < position && globalIndex < this.characters.length) {\n      characterCounter += this.characters[globalIndex].c.length;\n      globalIndex++;\n    }\n\n    if(characterCounter <= position)\n      return globalIndex;\n\n    return globalIndex - 1;\n  }\n\n  /* Visually identical caret positions can have two different indices\n  and positions if it's in the middle of two blocks. This method returns the end\n  position of the first block if rangeEnd is false and the starting position\n  of the second block otherwise. */\n  getCorrectedIndexAndPosition(index, position, rangeEnd, globalIndex=null) {\n    if(globalIndex === null) {\n      globalIndex = this.getGlobalIndex(index, position);\n    }\n\n    const firstBlockEnd = this.getIndexAndPosition(globalIndex);\n    if(rangeEnd && globalIndex < this.characters.length) {\n      const nextBlockGlobalIndex = this.getGlobalIndex(firstBlockEnd[0] + 1, 0);\n      if(globalIndex === nextBlockGlobalIndex) {\n        return [ firstBlockEnd[0] + 1, 0 ];\n      }\n    }\n    return firstBlockEnd;\n  }\n\n  getCharacterMask(index, position, rangeSelect) {\n    let globalIndex = this.getGlobalIndex(index, position);\n\n    if(globalIndex === 0) {\n      if(this.characters.length > 0)\n        return this.characters[0].m;\n      return 0;\n    }\n    else if(rangeSelect) {\n      globalIndex = Math.min(globalIndex, this.characters.length - 1);\n      return this.characters[globalIndex].m;\n    }\n    return this.characters[globalIndex - 1].m;\n  }\n\n  insert(index, position, insertedString, mask) {\n    const globalIndex = this.getGlobalIndex(index, position);\n    const rightBuffer = this.characters.splice(globalIndex);\n\n    for(const char of insertedString) {\n      this.characters.push({\n        m: mask,\n        c: char\n      });\n    }\n\n    const globalCaretPosition = this.characters.length;\n    for(const character of rightBuffer) {\n      this.characters.push(character);\n    }\n\n    this.caretBlockIndex = null;\n    this.caretBlockPosition = null;\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  delete(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n    const deleteLength = globalRightIndex - globalLeftIndex;\n\n    if(globalLeftIndex < 0) {\n      return [ 0, 0 ];\n    }\n\n    this.characters.splice(globalLeftIndex, deleteLength);\n    const globalCaretPosition = globalLeftIndex;\n\n    this.caretBlockIndex = null;\n    this.caretBlockPosition = null;\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  rangeMaskUpdate(leftIndex, leftPosition, rightIndex, rightPosition, bit, on) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n\n    for(let i = globalLeftIndex; i < globalRightIndex; i++) {\n      this.characters[i].m = MaskManager.editorMergeBit(bit, on, this.characters[i].m);\n    }\n\n    this.caretBlockIndex = null;\n    this.caretBlockPosition = null;\n    this.updateBlocks();\n\n    const [ newLeftIndex, newLeftPosition ] = this.getIndexAndPosition(globalLeftIndex);\n    const [ newRightIndex, newRightPosition ] = this.getIndexAndPosition(globalRightIndex);\n    return [ newLeftIndex, newLeftPosition, newRightIndex, newRightPosition ];\n  }\n\n  updateImage(index, newLink, newSize) {\n    const imageGlobalIndex = this.getGlobalIndex(index, 0);\n    if(this.characters[imageGlobalIndex].m & ContentType.IMAGE) {\n      if(newLink) {\n        this.characters[imageGlobalIndex].l = newLink;\n      }\n      if(newSize) {\n        this.characters[imageGlobalIndex].s = newSize;\n      }\n    }\n    this.updateBlocks();\n  }\n\n  addCaretBlock(index, position) {\n    this.caretBlockIndex = index;\n    this.caretBlockPosition = position;\n    this.updateBlocks();\n  }\n\n  /* Removes the caret block, and appropriately modifies caretInfo if provided */\n  removeCaretBlock(caretInfo) {\n    if(this.caretBlockIndex !== null) {\n      this.caretBlockIndex = null;\n      this.caretBlockPosition = null;\n\n      if(caretInfo) {\n        if(caretInfo.rangeSelect) {\n          let leftGlobalIndex = this.getGlobalIndex(\n            caretInfo.leftIndex, caretInfo.leftPosition\n          );\n\n          let rightGlobalIndex = this.getGlobalIndex(\n            caretInfo.rightIndex, caretInfo.rightPosition\n          );\n\n          this.updateBlocks();\n\n          [ caretInfo.leftIndex, caretInfo.leftPosition ] =\n            this.getCorrectedIndexAndPosition(null, null, false, leftGlobalIndex);\n          [ caretInfo.rightIndex, caretInfo.rightPosition ] =\n            this.getCorrectedIndexAndPosition(null, null, true, rightGlobalIndex);\n        }\n        else {\n          let globalIndex = this.getGlobalIndex(caretInfo.index, caretInfo.position);\n          this.updateBlocks();\n          [ caretInfo.index, caretInfo.position ] =\n            this.getCorrectedIndexAndPosition(null, null, false, globalIndex);\n        }\n      }\n      else {\n        this.updateBlocks();\n      }\n    }\n  }\n\n  isEmpty() {\n    return this.characters.length === 0;\n  }\n\n  /* Returns true if content is empty, or the caret position is at the end of\n  a block and the last character is a newline. This is important for mobile. */\n  atBlockNewlineEnd(index, position) {\n    if(this.isEmpty()) return true;\n    let content = this.blocks[index].c;\n    if(content.length === position && content[position - 1] === String.fromCharCode(10))\n       return true;\n    return false;\n  }\n\n  createBlock(content, mask, link, size) {\n    let block = {\n      m: mask,\n      c: content\n    };\n\n    if(link) {\n      block.l = link;\n    }\n\n    if(size) {\n      block.s = size;\n    }\n\n    return block;\n  }\n\n  updateBlocks() {\n    this.blocks = [];\n    this.blockStarts = [];\n\n    let currentMask = this.characters.length > 0 ? this.characters[0].m : 0;\n    let currentLink = null;\n    let currentSize = null;\n    let characterBuffer = [];\n    let blockPosition = 0;\n    this.characters.forEach((character, i) => {\n      /* For math mode, replace newlines with spaces */\n      if(character.m === ContentType.MATH && character.c === String.fromCharCode(10)) {\n        character.c = ' ';\n      }\n\n      const caretBlockIncoming = (this.blocks.length === this.caretBlockIndex) &&\n                                 (blockPosition === this.caretBlockPosition);\n      const isImageBlock = (character.m === ContentType.IMAGE);\n\n      /* End of this block */\n      if(character.m !== currentMask || caretBlockIncoming || isImageBlock) {\n        this.blocks.push(this.createBlock(\n          characterBuffer.join(''), currentMask, currentLink, currentSize\n        ));\n        this.blockStarts.push(i - characterBuffer.length);\n\n        blockPosition = character.c.length;\n        currentMask = character.m;\n        currentLink = character.l;\n        currentSize = character.s;\n        characterBuffer = [ character.c ];\n      }\n      else {\n        characterBuffer.push(character.c);\n        currentLink = character.l;\n        currentSize = character.s;\n        blockPosition += character.c.length;\n      }\n    });\n\n    this.blocks.push(this.createBlock(\n      characterBuffer.join(''), currentMask, currentLink, currentSize\n    ));\n    this.blockStarts.push(this.characters.length - characterBuffer.length);\n\n    /* Extra newline character sets correct caret positioning */\n    this.blocks.push({\n      m: 0,\n      c: String.fromCharCode(10)\n    });\n\n    this.blockStarts.push(this.characters.length);\n  }\n\n  getContent() {\n    return this.blocks;\n  }\n}\n\nexport default VirtualTextEditor;\n","import React, { useEffect, useMemo } from 'react';\nimport Utils from '../../Utils';\n\nfunction MathBlock({ id, index, content, rendered }) {\n  let textContent = rendered ? '\\\\(' + content + '\\\\)' : content;\n  let className = rendered ? 'Askd-te-MATHJAX' : 'Askd-te-MATH';\n  let position = rendered ? content.length : null;\n\n  /* MathJax must be re-rendered when one of the following attributes change */\n  let changeKey = useMemo(() => {\n    return {\n      id: id, rendered: rendered, blockLength: content.length\n    };\n  }, [ id, rendered, content.length ]);\n\n  /* Render MathJax and put a zero-width space before and after,\n  in order to help caret selection; also disable tabIndex */\n  useEffect(() => {\n    if(changeKey.rendered) {\n      Utils.renderMathJax([`#${changeKey.id}`]);\n\n      let blockElement = document.getElementById(changeKey.id);\n\n      blockElement.children[0].removeAttribute('tabIndex');\n\n      blockElement.innerHTML = String.fromCharCode(8203) +\n        blockElement.innerHTML + String.fromCharCode(8203);\n    }\n  }, [changeKey]);\n\n  return (\n    <div className={className} id={id} index={index} position={position}>\n      { textContent }\n    </div>\n  );\n}\n\nexport default MathBlock;\n","import React, { useState, useEffect, useRef } from 'react';\nimport Utils from '../../Utils';\n\nconst MIN_IMAGE_SIZE = 200;\nconst MAX_IMAGE_SIZE = 1000;\nconst START_IMAGE_SIZE = 836;\nconst IMAGE_PRECISION = 10000;\n\nfunction ImageBlock({ id, index, caretSelected, editable, initialLink,\n                      initialSize, handleBlockUpdate }) {\n  const [ selected, setSelected ] = useState(false);\n  const [ imageLink, setImageLink ] = useState(initialLink || '');\n  const [ validImageLink, setValidImageLink ] = useState(initialLink || null);\n  const [ imageSize, setImageSize ] = useState(initialSize || START_IMAGE_SIZE);\n  const lastValidImageLinkTime = useRef(0);\n  const blockRef = React.createRef();\n\n  useEffect(() => {\n    setImageLink(initialLink || '');\n    setValidImageLink(initialLink || null);\n  }, [initialLink]);\n\n  useEffect(() => {\n    setImageSize(initialSize);\n  }, [initialSize]);\n\n  let handleFocus = (event) => {\n    if(selected) {\n      return;\n    }\n\n    handleBlockUpdate({\n      disableSelectionChange: true\n    });\n\n    blockRef.current.classList.add('Askd-te-IMAGE-focused');\n    setSelected(true);\n  };\n\n  let handleBlur = (event) => {\n    if(event.currentTarget.contains(event.relatedTarget)) {\n      event.preventDefault();\n      return;\n    }\n\n    handleBlockUpdate({\n      disableSelectionChange: false\n    });\n\n    blockRef.current.classList.remove('Askd-te-IMAGE-focused');\n    setSelected(false);\n  };\n\n  const handleLinkChange = async (event) => {\n    const newLink = event.target.value;\n    setImageLink(newLink);\n\n    const linkValid = await Utils.isImageLinkValid(newLink);\n    if(!linkValid || Date.now() < lastValidImageLinkTime.current) {\n      return;\n    }\n\n    handleBlockUpdate({\n      imageUpdate: {\n        index: index,\n        link: newLink\n      }\n    });\n\n    if(!validImageLink) {\n      setImageSize(START_IMAGE_SIZE);\n    }\n\n    setValidImageLink(newLink);\n    lastValidImageLinkTime.current = Date.now();\n  };\n\n  const handleSizeChange = async (event) => {\n    const newSize = event.target.value;\n\n    handleBlockUpdate({\n      imageUpdate: {\n        index: index,\n        size: newSize\n      }\n    });\n    setImageSize(newSize);\n  };\n\n  if(!editable) {\n    handleFocus = null;\n    handleBlur = null;\n  }\n\n  return (\n    <div className=\"Askd-te-IMAGE\" id={id} index={index} tabIndex=\"0\"\n         contentEditable={false} onFocus={handleFocus} onBlur={handleBlur}\n         ref={blockRef}\n         style={{width: imageSize * imageSize / IMAGE_PRECISION + '%'}}>\n      <span className=\"Askd-te-IMAGE-ignore\">\n        !\n      </span>\n      {\n        caretSelected &&\n        <div className=\"Askd-te-IMAGE-blue\" />\n      }\n      {\n        validImageLink &&\n        <img src={validImageLink} alt=\"Text editor block\" />\n      }\n      {\n        !validImageLink &&\n        <div className=\"Askd-te-IMAGE-placeholder\">\n          <span className=\"icon-photo\" />\n        </div>\n      }\n      {\n        selected &&\n        <div className=\"Askd-form Askd-te-IMAGE-toolbar\">\n          <label htmlFor=\"Askd-te-IMAGE-link\">Link</label>\n          <input type=\"text\" name=\"Askd-te-IMAGE-link\"\n                 onChange={handleLinkChange} value={imageLink} />\n          <label htmlFor=\"Askd-te-IMAGE-size\">Size</label>\n          <input type=\"range\" name=\"Askd-te-IMAGE-size\"\n                 min={MIN_IMAGE_SIZE} max={MAX_IMAGE_SIZE} value={imageSize}\n                 onChange={handleSizeChange} disabled={!validImageLink} />\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default ImageBlock;\n","import React, { Component } from 'react';\nimport ContentType from '../ContentType';\nimport MaskManager from '../MaskManager';\nimport MathBlock from './MathBlock';\nimport ImageBlock from './ImageBlock';\n\nclass Block extends Component {\n  render() {\n    const block = this.props.block;\n    const editorId = this.props.id;\n    const selected = this.props.selected;\n    const index = this.props.index;\n    const editable = this.props.editable;\n    const content = block.c;\n    const blockId = editorId + index;\n\n    if(block.m === ContentType.MATH) {\n      return (\n        <MathBlock id={blockId} rendered={!selected} content={content}\n                   index={index} />\n      );\n    }\n    else if(block.m === ContentType.IMAGE) {\n      return (\n        <ImageBlock id={blockId} index={index} caretSelected={selected}\n                    editable={editable} initialLink={block.l}\n                    initialSize={block.s}\n                    handleBlockUpdate={this.props.handleBlockUpdate} />\n      );\n    }\n\n    return (\n      <div className={MaskManager.getClassName(block.m)} id={blockId}\n           index={index}>\n        {content}\n      </div>\n    );\n  }\n}\n\nexport default Block;\n","import React from 'react';\nimport Block from './Block/Block';\nimport ContentType from './ContentType';\n\nfunction TextEditorContent({ content, id, editable, caretInfo, handleBlur,\n                             handleFocus, handleBlockUpdate }) {\n  let contentElements = [];\n\n  content.forEach((block, i) => {\n    let selected = false;\n\n    if(editable && caretInfo.editorSelected) {\n      if(caretInfo.rangeSelect) {\n        if(block.m & ContentType.IMAGE) {\n          selected = caretInfo.leftIndex < i && i <= caretInfo.rightIndex;\n        }\n        else {\n          selected = caretInfo.leftIndex <= i && i <= caretInfo.rightIndex;\n        }\n      }\n      if(!caretInfo.rangeSelect && caretInfo.index === i && !caretInfo.insideCaretBlock) {\n        selected = true;\n      }\n    }\n\n    contentElements.push(\n      <Block block={block} id={id} index={i} key={i} selected={selected}\n             editable={editable} handleBlockUpdate={handleBlockUpdate} />\n    );\n  });\n\n  let outerClassName = 'Askd-text-editor-text';\n  if(editable) {\n    outerClassName += ' Askd-text-editor-editable';\n  }\n  else {\n    outerClassName += ' Askd-text-editor-uneditable';\n  }\n\n  return (\n    <div className={outerClassName} id={id} contentEditable={editable}\n        suppressContentEditableWarning=\"true\" spellCheck=\"false\"\n        onBlur={handleBlur} onFocus={handleFocus}>\n         { contentElements }\n    </div>\n  );\n}\n\nexport default TextEditorContent;\n","/* Manually sanitize text editor to ensure that it's consitent with content */\nconst sanitizeTextArea = (textEditor, content) => {\n  let junkNodes = [];\n  for(const node of textEditor.childNodes) {\n    if(node.nodeType === Node.TEXT_NODE || node.nodeName === 'BR' ||\n       node.nodeName === 'SPAN') {\n      junkNodes.push(node);\n    }\n  }\n\n  for(const node of junkNodes) {\n    textEditor.removeChild(node);\n  }\n\n  for(let i = 0; i < content.length; i++) {\n    let childElement = textEditor.children[i];\n\n    const childIsMath = childElement.classList.contains('Askd-te-MATHJAX');\n    const childIsImage = childElement.classList.contains('Askd-te-IMAGE');\n\n    if(childIsMath || childIsImage) {\n      continue;\n    }\n\n    if(childElement.innerHTML !== content[i].c) {\n      childElement.childNodes[0].nodeValue = content[i].c;\n    }\n  }\n};\n\nexport default sanitizeTextArea;\n","import ContentType from './ContentType';\nimport sanitizeTextArea from './sanitizeTextArea';\n\nconst registerEventHandlers = (that) => {\n  that.textEditor.addEventListener('keydown', async (event) => {\n    if(!that.caretInfo.editorSelected) {\n      return;\n    }\n\n    const mathSelected = (that.state.editorMask & ContentType.MATH) > 0;\n\n    /* TBD, bro who even uses that button lol */\n    if(event.key === 'Delete') {\n      event.preventDefault();\n    }\n    else if(event.key === 'Backspace' && !that.composing) {\n      await that.delete();\n      event.preventDefault();\n    }\n    else if(event.key === 'Enter' && !that.composing && !mathSelected) {\n      await that.insert(String.fromCharCode(10));\n      event.preventDefault();\n    }\n    else if(event.key === 'Enter') {\n      event.preventDefault();\n    }\n  });\n\n  that.textEditor.addEventListener('beforeinput', async (event) => {\n    if(event.inputType === 'insertFromDrop') {\n      event.preventDefault();\n    }\n\n    if(event.isComposing || that.composing || !that.caretInfo.editorSelected) {\n      return;\n    }\n\n    event.preventDefault();\n\n    /* Mobile autocorrect and word selection from a menu */\n    if(event.inputType === 'insertReplacementText') {\n      that.caretInfo.rangeSelect = true;\n      const insertedString = event.dataTransfer.getData('text');\n      await that.insert(insertedString);\n    }\n    /* Generic event with a valid 'data'; things like undo/redo operations and\n       drag and drop are TBD */\n    else if(event.data) {\n      await that.insert(event.data);\n    }\n  });\n\n  /* An equivalent handler to beforeinput, but with text sanitization - this is\n  for browsers which don't have the beforeinput event */\n  that.textEditor.addEventListener('input', async (event) => {\n    if(event.isComposing || that.composing || !that.caretInfo.editorSelected) {\n      return;\n    }\n\n    if(event.inputType === 'insertReplacementText') {\n      sanitizeTextArea(that.textEditor, that.state.content);\n      that.caretInfo.rangeSelect = true;\n      const insertedString = event.dataTransfer.getData('text');\n      await that.insert(insertedString);\n    }\n    else if(event.data) {\n      sanitizeTextArea(that.textEditor, that.state.content);\n      await that.insert(event.data, true);\n    }\n  });\n\n  that.textEditor.addEventListener('paste', async (event) => {\n    if(!that.caretInfo.editorSelected) {\n      return;\n    }\n\n    event.preventDefault();\n\n    const pasteText = event.clipboardData.getData('Text');\n    await that.insert(pasteText);\n  });\n\n  that.textEditor.addEventListener('compositionstart', async (event) => {\n    if(!that.caretInfo.editorSelected) {\n      return;\n    }\n\n    if(that.caretInfo.rangeSelect) {\n      await that.delete();\n    }\n\n    that.composing = true;\n    that.compositionIndex = that.caretInfo.index;\n    that.compositionPosition = that.caretInfo.position;\n  });\n\n  that.textEditor.addEventListener('compositionend', async (event) => {\n    if(!that.composing || !that.caretInfo.editorSelected) {\n      return;\n    }\n\n    that.composing = false;\n    await that.compositionInsert(event.data);\n  });\n\n  const handleSelectionChange = (event) => {\n    if(that.composing || that.disableSelectionChange) {\n      return;\n    }\n\n    let selectionChanged = false;\n    try {\n      const selection = window.getSelection();\n      const anchorNode = selection.anchorNode;\n\n      if(that.textEditor.contains(anchorNode)) {\n        const newCaretInfo = that.caret.getInfo();\n        for(const key in newCaretInfo) {\n          if(newCaretInfo.hasOwnProperty(key) &&\n             that.caretInfo[key] !== newCaretInfo[key]) {\n            selectionChanged = true;\n          }\n        }\n      }\n    }\n    catch(err) {\n      /* anchorElement isn't a div inside the text editor */\n    }\n\n    if(selectionChanged) {\n      that.selectionChanged();\n    }\n  };\n\n  document.addEventListener('selectionchange', handleSelectionChange);\n\n  const handleBlur = (event) => {\n    if(that.caretInfo.editorSelected) {\n      that.caretInfo.editorSelected = false;\n      if(that.caretInfo.insideCaretBlock) {\n        that.caretInfo.insideCaretBlock = false;\n        that.caret.removeCaretBlock();\n        that.virtualTextEditor.removeCaretBlock();\n        that.updateContent();\n      }\n      else {\n        that.forceUpdate();\n      }\n    }\n  };\n\n  return [ handleSelectionChange, handleBlur ];\n}\n\nexport default registerEventHandlers;\n","import React, { Component } from 'react';\nimport Caret from './Caret';\nimport Toolbar from './Toolbar';\nimport VirtualTextEditor from './VirtualTextEditor';\nimport TextEditorContent from './TextEditorContent';\nimport ContentType from './ContentType';\nimport MaskManager from './MaskManager';\nimport Utils from '../Utils';\nimport registerEventHandlers from './registerEventHandlers';\nimport sanitizeTextArea from './sanitizeTextArea';\nimport { v4 as uuidv4 } from 'uuid';\nimport '../css/TextEditor.css';\n\nclass TextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.id = `Askd-text-editor-${uuidv4()}`;\n    this.virtualTextEditor = new VirtualTextEditor(this.props.initialContent);\n    this.caret = new Caret(this.id);\n\n    this.contentChanged = false;\n    this.caretInfo = {\n      rangeSelect: false,\n      index: 0,\n      position: 0,\n      editorSelected: false,\n      insideCaretBlock: false\n    };\n\n    this.composing = false;\n    this.compositionIndex = null;\n    this.compositionPosition = null;\n\n    this.state = {\n      content: this.virtualTextEditor.getContent(),\n      editorMask: 0\n    };\n\n    this.toolbarUpdate = this.toolbarUpdate.bind(this);\n    this.blockUpdate = this.blockUpdate.bind(this);\n  }\n\n  async delete() {\n    if(!this.caretInfo.rangeSelect) {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.index, this.caretInfo.position - 1,\n        this.caretInfo.index, this.caretInfo.position\n      );\n    }\n    else {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n        this.caretInfo.rightIndex, this.caretInfo.rightPosition\n      );\n    }\n\n    this.caretInfo.rangeSelect = false;\n    await this.insertionUpdate();\n  }\n\n  async insert(newString, useLastKnownCaretInfo) {\n    if(!useLastKnownCaretInfo) {\n      this.updateCaretInfo();\n    }\n\n    if(this.caretInfo.rangeSelect) {\n      await this.delete();\n    }\n\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.caretInfo.index, this.caretInfo.position, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.insertionUpdate();\n  }\n\n  async compositionInsert(newString) {\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.compositionIndex, this.compositionPosition, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.insertionUpdate();\n  }\n\n  async imageInsert() {\n    if(!this.caretInfo.rangeSelect) {\n      /* Always add a newline preceding an image */\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n        this.caretInfo.index, this.caretInfo.position,\n        String.fromCharCode(10), this.state.editorMask\n      );\n\n      [ this.caretInfo.index, this.caretInfo.position] = this.virtualTextEditor.insert(\n        this.caretInfo.index, this.caretInfo.position, '!', ContentType.IMAGE\n      );\n\n      await this.insertionUpdate();\n    }\n  }\n\n  async rangeMaskUpdate(bit, on) {\n    if(!this.caretInfo.rangeSelect) {\n      return;\n    }\n\n    [ this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition ] =\n    this.virtualTextEditor.rangeMaskUpdate(\n      this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition, bit, on\n    );\n\n    await this.insertionUpdate();\n  }\n\n  async insertionUpdate() {\n    this.contentChanged = true;\n    this.caret.removeCaretBlock();\n    this.caretInfo.insideCaretBlock = false;\n    await this.checkCaretNextToImage();\n\n    await this.updateContent();\n    this.caret.setInfo(this.caretInfo, this.state.editorMask);\n    await this.selectionChanged();\n  }\n\n  async updateContent() {\n    await Utils.setStatePromise(this, {\n      content: this.virtualTextEditor.getContent()\n    });\n  }\n\n  async updateMask(newMask) {\n    await Utils.setStatePromise(this, {\n      editorMask: newMask\n    });\n  }\n\n  async toolbarUpdate(bit) {\n    if(bit === ContentType.IMAGE) {\n      this.imageInsert();\n      return;\n    }\n\n    this.caretInfo.editorSelected = true;\n\n    const on = (this.state.editorMask & bit) === 0;\n    const newToolbarMask = MaskManager.toolbarMergeBit(bit, on, this.state.editorMask);\n\n    if(!this.caretInfo.rangeSelect) {\n      const leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.index, this.caretInfo.position, false\n      );\n\n      let previouslyInsideCaretBlock = this.caretInfo.insideCaretBlock;\n      this.caretInfo.insideCaretBlock = newToolbarMask !== leftCharacterMask ||\n        this.virtualTextEditor.atBlockNewlineEnd(\n          this.caretInfo.index, this.caretInfo.position\n        );\n\n      if(this.caretInfo.insideCaretBlock) {\n        this.virtualTextEditor.addCaretBlock(\n          this.caretInfo.index, this.caretInfo.position\n        );\n        await this.updateContent();\n      }\n      else if(previouslyInsideCaretBlock) {\n        this.virtualTextEditor.removeCaretBlock();\n        await this.updateContent();\n      }\n\n      await this.updateMask(newToolbarMask);\n      this.caret.setInfo(this.caretInfo, this.state.editorMask);\n    }\n    else {\n      await this.rangeMaskUpdate(bit, on);\n    }\n  }\n\n  async blockUpdate(params) {\n    /* When an image block gets clicked, the selectionchange handler should be\n    temporarily disabled, since it can't tell that the thing which got clicked\n    on should be counted as outside of the textarea. When the block gets\n    blurred, selectionchange should be re-enabled. */\n    if(params.disableSelectionChange === true) {\n      this.disableSelectionChange = true;\n    }\n    else if(params.disableSelectionChange === false) {\n      this.disableSelectionChange = false;\n    }\n\n    if(params.imageUpdate) {\n      this.virtualTextEditor.updateImage(\n        params.imageUpdate.index, params.imageUpdate.link,\n        params.imageUpdate.size\n      );\n\n      if(this.props.onChange) {\n        this.props.onChange(this.virtualTextEditor.getContent());\n      }\n\n      await this.updateContent();\n    }\n  }\n\n  async checkCaretNextToImage() {\n    if(!this.caretInfo.rangeSelect) {\n      const leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.index, this.caretInfo.position, false\n      );\n\n      if(leftCharacterMask & ContentType.IMAGE) {\n        this.caretInfo.insideCaretBlock = true;\n        this.virtualTextEditor.addCaretBlock(\n          this.caretInfo.index, this.caretInfo.position, 0\n        );\n\n        await this.updateContent();\n        this.caret.setInfo(this.caretInfo, 0);\n      }\n    }\n  }\n\n  async selectionChanged() {\n    let previouslyInsideCaretBlock = this.caretInfo.insideCaretBlock;\n    this.updateCaretInfo();\n\n    if(previouslyInsideCaretBlock) {\n      this.virtualTextEditor.removeCaretBlock(this.caretInfo);\n      this.caret.removeCaretBlock();\n      await this.updateContent();\n      this.caret.setInfo(this.caretInfo, this.state.editorMask);\n    }\n\n    let leftCharacterMask;\n    if(this.caretInfo.rangeSelect) {\n      leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition, true\n      );\n    }\n    else {\n      leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.index, this.caretInfo.position, false\n      );\n    }\n\n    /* If the caret is in front of an image, set the mask to 0, and see if\n    adding a caret block is necessary */\n    if(leftCharacterMask & ContentType.IMAGE) {\n      leftCharacterMask = 0;\n      await this.checkCaretNextToImage();\n    }\n\n    await this.updateMask(leftCharacterMask);\n\n    if(!this.caretInfo.rangeSelect) {\n      this.caret.setInfo(this.caretInfo, this.state.editorMask);\n    }\n  }\n\n  updateCaretInfo() {\n    const newCaretInfo = this.caret.getInfo();\n    this.caretInfo.editorSelected = true;\n\n    /* Maintain previous info for the other selection type */\n    if(newCaretInfo.rangeSelect) {\n      [ this.caretInfo.leftIndex, this.caretInfo.leftPosition ] =\n        this.virtualTextEditor.getCorrectedIndexAndPosition(\n          newCaretInfo.leftIndex, newCaretInfo.leftPosition, false\n        );\n\n      [ this.caretInfo.rightIndex, this.caretInfo.rightPosition ] =\n        this.virtualTextEditor.getCorrectedIndexAndPosition(\n          newCaretInfo.rightIndex, newCaretInfo.rightPosition, true\n        );\n\n      this.caretInfo.rangeSelect = true;\n      this.caretInfo.insideCaretBlock = false;\n    }\n    else {\n      [ this.caretInfo.index, this.caretInfo.position ] =\n        this.virtualTextEditor.getCorrectedIndexAndPosition(\n          newCaretInfo.index, newCaretInfo.position, false\n        );\n\n      if(this.virtualTextEditor.atBlockNewlineEnd(\n        this.caretInfo.index, this.caretInfo.position\n      )) {\n        newCaretInfo.insideCaretBlock = true;\n      }\n\n      this.caretInfo.rangeSelect = false;\n      this.caretInfo.insideCaretBlock = newCaretInfo.insideCaretBlock;\n    }\n  }\n\n  componentDidMount() {\n    this.textEditor = document.getElementById(this.id);\n    this.outerTextEditor = document.getElementById(this.id + '!');\n    [ this.handleSelectionChange, this.handleBlur ] = registerEventHandlers(this);\n\n    if(this.props.focusOnMount) {\n      this.textEditor.focus();\n    }\n  }\n\n  componentDidUpdate() {\n    if(!this.contentChanged) {\n      return;\n    }\n\n    sanitizeTextArea(this.textEditor, this.state.content);\n\n    /* Callback with new content */\n    if(this.props.onChange) {\n      this.props.onChange(this.state.content);\n    }\n\n    this.contentChanged = false;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    document.removeEventListener('selectionchange', this.handleSelectionChange);\n  }\n\n  render() {\n    return (\n      <div className=\"Askd-text-editor\" id={this.id + '!'}>\n        <Toolbar mask={this.state.editorMask} callback={this.toolbarUpdate} />\n        <TextEditorContent content={this.state.content} id={this.id}\n                           editable={true} handleBlur={this.handleBlur}\n                           handleFocus={this.handleSelectionChange}\n                           handleBlockUpdate={this.blockUpdate}\n                           caretInfo={this.caretInfo} />\n      </div>\n    );\n  }\n}\n\nexport default TextEditor;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\n\nconst confirmationTextOptions = [\n  'dijkstra',\n  'aho-corasick',\n  'dynamic programming',\n  'fast matrix exponentiation',\n  'sieve of eratosthenes',\n  'fenwick tree',\n  'fast fourier transform',\n  'disjoint set union',\n  'square root decomposition',\n  'burnside\\'s lemma',\n  'ford-fulkerson maximum flow',\n  'topological sort',\n  '0-1 breadth-first-search'\n];\n\nclass DeleteMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: ''\n    };\n\n    const randomIndex = Math.floor(confirmationTextOptions.length * Math.random());\n    this.randomCode = confirmationTextOptions[randomIndex];\n\n    this.close = this.close.bind(this);\n    this.delete = this.delete.bind(this);\n    this.setLoading = this.setLoading.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async delete(event) {\n    event.preventDefault();\n\n    const confirmCode = event.target.confirmCode.value;\n    if(confirmCode !== this.randomCode) {\n      await Utils.componentSetError(this, \"Your confirmation code doesn't match!\");\n      return;\n    }\n\n    try {\n      await this.setLoading(true);\n      await this.props.deleteCallback();\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n      await this.setLoading(false);\n    }\n  }\n\n  async setLoading(isLoading) {\n    await Utils.setStatePromise(this, {\n      loading: isLoading\n    });\n  }\n\n  render() {\n    let submitButtonClassName = 'Askd-button';\n    if(this.state.loading) {\n      submitButtonClassName += ' Askd-form-loading';\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\" />\n        <div className=\"Edit-note-delete-menu Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Are you sure you want to permanently delete this\n              {' ' + this.props.entityName}?\n          </h2>\n          <p>\n            This action cannot be undone! Please enter the following\n            text as confirmation.\n          </p>\n          <form className=\"Askd-form\" onSubmit={this.delete}>\n            <label htmlFor=\"confirmCode\">{this.randomCode}</label>\n            <input autoComplete=\"off\" type=\"text\" name=\"confirmCode\"\n                   key=\"confirmCode\" id=\"confirmCode\" />\n\n            <input className={submitButtonClassName} type=\"submit\" value=\"Delete\"\n                   disabled={this.state.loading} />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DeleteMenu;\n","import React, { Component } from 'react';\nimport { Prompt } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport TextEditor from '../TextEditor/TextEditor';\nimport DeleteMenu from '../Misc/DeleteMenu';\nimport SolvedState from '../Enum/SolvedState';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\n\nfunction remindUserToSave(event) {\n  event.preventDefault();\n  event.returnValue = '';\n}\n\nclass EditNoteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const noteInfo = this.props.noteInfo;\n    this.title = noteInfo.title;\n    this.solved = noteInfo.solved;\n    this.content = JSON.parse(noteInfo.content);\n    this.lastSaved = new Date(noteInfo.editedTime);\n\n    const username = noteInfo.username\n    const platform = this.props.platform;\n    const problemId = noteInfo.problemInfo.problemId;\n    const problemUrl = problemId.split('#').join('/');\n    this.publishedUrl = `/notes/${username}/${platform}/${problemUrl}`;\n\n    this.state = {\n      published: noteInfo.published,\n      disableEditButtons: false,\n      saved: true,\n      loadingSave: false,\n      loadingPublish: false,\n      showDeleteMenu: false\n    };\n\n    this.saveNote = this.saveNote.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n    this.togglePublishNote = this.togglePublishNote.bind(this);\n    this.toggleDeleteMenu = this.toggleDeleteMenu.bind(this);\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleSolvedChange = this.handleSolvedChange.bind(this);\n    this.handleContentChange = this.handleContentChange.bind(this);\n  }\n\n  async saveOrPublishNote(published) {\n    const username = this.props.noteInfo.username;\n    const platform = this.props.platform;\n    const problemId = this.props.noteInfo.problemInfo.problemId;\n    const title = this.title;\n    const solved = this.solved;\n    const content = this.content;\n\n    await NotesApi.editNote(username, platform, problemId, title, solved,\n                            content, published);\n\n    this.lastSaved = new Date();\n    window.onbeforeunload = null;\n\n    await Utils.setStatePromise(this, {\n      published: published,\n      disableEditButtons: false,\n      saved: true,\n      loadingSave: false,\n      loadingPublish: false\n    });\n\n    if(published) {\n      this.props.history.push(this.publishedUrl);\n    }\n  }\n\n  async saveNote(event) {\n    await Utils.setStatePromise(this, {\n      disableEditButtons: true,\n      loadingSave: true\n    });\n\n    await this.saveOrPublishNote(this.state.published);\n  }\n\n  async deleteNote() {\n    const username = this.props.noteInfo.username;\n    const platform = this.props.platform;\n    const problemId = this.props.noteInfo.problemInfo.problemId;\n\n    await NotesApi.deleteNote(username, platform, problemId);\n    this.props.history.push(`/users/${username}`);\n  }\n\n  async togglePublishNote(event) {\n    await Utils.setStatePromise(this, {\n      disableEditButtons: true,\n      loadingPublish: true\n    });\n\n    await this.saveOrPublishNote(!this.state.published);\n  }\n\n  async toggleDeleteMenu(event) {\n    await Utils.setStatePromise(this, {\n      showDeleteMenu: !this.state.showDeleteMenu\n    });\n  }\n\n  handleTitleChange(event) {\n    this.title = event.target.value;\n  }\n\n  handleSolvedChange(event) {\n    this.solved = event.target.value;\n  }\n\n  async handleContentChange(newContent) {\n    this.content = newContent;\n\n    if(this.state.saved) {\n      await Utils.setStatePromise(this, {\n        saved: false\n      });\n\n      window.onbeforeunload = remindUserToSave;\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let savedText = this.state.saved ? 'All changes saved! - ' : 'Last saved on ';\n    savedText += this.lastSaved.toLocaleString();\n\n    const togglePublishText = this.state.published ? 'Unpublish' : 'Publish!';\n    let saveButtonClass = 'Askd-button Askd-not-fullwidth';\n    let publishButtonClass = 'Askd-button Askd-not-fullwidth';\n\n    if(this.state.loadingSave) saveButtonClass += ' Askd-form-loading';\n    if(this.state.loadingPublish) publishButtonClass += ' Askd-form-loading';\n\n    return (\n      <>\n        <Prompt when={!this.state.saved}\n                message='Are you sure you want to leave? You have unsaved changes.' />\n        {\n          this.state.showDeleteMenu &&\n          <DeleteMenu exitCallback={this.toggleDeleteMenu}\n                      deleteCallback={this.deleteNote} entityName=\"note\" />\n        }\n        <form className=\"Edit-note-form Askd-form Module-outer-space\">\n          <input className=\"Edit-note-title\" name=\"title\" type=\"text\"\n                 defaultValue={this.title} placeholder=\"Title\"\n                 onChange={this.handleTitleChange} />\n\n          <select name=\"solved\" id=\"note-solved\" onChange={this.handleSolvedChange}\n                  defaultValue={this.solved}>\n            <option value={SolvedState.SOLVED.value}>Solved</option>\n            <option value={SolvedState.UPSOLVED.value}>Upsolved</option>\n            <option value={SolvedState.UPSOLVED_HELP.value}>Upsolved with help</option>\n            <option value={SolvedState.UNSOLVED.value}>Unsolved</option>\n          </select>\n\n          <TextEditor initialContent={this.content}\n                      onChange={this.handleContentChange} />\n          {\n            this.state.published &&\n            <Link className=\"Edit-note-published-link Askd-form-link\"\n                  to={this.publishedUrl}>\n              See published page\n            </Link>\n          }\n          <p className=\"Edit-note-saved-text\">{savedText}</p>\n          <div className=\"Edit-note-bottom-buttons\">\n            <input className={saveButtonClass} type=\"button\" value=\"Save\"\n                   onClick={this.saveNote}\n                   disabled={this.state.disableEditButtons} />\n\n            <input className={publishButtonClass} type=\"button\"\n                   value={togglePublishText} onClick={this.togglePublishNote}\n                   disabled={this.state.disableEditButtons} />\n          </div>\n          <div className=\"Edit-note-delete\">\n            <button type=\"button\" className=\"Askd-form-link Askd-form-link-bottom\"\n                    onClick={this.toggleDeleteMenu}>\n              Permanently delete this note?\n            </button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default EditNoteForm;\n","import React, { Component } from 'react';\nimport ProblemsApi from '../Api/ProblemsApi';\n\nclass ProblemInfo extends Component {\n  render() {\n    const info = this.props.info;\n    const problemDisplayName = ProblemsApi.getProblemDisplayName(info);\n\n    return (\n      <div className=\"Edit-note-problem-info\">\n        <div className=\"Module-info-box Module-outer-space\">\n          <h4>\n            { problemDisplayName }\n          </h4>\n          <p className=\"Edit-note-contest\">{info.contestName}</p>\n          <a className=\"Askd-form-link\" href={info.link} target=\"_blank\"\n             rel=\"noopener noreferrer\">\n            Problem link\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProblemInfo;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport queryString from 'query-string';\nimport '../css/Misc/SeeOtherNotes.css';\n\nfunction SeeOtherNotes({ platform, contestId, problemId, goDownOneLevel }) {\n  if(goDownOneLevel) {\n    if(problemId) {\n      contestId = problemId.split('#')[0];\n      problemId = null;\n    }\n    else if(contestId) {\n      contestId = null;\n    }\n    else {\n      platform = null;\n    }\n  }\n\n  const notesSearchObject = {\n    platform: platform,\n    contestId: contestId,\n    problemId: problemId\n  };\n\n  for(const key in notesSearchObject) {\n    if(!notesSearchObject[key]) {\n      delete notesSearchObject[key];\n    }\n  }\n\n  const notesSearchQueryString = queryString.stringify(notesSearchObject);\n  const otherNotesUrl = `/notes?${notesSearchQueryString}`;\n\n  let otherNotesText;\n  if(problemId) {\n    otherNotesText = 'See other notes for this problem';\n  }\n  else if(contestId) {\n    otherNotesText = 'See other notes from this contest';\n  }\n  else if(platform) {\n    otherNotesText = 'See other notes from this platform';\n  }\n  else {\n    otherNotesText = 'See other notes in general';\n  }\n\n  return (\n    <Link className=\"See-other-notes Askd-button Askd-form-button Askd-not-fullwidth\"\n          to={otherNotesUrl}>\n      <span className=\"See-other-notes-arrow\">&#10094;</span>\n      {otherNotesText}\n    </Link>\n  );\n}\n\nexport default SeeOtherNotes;\n","import React from 'react';\nimport CreateLoadingComponent from '../HOC/CreateLoadingComponent';\nimport LoadState from '../Enum/LoadState';\nimport LoadingSpinner from '../Misc/LoadingSpinner';\nimport EditNoteForm from './EditNoteForm';\nimport ProblemInfo from './ProblemInfo';\nimport SeeOtherNotes from '../Misc/SeeOtherNotes';\nimport NotesApi from '../Api/NotesApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/EditNote.css';\n\nasync function getNoteAndProblemData(props, params) {\n  const username = await UserAuthApi.getUsername();\n  const platform = props.match.params.platform;\n  const contestId = props.match.params.contestId;\n  const problemCode = props.match.params.problemCode;\n  const problemId = `${contestId}#${problemCode}`;\n\n  const noteInfo = await NotesApi.getNoteInfo(username, platform, problemId);\n  return {\n    noteInfo: noteInfo\n  };\n}\n\nfunction EditNote({ otherProps, info, screen }) {\n  const platform = otherProps.match.params.platform;\n\n  if(screen === LoadState.NOT_FOUND) {\n    return (\n      <div className=\"Module-description\">\n        <h2>Note not found!</h2>\n      </div>\n    );\n  }\n  else if(screen === LoadState.LOADING) {\n    return (\n      <LoadingSpinner />\n    );\n  }\n  else {\n    return (\n      <>\n        <SeeOtherNotes platform={platform} problemId={info.noteInfo.problemSk} />\n        <ProblemInfo info={info.noteInfo.problemInfo} platform={platform} />\n        <EditNoteForm noteInfo={info.noteInfo} platform={platform}\n                      history={otherProps.history} />\n      </>\n    );\n  }\n}\n\nexport default CreateLoadingComponent(\n  getNoteAndProblemData, null, 'NoteNotFound', EditNote\n);\n","import Api from './Api';\n\nclass LikesApi {\n  static async sendLike(username, noteAuthor, platform, problemId, likedStatus) {\n    const options = {\n      username: username,\n      noteAuthor: noteAuthor,\n      platform: platform,\n      problemId: problemId,\n      likedStatus: likedStatus\n    };\n\n    return await Api.putJson('likes/notes', options);\n  }\n}\n\nexport default LikesApi;\n","import React, { useState } from 'react';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/Misc/LikeDislike.css';\n\nfunction LikeDislike({ initialScore, initialStatus, likeCallback }) {\n  let [ score, setScore ] = useState(initialScore);\n  let [ status, setStatus ] = useState(initialStatus);\n\n  let likeButtonClass = 'Like-button';\n  if(status > 0) {\n    likeButtonClass += ' Like-button-liked';\n  }\n\n  let toggleStatus = async () => {\n    const username = await UserAuthApi.getUsername();\n    if(!username) {\n      window.suggestUserRegister();\n      return;\n    }\n\n    if(status > 0) {\n      setStatus(0);\n      setScore(score - 1);\n      likeCallback(0);\n    }\n    else {\n      setStatus(1);\n      setScore(score + 1);\n      likeCallback(1);\n    }\n  };\n\n  return (\n    <div className=\"Like-dislike\">\n      <button className={likeButtonClass} onClick={toggleStatus}>\n        <span className=\"icon-thumb_up_alt\" />\n        <span className=\"Like-dislike-score\">{score}</span>\n      </button>\n    </div>\n  );\n}\n\nexport default LikeDislike;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport LikesApi from '../Api/LikesApi';\nimport TextEditorContent from '../TextEditor/TextEditorContent';\nimport LikeDislike from '../Misc/LikeDislike';\nimport Username from '../Misc/Username';\nimport '../css/PublicNoteInfo.css';\n\nfunction PublicNoteInfo({ loggedInUsername, info }) {\n  const content = JSON.parse(info.content);\n  const editedTimestamp = (new Date(info.editedTime)).toLocaleString();\n  const solvedClass = ProblemsApi.getSolvedStateCssClass(info.solved);\n\n  const noteAuthor = info.username;\n  const platform = info.platform;\n  const problemId = info.problemSk;\n  const problemUrl = problemId.split('#').join('/');\n  const editLink = `/notes/edit/${platform}/${problemUrl}`;\n\n  const likeCallback = async (likedStatus) => {\n    await LikesApi.sendLike(\n      loggedInUsername, noteAuthor, platform, problemId, likedStatus\n    );\n  };\n\n  return (\n    <div className=\"Public-note-info Module-outer-space\">\n      <h3 className=\"Module-space-heading\">\n        <span className={`Public-note-solved-tag User-note-info-${solvedClass}`}>\n          <span className=\"User-note-info-tag User-note-solved-indicator\" />\n        </span>\n        {info.title}\n      </h3>\n      {\n        loggedInUsername === noteAuthor &&\n        <Link className=\"Public-note-info-edit Askd-form-link\" to={editLink}>\n          Edit\n        </Link>\n      }\n      <div className=\"Module-space-text\">\n        Written by <Username username={info.username} rank={info.authorCfRank} />\n      </div>\n      <div className=\"Askd-text-editor\">\n        <TextEditorContent content={content} id='Askd-public-note' editable={false} />\n      </div>\n      <p className=\"Module-space-text\">\n        Last edited on {editedTimestamp}\n      </p>\n      <LikeDislike initialScore={info.likeCount} initialStatus={info.likedStatus}\n                   likeCallback={likeCallback} />\n    </div>\n  );\n}\n\nexport default PublicNoteInfo;\n","import Api from './Api';\n\nclass CommentsApi {\n  static async getNoteComments(noteAuthor, platform, problemId) {\n    const options = {\n      noteAuthor: noteAuthor,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.getJson('comments', options);\n  }\n\n  static async addNoteComment(username, noteAuthor, platform, problemId,\n                              rootReplyId, replyId, content) {\n    const options = {\n      username: username,\n      noteAuthor: noteAuthor,\n      platform: platform,\n      problemId: problemId,\n      rootReplyId: rootReplyId,\n      replyId: replyId,\n      content: JSON.stringify(content)\n    };\n\n    return await Api.postJson('comments', options);\n  }\n\n  static async editComment(commentId, content) {\n    const options = {\n      commentId: commentId,\n      content: JSON.stringify(content)\n    };\n\n    return await Api.putJson('comments', options);\n  }\n\n  static async deleteComment(commentId) {\n    const options = {\n      commentId: commentId\n    };\n\n    return await Api.deleteJson('comments', options);\n  }\n}\n\nexport default CommentsApi;\n","import React, { useState } from 'react';\nimport TextEditor from '../TextEditor/TextEditor';\n\nfunction CommentForm({ cancelCallback, addCallback, initialContent, updateCallback }) {\n  const [ commentContent, setCommentContent ] = useState(initialContent);\n  const [ addCommentLoading, setAddCommentLoading ] = useState(false);\n\n  const handleEditorChange = (newContent) => {\n    setCommentContent(newContent);\n    if(updateCallback) {\n      updateCallback(newContent);\n    }\n  };\n\n  const handleAddComment = async () => {\n    setAddCommentLoading(true);\n    try {\n      await addCallback(commentContent);\n    }\n    catch(err) {\n      setAddCommentLoading(false);\n    }\n  };\n\n  const textEmpty = !commentContent || commentContent[0].c.length === 0;\n\n  return (\n    <div className=\"Comment-section-add\">\n      <TextEditor focusOnMount={true} initialContent={commentContent}\n                  onChange={handleEditorChange} />\n      <div className=\"Askd-form\">\n        <input type=\"button\" value=\"Cancel\" className=\"Askd-button Askd-not-fullwidth\"\n               onClick={cancelCallback} />\n        <input type=\"button\" value=\"Comment\" disabled={textEmpty || addCommentLoading}\n               className=\"Askd-button Askd-not-fullwidth\" onClick={handleAddComment} />\n      </div>\n    </div>\n  );\n}\n\nexport default CommentForm;\n","import React, { useState, useEffect, useRef } from 'react';\nimport TextEditorContent from '../TextEditor/TextEditorContent';\nimport DeleteMenu from '../Misc/DeleteMenu';\nimport CommentForm from './CommentForm';\nimport Username from '../Misc/Username';\nimport Utils from '../Utils';\n\nfunction Comment({ info, replyUsername, subscribeToUserInfo,\n                   subscribeToReplyInfo, replyCallback,\n                   editCallback, deleteCallback, loggedInUsername }) {\n  const id = info.commentId;\n  const content = info.content ? JSON.parse(info.content) : null;\n\n  const [ avatarData, setAvatarData ] = useState(null);\n  const [ rank, setRank ] = useState(null);\n  const [ replyRank, setReplyRank ] = useState(null);\n  const [ editFormOpen, setEditFormOpen ] = useState(false);\n  const [ deleteMenuOpen, setDeleteMenuOpen ] = useState(false);\n  const editedContent = useRef(content);\n\n  const setAvatarAndRank = (userInfo) => {\n    setAvatarData(userInfo.avatarData);\n    setRank(userInfo.cfRank);\n  };\n\n  useEffect(() => {\n    if(subscribeToUserInfo) {\n      subscribeToUserInfo(setAvatarAndRank);\n    }\n    if(subscribeToReplyInfo) {\n      subscribeToReplyInfo((userInfo) => setReplyRank(userInfo.cfRank));\n    }\n  }, [subscribeToUserInfo, subscribeToReplyInfo]);\n\n  const openEditForm = () => {\n    setEditFormOpen(true);\n  };\n\n  const closeEditForm = () => {\n    setEditFormOpen(false);\n  };\n\n  const updateEditedContent = (newContent) => {\n    editedContent.current = newContent;\n  };\n\n  const submitEditedContent = async () => {\n    await editCallback(id, editedContent.current);\n  };\n\n  const openDeleteMenu = () => {\n    setDeleteMenuOpen(true);\n  };\n\n  const closeDeleteMenu = () => {\n    setDeleteMenuOpen(false);\n  };\n\n  const deleteComment = async () => {\n    await deleteCallback(id);\n  };\n\n  const authorUsername = info.username;\n  const textContentId = `Z${id}Z`;\n\n  let timeAgoString;\n  if(info.editedTime) {\n    timeAgoString = 'Edited ' + Utils.getTimeAgoString(info.editedTime);\n  }\n  else {\n    timeAgoString = Utils.getTimeAgoString(info.creationTime);\n  }\n\n  let commentClassName = 'Module-outer-space Comment-section-comment';\n  if(loggedInUsername === authorUsername) {\n    commentClassName += ' Comment-section-own-comment';\n  }\n\n  if(editFormOpen) {\n    return (\n      <CommentForm cancelCallback={closeEditForm} addCallback={submitEditedContent}\n                   initialContent={editedContent.current}\n                   updateCallback={updateEditedContent} />\n    );\n  }\n  else {\n    return (\n      <div id={id} className={commentClassName}>\n        { deleteMenuOpen &&\n          <DeleteMenu exitCallback={closeDeleteMenu} deleteCallback={deleteComment}\n                      entityName=\"comment\" />\n        }\n        {\n          replyUsername &&\n          <span className=\"Comment-section-reply-username\">\n            <Username username={replyUsername} rank={replyRank} />\n            <span className=\"icon-reply\" />\n          </span>\n        }\n        {\n          avatarData &&\n          <img className=\"Comment-section-avatar\" src={avatarData} alt=\"avatar\" />\n        }\n        <div className=\"Comment-section-comment-body\">\n          <Username username={info.username} rank={rank} />\n          <span className=\"Comment-section-timestamp\">\n            {timeAgoString}\n          </span>\n          {\n            content &&\n            <TextEditorContent id={textContentId} content={content} editable={false} />\n          }\n          {\n            !content &&\n            <div className=\"Comment-section-deleted\">\n              This comment has been deleted\n            </div>\n          }\n          <div className=\"Comment-section-comment-buttons\">\n            <button className=\"Comment-section-reply-button Askd-button\"\n                    onClick={replyCallback}>\n              Reply\n            </button>\n          </div>\n          {\n            (loggedInUsername === authorUsername && info.content) &&\n            <div className=\"Comment-section-personal-buttons\">\n              <button className=\"Askd-form-link\" onClick={openEditForm}>\n                Edit\n              </button>\n              <button className=\"Askd-form-link\" onClick={openDeleteMenu}>\n                Delete\n              </button>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Comment;\n","import React, { useState, useRef } from 'react';\nimport Comment from './Comment';\nimport CommentForm from './CommentForm';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport Username from '../Misc/Username';\n\nfunction RootComment({ info, addInfoSubscriptions, replyCallback,\n                       editCallback, deleteCallback, loggedInUsername }) {\n  const [ editorActive, setEditorActive ] = useState(false);\n  const [ replyUsername, setReplyUsername ] = useState(null);\n  const [ replyRank, setReplyRank ] = useState(null);\n  const editorReplyInfo = useRef({\n    content: null,\n    replyId: null\n  });\n\n  const handleCancelEditor = () => {\n    setEditorActive(false);\n  }\n\n  const editorUpdateCallback = (newContent) => {\n    editorReplyInfo.current.content = newContent;\n  };\n\n  const editorAddCallback = async () => {\n    return await replyCallback(\n      editorReplyInfo.current.content,\n      info.commentId,\n      editorReplyInfo.current.replyId\n    );\n  };\n\n  const createReplyHandler =\n    (commentReplyId, commentReplyUsername, subscribeToUserInfo) => {\n      return async () => {\n        const username = await UserAuthApi.getUsername();\n        if(!username) {\n          window.suggestUserRegister();\n          return;\n        }\n\n        editorReplyInfo.current.replyId = commentReplyId;\n        setReplyUsername(commentReplyUsername);\n        setEditorActive(true);\n\n        subscribeToUserInfo((userInfo) => {\n          if(editorReplyInfo.current.replyId === commentReplyId) {\n            setReplyRank(userInfo.cfRank);\n          }\n        });\n      };\n  }\n\n  let replyListItems = [];\n  let replyIdToUsername = {\n    [ info.commentId ]: info.username\n  };\n\n  for(let i = 0; i < info.replies.length; i++) {\n    const reply = info.replies[i];\n    const commentReplyUsername = replyIdToUsername[reply.replyId];\n    const subscribeToUserInfo = addInfoSubscriptions[reply.username];\n    const subscribeToReplyInfo = addInfoSubscriptions[commentReplyUsername];\n    const replyCallback = createReplyHandler(\n      reply.commentId, reply.username, subscribeToUserInfo\n    );\n\n    replyListItems.push(\n      <li key={i} className=\"Comment-section-reply-comment\">\n        <Comment info={reply} replyUsername={commentReplyUsername}\n                 subscribeToUserInfo={subscribeToUserInfo}\n                 subscribeToReplyInfo={subscribeToReplyInfo}\n                 replyCallback={replyCallback} editCallback={editCallback}\n                 deleteCallback={deleteCallback}\n                 loggedInUsername={loggedInUsername} />\n      </li>\n    );\n    replyIdToUsername[reply.commentId] = reply.username;\n  }\n\n  const replyCommentForm = (\n    <div className=\"Comment-section-reply-form\">\n      <span className=\"Comment-section-reply-username\">\n        <Username username={replyUsername} rank={replyRank} />\n        <span className=\"icon-reply\" />\n      </span>\n      <li className=\"Comment-section-reply-comment\">\n        <CommentForm cancelCallback={handleCancelEditor}\n                     updateCallback={editorUpdateCallback}\n                     addCallback={editorAddCallback}\n                     initialContent={editorReplyInfo.current.content} />\n      </li>\n    </div>\n  );\n\n  const rootCommentSubscribeToUserInfo = addInfoSubscriptions[info.username];\n  const rootCommentReplyCallback = createReplyHandler(\n    info.commentId, info.username, rootCommentSubscribeToUserInfo\n  );\n\n  return (\n    <>\n      <Comment info={info} subscribeToUserInfo={rootCommentSubscribeToUserInfo}\n               replyCallback={rootCommentReplyCallback}\n               editCallback={editCallback} deleteCallback={deleteCallback}\n               loggedInUsername={loggedInUsername} />\n      <ol className=\"Comment-section-replies\">\n        { replyListItems }\n        { editorActive && replyCommentForm }\n      </ol>\n    </>\n  );\n}\n\nexport default RootComment;\n","import React, { useState, useRef } from 'react';\nimport CommentForm from './CommentForm';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nfunction AddCommentForm({ addCallback }) {\n  const [ editorActive, setEditorActive ] = useState(false);\n  const editorContent = useRef(null);\n  const inputRef = React.createRef();\n\n  const handleInactiveFocus = async (event) => {\n    const username = await UserAuthApi.getUsername();\n    if(!username) {\n      inputRef.current.blur();\n      window.suggestUserRegister();\n    }\n    else {\n      setEditorActive(true);\n    }\n  };\n\n  const handleCancelEditor = (event) => {\n    setEditorActive(false);\n  }\n\n  const updateCallback = (newContent) => {\n    editorContent.current = newContent;\n  }\n\n  if(!editorActive) {\n    return (\n      <div className=\"Comment-section-add\">\n        <input className=\"Comment-section-add-placeholder\" type=\"text\"\n               placeholder=\"Write a comment...\" onFocus={handleInactiveFocus}\n               ref={inputRef} />\n      </div>\n    );\n  }\n  else {\n    return (\n      <CommentForm cancelCallback={handleCancelEditor} addCallback={addCallback}\n                   initialContent={editorContent.current}\n                   updateCallback={updateCallback} />\n    );\n  }\n}\n\nexport default AddCommentForm;\n","import CommentsApi from '../Api/CommentsApi';\nimport CreateCommentComponent from '../HOC/CreateCommentComponent';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nfunction getParamsFromProps(props) {\n  const noteAuthor = props.match.params.ownerUsername;\n  const platform = props.match.params.platform;\n  const contestId = props.match.params.contestId;\n  const problemCode = props.match.params.problemCode;\n  const problemId = `${contestId}#${problemCode}`;\n\n  return [ noteAuthor, platform, problemId ];\n}\n\nasync function getNoteComments(props, params) {\n  const [ noteAuthor, platform, problemId ] = getParamsFromProps(props);\n  const comments = await CommentsApi.getNoteComments(\n    noteAuthor, platform, problemId\n  );\n\n  const loggedInUsername = await UserAuthApi.getUsername();\n\n  return {\n    comments: comments,\n    loggedInUsername: loggedInUsername\n  };\n}\n\nasync function addNoteComment(props, newCommentContent, rootReplyId, replyId) {\n  const username = await UserAuthApi.getUsername();\n  const [ noteAuthor, platform, problemId ] = getParamsFromProps(props);\n\n  return await CommentsApi.addNoteComment(\n    username, noteAuthor, platform, problemId, rootReplyId, replyId, newCommentContent\n  );\n}\n\nexport default CreateCommentComponent(getNoteComments, addNoteComment);\n","import React, { useRef, useEffect } from 'react';\nimport CreateLoadingComponent from './CreateLoadingComponent';\nimport LoadState from '../Enum/LoadState';\nimport RootComment from '../CommentForm/RootComment';\nimport AddCommentForm from '../CommentForm/AddCommentForm';\nimport CommentsApi from '../Api/CommentsApi';\nimport UsersApi from '../Api/UsersApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport queryString from 'query-string';\nimport '../css/CommentSection.css';\n\nfunction CreateCommentComponent(getComments, addComment) {\n  function CommentComponent({ otherProps, info, screen }) {\n    let mounted = useRef(true);\n    let userInfos = useRef({});\n    let userInfoSubscriptions = useRef({});\n    let addInfoSubscriptions = useRef({});\n\n    useEffect(() => {\n      mounted.current = true;\n      return () => {\n        mounted.current = false;\n      };\n    });\n\n    useEffect(() => {\n      const urlParams = queryString.parse(window.location.search);\n      if(urlParams.linkedComment) {\n        const commentElement = document.getElementById(urlParams.linkedComment);\n        if(commentElement) {\n          commentElement.scrollIntoView();\n        }\n      }\n    });\n\n    useEffect(() => {\n      if(!info) {\n        return;\n      }\n\n      userInfos.current = {};\n      userInfoSubscriptions.current = {};\n      addInfoSubscriptions.current = {};\n\n      const getUserInfo = async (username) => {\n        const userInfo = await UsersApi.getUserInfo(username, true);\n        userInfos.current[username] = userInfo;\n        for(const callback of userInfoSubscriptions.current[username]) {\n          if(mounted.current) {\n            callback(userInfo);\n          }\n        }\n      };\n\n      const initializeInfoSystem = (username) => {\n        userInfos.current[username] = null;\n        userInfoSubscriptions.current[username] = [];\n        addInfoSubscriptions.current[username] = (callback) => {\n          if(userInfos.current[username] && mounted.current) {\n            callback(userInfos.current[username]);\n          }\n          else {\n            userInfoSubscriptions.current[username].push(callback);\n          }\n        };\n        getUserInfo(username);\n      };\n\n      for(const comment of info.comments) {\n        if(!userInfos.current.hasOwnProperty(comment.username)) {\n          initializeInfoSystem(comment.username);\n        }\n        for(const reply of comment.replies) {\n          if(!userInfos.current.hasOwnProperty(reply.username)) {\n            initializeInfoSystem(reply.username);\n          }\n        }\n      }\n    }, [info]);\n\n    const redirectToCommentId = (commentId) => {\n      const basePath = window.location.pathname;\n      otherProps.history.replace(`${basePath}?linkedComment=${commentId}`);\n    }\n\n    const verifyUserIsSignedIn = async () => {\n      const username = await UserAuthApi.getUsername();\n      if(!username) {\n        window.suggestUserRegister();\n        return false;\n      }\n      return true;\n    }\n\n    const addCallback = async (newCommentContent) => {\n      const signedIn = await verifyUserIsSignedIn();\n      if(!signedIn) return;\n\n      const newCommentId = await addComment(\n        otherProps, newCommentContent, null, null\n      );\n      redirectToCommentId(newCommentId);\n    };\n\n    const replyCallback = async (newCommentContent, rootReplyId, replyId) => {\n      const signedIn = await verifyUserIsSignedIn();\n      if(!signedIn) return;\n\n      const newCommentId = await addComment(\n        otherProps, newCommentContent, rootReplyId, replyId\n      );\n      redirectToCommentId(newCommentId);\n    }\n\n    const editCallback = async (commentId, newCommentContent) => {\n      const signedIn = await verifyUserIsSignedIn();\n      if(!signedIn) return;\n\n      await CommentsApi.editComment(commentId, newCommentContent);\n      redirectToCommentId(commentId);\n    };\n\n    const deleteCallback = async (commentId) => {\n      await CommentsApi.deleteComment(commentId);\n      redirectToCommentId(commentId);\n    };\n\n    if(screen === LoadState.LOADING || otherProps.doNotShow) {\n      return null;\n    }\n    else {\n      const comments = info.comments;\n      let commentsContent;\n\n      if(comments.length === 0) {\n        commentsContent = (\n          <p className=\"User-notes-nothing\">\n            There are no comments yet!\n          </p>\n        );\n      }\n      else {\n        let commentListItems = [];\n        for(let i = 0; i < comments.length; i++) {\n          const comment = comments[i];\n          commentListItems.push(\n            <li key={i} className=\"Comment-section-root-comment\">\n              <RootComment info={comment} replyCallback={replyCallback}\n                           editCallback={editCallback} deleteCallback={deleteCallback}\n                           loggedInUsername={info.loggedInUsername}\n                           addInfoSubscriptions={addInfoSubscriptions.current} />\n            </li>\n          );\n        }\n\n        commentsContent = (\n          <ol className=\"Comment-section-comments\">\n            { commentListItems }\n          </ol>\n        );\n      }\n\n      return (\n        <div className=\"Module-outer-space Comment-section\">\n          <h3 className=\"Module-heading\">\n            Comments\n          </h3>\n          <AddCommentForm addCallback={addCallback} />\n          { commentsContent }\n        </div>\n      );\n    }\n  }\n\n  return CreateLoadingComponent(getComments, null, null, CommentComponent);\n}\n\nexport default CreateCommentComponent;\n","import React from 'react';\nimport CreateLoadingComponent from '../HOC/CreateLoadingComponent';\nimport LoadingSpinner from '../Misc/LoadingSpinner';\nimport LoadState from '../Enum/LoadState';\nimport ProblemInfo from '../EditNote/ProblemInfo';\nimport PublicNoteInfo from './PublicNoteInfo';\nimport PublicNoteComments from './PublicNoteComments';\nimport SeeOtherNotes from '../Misc/SeeOtherNotes';\nimport NotesApi from '../Api/NotesApi';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nasync function getNoteData(props, params) {\n  const ownerUsername = props.match.params.ownerUsername;\n  const platform = props.match.params.platform;\n  const contestId = props.match.params.contestId;\n  const problemCode = props.match.params.problemCode;\n  const problemId = `${contestId}#${problemCode}`;\n\n  const noteInfo = await NotesApi.getNoteInfo(ownerUsername, platform, problemId, true);\n  const loggedInUsername = await UserAuthApi.getUsername();\n\n  return {\n    noteInfo: noteInfo,\n    loggedInUsername: loggedInUsername\n  };\n}\n\nfunction PublicNote({ otherProps, info, screen }) {\n  const platform = otherProps.match.params.platform;\n  const doNotShowComments = !(screen === LoadState.DONE);\n  const commentsComponent = (\n    <PublicNoteComments match={otherProps.match} doNotShow={doNotShowComments}\n                        history={otherProps.history} key=\"comments\" />\n  );\n\n  if(screen === LoadState.NOT_FOUND) {\n    return (\n      <div className=\"Module-description\">\n        <h2>Note is either unpublished or does not exist!</h2>\n      </div>\n    );\n  }\n  else if(screen === LoadState.LOADING) {\n    return (\n      <>\n        <LoadingSpinner />\n        { commentsComponent }\n      </>\n    );\n  }\n  else {\n    return (\n      <>\n        <SeeOtherNotes platform={platform} problemId={info.noteInfo.problemSk} />\n        <ProblemInfo info={info.noteInfo.problemInfo} platform={platform} />\n        <PublicNoteInfo loggedInUsername={info.loggedInUsername} info={info.noteInfo} />\n        { commentsComponent }\n      </>\n    );\n  }\n}\n\nexport default CreateLoadingComponent(\n  getNoteData, null, 'NoteNotFound', PublicNote\n);\n","import React from 'react';\nimport SearchSelect from './SearchSelect';\nimport UsersApi from '../Api/UsersApi';\n\nfunction SearchUserSelect({ callback, initialUsername, attachLabel }) {\n  const placeholderString = attachLabel ? null : 'Search by username';\n\n  return (\n    <div className=\"Askd-form Users-table-search\">\n      {\n        attachLabel &&\n        <label htmlFor=\"username\">\n          Username\n        </label>\n      }\n      <SearchSelect name='username' id='cp-username-search'\n                    search={UsersApi.getSearchUsers} staticKey='username'\n                    network={true} placeholder={placeholderString}\n                    initialSearchTerm={initialUsername}\n                    callback={callback} />\n    </div>\n  );\n}\n\nexport default SearchUserSelect;\n","import React from 'react';\nimport Username from '../Misc/Username';\nimport '../css/UsersTable.css';\n\nconst PAGE_SIZE = 50;\n\nfunction UsersTable({ currentPage, lastUpdated, users }) {\n  const updatedTime = (new Date(lastUpdated)).toLocaleString();\n\n  let userRows = [];\n  let index = (currentPage - 1) * PAGE_SIZE + 1;\n  for(const user of users) {\n    let contributionClassName = user.contribution > 0 ?\n      'Users-table-contributor' : '';\n    contributionClassName += ' Users-table-contribution';\n\n    userRows.push(\n      <tr key={index}>\n        <td>{index}</td>\n        <td className=\"Users-table-username\">\n          <Username username={user.username} rank={user.cfRank} />\n        </td>\n        <td className={contributionClassName}>{user.contribution}</td>\n      </tr>\n    );\n    index++;\n  }\n\n  return (\n    <div className=\"Users-table\">\n      <div className=\"Users-table-table\">\n        <div className=\"Users-table-table-table\">\n          <table>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th className=\"Users-table-username\">Username</th>\n                <th className=\"Users-table-contribution\">Contribution</th>\n              </tr>\n            </thead>\n            <tbody>\n              {userRows}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <span className=\"Users-table-last-updated\">\n        Last updated on {updatedTime}\n      </span>\n    </div>\n  );\n}\n\nexport default UsersTable;\n","import React from 'react';\nimport CreateLoadingComponent from '../HOC/CreateLoadingComponent';\nimport LoadingSpinner from '../Misc/LoadingSpinner';\nimport Paginator from '../Paginator/Paginator';\nimport SearchUserSelect from '../SearchSelect/SearchUserSelect';\nimport UsersTable from './UsersTable';\nimport LoadState from '../Enum/LoadState';\nimport UsersApi from '../Api/UsersApi';\n\nasync function getUsers(props, page) {\n  const usersInfo = await UsersApi.getUsers(page);\n  return {\n    usersInfo: usersInfo\n  };\n}\n\nfunction UsersList({ otherProps, info, loadInfo, screen, currentParams }) {\n  let loadUserProfile = (username) => {\n    otherProps.history.push(`/users/${username}`);\n  };\n\n  const usersInfo = info ? info.usersInfo : null;\n\n  if(screen === LoadState.NOT_FOUND) {\n    return (\n      <div className=\"Module-description\">\n        Page not found!\n      </div>\n    );\n  }\n  else if(screen === LoadState.LOADING) {\n    return (\n      <>\n        <h2 className=\"Module-heading\">\n          Top contributors\n        </h2>\n        <SearchUserSelect callback={loadUserProfile} />\n        <div className=\"Module-space\">\n          <LoadingSpinner />\n        </div>\n      </>\n    );\n  }\n  else {\n    const paginator = (\n      <Paginator currentPage={currentParams} totalPages={usersInfo.totalPages}\n                 callback={loadInfo} />\n    );\n\n    return (\n      <>\n        <h2 className=\"Module-heading\">\n          Top contributors\n        </h2>\n        <SearchUserSelect callback={loadUserProfile} />\n        <div className=\"Module-space\">\n          { paginator }\n          <UsersTable currentPage={currentParams} users={usersInfo.users}\n                      lastUpdated={usersInfo.lastUpdated} />\n          { paginator }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default CreateLoadingComponent(\n  getUsers, 1, 'PageNotFound', UsersList\n);\n","import React from 'react';\nimport NotesApi from '../Api/NotesApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport UserNoteInfo from '../UserProfile/UserNoteInfo';\nimport Paginator from '../Paginator/Paginator';\nimport CreateLoadingComponent from '../HOC/CreateLoadingComponent';\nimport LoadingSpinner from '../Misc/LoadingSpinner';\nimport LoadState from '../Enum/LoadState';\n\nasync function getMostLikedNotes(props, params) {\n  const username = props.username;\n  const platform = props.platform;\n  const contestId = props.contestId;\n  const problemId = props.problemId;\n  const page = props.page;\n  const sortByRecent = props.sortByRecent;\n\n  let data;\n  if(sortByRecent) {\n    data = await NotesApi.getMostRecentNotes(page);\n  }\n  else {\n    data = await NotesApi.getMostLikedNotes(\n      username, platform, contestId, problemId, page\n    );\n  }\n  const loggedInUsername = await UserAuthApi.getUsername();\n\n  return {\n    ...data,\n    loggedInUsername: loggedInUsername\n  };\n}\n\nfunction NotesList({ otherProps, info, screen }) {\n  let innerContent;\n  if(screen === LoadState.NOT_FOUND) {\n    innerContent = (\n      <p className=\"User-notes-nothing\">\n        Page not found!\n      </p>\n    );\n  }\n  else if(screen === LoadState.LOADING) {\n    innerContent = (\n      <LoadingSpinner />\n    );\n  }\n  else {\n    const paginator = (\n      <Paginator currentPage={otherProps.page} totalPages={info.totalPages}\n                 callback={otherProps.pageChangeCallback} />\n    );\n\n    let noteInfoElements = [];\n    for(let i = 0; i < info.notes.length; i++) {\n      const note = info.notes[i];\n      const authorRank = info.userRanks[note.username];\n\n      noteInfoElements.push(\n        <UserNoteInfo key={i} info={note} mostLikedMode={true}\n                      authorRank={authorRank}\n                      loggedInUsername={info.loggedInUsername} />\n      );\n    }\n\n    if(noteInfoElements.length === 0) {\n      innerContent = (\n        <p className=\"User-notes-nothing\">\n          There are no published notes for that search!\n        </p>\n      );\n    }\n    else {\n      innerContent = (\n        <>\n          { paginator }\n          <ul className=\"User-notes-list\">\n            { noteInfoElements }\n          </ul>\n          { paginator }\n        </>\n      );\n    }\n  }\n\n  return (\n    <div className=\"User-notes Module-space\">\n      { innerContent }\n    </div>\n  );\n}\n\nexport default CreateLoadingComponent(\n  getMostLikedNotes, null, 'PageNotFound', NotesList\n);\n","import React, { useState } from 'react';\nimport NotesList from './NotesList';\nimport SearchUserSelect from '../SearchSelect/SearchUserSelect';\nimport SearchProblemSelect from '../SearchSelect/SearchProblemSelect';\nimport SeeOtherNotes from '../Misc/SeeOtherNotes';\nimport queryString from 'query-string';\nimport '../css/NotesSearch.css';\n\nfunction NotesSearch({ history }) {\n  let urlParams = queryString.parse(window.location.search);\n  let page = Number(urlParams.page) || 1;\n  if(!(page > 0)) {\n    page = 1;\n  }\n\n  const username = urlParams.username || '';\n  const platform = urlParams.platform || '';\n  const contestId = urlParams.contestId || '';\n  const problemId = urlParams.problemId || '';\n  const sortByRecent = urlParams.recent;\n\n  const changeSearchAttributes = (changes) => {\n    for(const attribute in changes) {\n      if(changes[attribute] === null) {\n        delete urlParams[attribute];\n      }\n      else {\n        urlParams[attribute] = changes[attribute];\n      }\n    }\n    const newQueryString = queryString.stringify(urlParams);\n    history.push(`/notes?${newQueryString}`);\n  };\n\n  const resetSearch = (event) => {\n    event.preventDefault();\n\n    changeSearchAttributes({\n      page: null,\n      username: null,\n      platform: null,\n      contestId: null,\n      problemId: null\n    });\n  }\n\n  const changePage = (newPage) => {\n    if(newPage === 1) {\n      newPage = null;\n    }\n\n    changeSearchAttributes({\n      page: newPage\n    });\n  };\n\n  const changeUsername = (newUsername) => {\n    changeSearchAttributes({\n      username: newUsername,\n      page: null\n    });\n  }\n\n  const changePlatformContestOrProblem = (platform, contestId, problemId) => {\n    changeSearchAttributes({\n      platform: platform,\n      contestId: contestId,\n      problemId: problemId,\n      page: null\n    });\n  };\n\n  let [ showFilterForm, setShowFilterForm ] = useState(false);\n  const toggleFilterForm = () => {\n    setShowFilterForm(!showFilterForm);\n  };\n\n  if(sortByRecent && showFilterForm) {\n    setShowFilterForm(false);\n  }\n\n  const changeSort = (event) => {\n    const newSort = event.target.value;\n    if(newSort === 'Recent') {\n      changeSearchAttributes({\n        username: null,\n        platform: null,\n        contestId: null,\n        problemId: null,\n        page: null,\n        recent: 1\n      });\n    }\n    else {\n      changeSearchAttributes({\n        page: null,\n        recent: null\n      });\n    }\n  };\n\n  const headingText = sortByRecent ? 'Most recent notes' : 'Most liked notes';\n  const toggleFilterFormText = showFilterForm ? 'Hide this' :\n    'Want to filter by username, platform, contest, or problem?';\n\n  const skipContestSearch = !!problemId && !contestId;\n\n  const showSeeOtherNotes = !!platform || !!username;\n\n  return (\n    <div className=\"Notes-search\">\n      <h2 className=\"Module-heading\">\n        {headingText}\n      </h2>\n      {\n        showSeeOtherNotes &&\n        <SeeOtherNotes platform={platform} contestId={contestId}\n                       problemId={problemId} goDownOneLevel={!username} />\n      }\n      <button onClick={toggleFilterForm} disabled={sortByRecent}\n              className=\"Notes-search-filter Askd-form-link\">\n        {toggleFilterFormText}\n      </button>\n      <div className=\"Notes-search-sort\">\n        <label htmlFor=\"search-sort\">Sort by</label>\n        <select value={sortByRecent ? 'Recent' : 'Likes'} name=\"search-sort\"\n                onChange={changeSort}>\n          <option value=\"Likes\">Most Liked</option>\n          <option value=\"Recent\">Recent</option>\n        </select>\n      </div>\n      {\n        showFilterForm &&\n        <div className=\"Module-outer-space\">\n          <form className=\"Askd-form\">\n            <SearchUserSelect callback={changeUsername} initialUsername={username}\n                              attachLabel={true} />\n            <SearchProblemSelect initialPlatform={platform}\n                                 initialContestId={contestId}\n                                 initialProblemId={problemId}\n                                 initialSkipContestSearch={skipContestSearch}\n                                 changeCallback={changePlatformContestOrProblem} />\n           <button onClick={resetSearch} className=\"Askd-form-link Notes-search-reset\">\n             Reset all filters\n           </button>\n          </form>\n        </div>\n      }\n      <NotesList username={username} platform={platform} contestId={contestId}\n                 problemId={problemId} page={page} sortByRecent={sortByRecent}\n                 pageChangeCallback={changePage} />\n    </div>\n  );\n}\n\nexport default NotesSearch;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CreateLoadingComponent from '../HOC/CreateLoadingComponent';\nimport LoadingSpinner from './LoadingSpinner';\nimport NotesApi from '../Api/NotesApi';\nimport Username from './Username';\n\nasync function getMostRecentNotes(props, params) {\n  return await NotesApi.getMostRecentNotes(1);\n}\n\nfunction RecentNotesList({ otherProps, loadInfo, info, screen }) {\n  let innerContent;\n  if(!info) {\n    innerContent = (\n      <LoadingSpinner />\n    );\n  }\n  else {\n    let noteListItems = [];\n    for(let i = 0; i < info.notes.length; i++) {\n      const note = info.notes[i];\n      const noteLink = NotesApi.getNotePublishedLink(note);\n      const displayName = NotesApi.getNoteDisplayName(note);\n      const commentIcon = (note.editedTime !== note.activityTime);\n      const userRank = info.userRanks[note.username];\n\n      noteListItems.push(\n        <li key={i}>\n          <Username username={note.username} rank={userRank} />\n          {' '}\n          <span className=\"icon-long-arrow-right\" />\n          {' '}\n          <Link className=\"Askd-form-link\" to={noteLink}>\n            {displayName}\n          </Link>\n          {' '}\n          { !commentIcon && <span className=\"icon-note-text\" /> }\n          { commentIcon && <span className=\"icon-comments\" /> }\n        </li>\n      );\n    }\n\n    noteListItems.push(\n      <li key=\"more\">\n        <Link className=\"Username\" to=\"/notes?recent=1\">\n          More...\n        </Link>\n      </li>\n    );\n\n    innerContent = (\n      <div className=\"Module-recent-notes-list\">\n        <ol>\n          { noteListItems }\n        </ol>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Module-recent-notes\">\n      <div className=\"Module-recent-actions\">\n        <h4>Recent actions</h4>\n      </div>\n      <div className=\"Module-recent-notes-divider\" />\n      { innerContent }\n    </div>\n  );\n}\n\nexport default CreateLoadingComponent(\n  getMostRecentNotes, null, null, RecentNotesList\n);\n","import React from 'react';\nimport copy from 'copy-to-clipboard';\nimport '../css/Misc/ClipboardCopy.css';\n\nfunction ClipboardCopy({ text }) {\n  const innerDivRef = React.createRef();\n\n  const handleClick = () => {\n    innerDivRef.current.classList.add('Clipboard-copy-clicked');\n    window.setTimeout(() => {\n      innerDivRef.current.classList.remove('Clipboard-copy-clicked');\n    }, 500);\n\n    copy(text);\n  }\n\n  return (\n    <div className=\"Clipboard-copy\" onClick={handleClick}>\n      {text}\n      <div ref={innerDivRef}>\n        Copied!\n      </div>\n    </div>\n  );\n}\n\nexport default ClipboardCopy;\n","import React, { useState } from 'react';\nimport ClipboardCopy from '../Misc/ClipboardCopy';\nimport UsersApi from '../Api/UsersApi';\n\nconst CF_DOWN_MESSAGE = 'Codeforces might be down. Please try again later.';\n\nfunction LinkCfAccountForm({ userInfo, history }) {\n  const [ cfUsername, setCfUsername ] = useState('');\n  const [ authCfUsername, setAuthCfUsername ] = useState('');\n  const [ authId, setAuthId ] = useState(null);\n  const [ loading, setLoading ] = useState(false);\n  const [ error, setError ] = useState(null);\n\n  const handleChange = (event) => {\n    setCfUsername(event.target.value);\n  };\n\n  const beginCfVerification = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    try {\n      const verificationCode = await UsersApi.beginCfVerification(\n        userInfo.username, cfUsername\n      );\n      setAuthId(verificationCode);\n      setAuthCfUsername(cfUsername);\n    }\n    catch(err) {\n      if(err.name === 'UserNotFound') {\n        setError(`Account ${cfUsername} not found on Codeforces!`);\n      }\n      else if(err.name === 'CodeforcesDown') {\n        setError(CF_DOWN_MESSAGE);\n      }\n      else if(err.name === 'AlreadyLinked') {\n        setError(err.message);\n      }\n      else {\n        throw err;\n      }\n    }\n\n    setLoading(false);\n  };\n\n  const endCfVerification = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    try {\n      await UsersApi.endCfVerification(\n        userInfo.username, authCfUsername, authId\n      );\n      history.replace(history.location);\n    }\n    catch(err) {\n      if(err.name === 'VerificationFailed' ||\n         err.name === 'VerificationOverridden') {\n        setError(err.message);\n      }\n      else if(err.name === 'CodeforcesDown') {\n        setError(CF_DOWN_MESSAGE);\n      }\n      else {\n        throw err;\n      }\n    }\n\n    setLoading(false);\n  }\n\n  const copyText = `I am authorizing cp-notes to use my identity: ${authId}`;\n\n  return (\n    <>\n      <p className=\"Module-paragraph\">\n        <i>You haven't linked your Codeforces account yet!</i>\n      </p>\n      <form className=\"Askd-form\" onSubmit={beginCfVerification}>\n        <label htmlFor=\"cfUsername\">\n          Codeforces username\n        </label>\n        <input type=\"text\" name=\"cfUsername\" value={cfUsername}\n               onChange={handleChange} />\n        <input type=\"submit\" className=\"Askd-button Askd-not-fullwidth\"\n               value=\"Link your account\" disabled={loading} />\n      </form>\n      {\n        authId &&\n        <>\n          <div className=\"User-settings-cf-verify\">\n            <p className=\"Module-paragraph\">\n              Account {authCfUsername} found! Please change the (English) last name\n              on your Codeforces profile to be the following (you may do so\n              {' '}\n              <a href=\"https://codeforces.com/settings/social\" target=\"_blank\"\n                 rel=\"noopener noreferrer\" className=\"Askd-form-link\">\n                 here\n              </a>):\n            </p>\n            <ClipboardCopy text={copyText} />\n          </div>\n          <form className=\"Askd-form\" onSubmit={endCfVerification}>\n            <input type=\"submit\" className=\"Askd-button Askd-not-fullwidth\"\n                   value=\"Verify!\" disabled={loading} />\n          </form>\n        </>\n      }\n      {\n        error &&\n        <p className=\"User-info-info-error\">Error: {error}</p>\n      }\n    </>\n  );\n}\n\nexport default LinkCfAccountForm;\n","import React from 'react';\nimport LinkCfAccountForm from './LinkCfAccountForm';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport UsersApi from '../Api/UsersApi';\nimport CreateLoadingComponent from '../HOC/CreateLoadingComponent';\nimport LoadingSpinner from '../Misc/LoadingSpinner';\nimport LoadState from '../Enum/LoadState';\nimport Username from '../Misc/Username';\nimport '../css/UserSettings.css';\n\nasync function getUserInfo() {\n  const loggedInUsername = await UserAuthApi.getUsername();\n  let userInfo = null;\n\n  if(loggedInUsername) {\n    userInfo = await UsersApi.getUserInfo(loggedInUsername);\n  }\n\n  return {\n    userInfo: userInfo\n  };\n}\n\nfunction UserSettings({ otherProps, info, screen }) {\n  let innerContent;\n  if(screen === LoadState.LOADING) {\n    innerContent = (\n      <LoadingSpinner />\n    );\n  }\n  else if(info.userInfo) {\n    const userInfo = info.userInfo;\n    let innerInnerContent;\n\n    if(info.userInfo.cfUsername) {\n      innerInnerContent = (\n        <p className=\"Module-paragraph\">\n          You've linked the following account:\n          {' '}\n          <Username username={userInfo.cfUsername} rank={userInfo.cfRank}\n                    linkToCf={true} />\n          {' '}\n          <b>({userInfo.cfRating})</b>\n        </p>\n      );\n    }\n    else {\n      innerInnerContent = (\n        <LinkCfAccountForm userInfo={userInfo} history={otherProps.history} />\n      );\n    }\n\n    innerContent = (\n      <div className=\"Module-outer-space User-settings-cf\">\n        <h3 className=\"Module-heading\">\n          Codeforces account\n        </h3>\n        { innerInnerContent }\n      </div>\n    );\n  }\n  else {\n    innerContent = (\n      <p className=\"Module-paragraph\">\n        You must log in first to view your settings!\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"User-settings\">\n      <h2 className=\"Module-heading\">\n        Settings\n      </h2>\n      { innerContent }\n    </div>\n  );\n}\n\nexport default CreateLoadingComponent(getUserInfo, null, null, UserSettings);\n","import React from 'react';\nimport TextEditor from './TextEditor';\n\nfunction TextEditorDemo() {\n  return (\n    <>\n      <h2 className=\"Module-heading\">\n        Text editor demo\n      </h2>\n      <div className=\"Askd-text-editor-demo\">\n        <TextEditor />\n      </div>\n    </>\n  );\n}\n\nexport default TextEditorDemo;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './Header/Header';\nimport Home from './Home/Home';\nimport UserProfile from './UserProfile/UserProfile';\nimport EditNote from './EditNote/EditNote';\nimport PublicNote from './PublicNote/PublicNote';\nimport UsersList from './UsersList/UsersList';\nimport NotesSearch from './NotesSearch/NotesSearch';\nimport RecentNotesList from './Misc/RecentNotesList';\nimport UserSettings from './UserSettings/UserSettings';\nimport TextEditorDemo from './TextEditor/TextEditorDemo';\n\nimport './css/General/App.css';\nimport './css/General/Module.css';\nimport './css/General/Form.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <div className=\"Module-wrapper\">\n          <div className=\"Module-content-left\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/home\" component={Home} />\n              <Route exact path=\"/users\" component={UsersList} />\n              <Route exact path=\"/notes\" component={NotesSearch} />\n              <Route exact path=\"/settings\" component={UserSettings} />\n              <Route exact path=\"/users/:username\" component={UserProfile} />\n              <Route exact path=\"/notes/edit/:platform/:contestId/:problemCode\"\n                     component={EditNote} />\n              <Route exact path=\"/notes/:ownerUsername/:platform/:contestId/:problemCode\"\n                     component={PublicNote} />\n              <Route exact path=\"/demo\" component={TextEditorDemo} />\n            </Switch>\n          </div>\n          <RecentNotesList />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Amplify from 'aws-amplify';\nimport App from './App';\nimport Utils from './Utils';\nimport * as serviceWorker from './serviceWorker';\nimport amplify_config from './amplify_config';\n\nAmplify.configure(amplify_config[Utils.whatStageIsThis()]);\n\ndocument.body.addEventListener('mousedown', (event) => {\n  document.body.classList.add('Global-mouse-click');\n});\n\ndocument.body.addEventListener('keydown', (event) => {\n  if(event.keyCode === 9) {\n    document.body.classList.remove('Global-mouse-click');\n  }\n});\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}