{"version":3,"sources":["Utils.js","Header/HeaderUtils.js","Api/UserAuthApi.js","Header/HeaderState.js","Header/RegisterForm.js","Header/LoginForm.js","Header/UserMenu.js","Header/HeaderAuth.js","Header/Header.js","Home/CpNotes.js","Home/Home.js","UserProfile/UserInfo.js","SearchSelect/SearchSelect.js","Api/ApiConstants.js","Api/Api.js","Api/ProblemsApi.js","UserProfile/AddProblemForm.js","UserProfile/UserProblems.js","Api/UserApi.js","UserProfile/UserInfoState.js","UserProfile/UserProfile.js","App.js","serviceWorker.js","index.js"],"names":["Utils","component","stateObject","Promise","resolve","reject","setState","object","property","hasOwnProperty","HeaderUtils","password","confirmPassword","setError","length","UserAuthApi","Auth","currentAuthenticatedUser","profile","loadProfile","username","email","signUp","attributes","info","codeDeliveryDetails","Destination","code","confirmSignUp","resendSignUp","CodeDeliveryDetails","forgotPassword","forgotPasswordSubmit","signIn","signOut","getProfile","currentSession","getSignInUserSession","accessToken","getAccessToken","getJwtToken","HeaderState","Object","freeze","LOGIN","RECOVERY_USERNAME","RECOVERY_PASSWORD","RECOVERY_SUCCESS","REGISTER","REGISTER_VERIFY","REGISTER_SUCCESS","RegisterForm","props","screen","unverifiedAccountUsername","state","error","success","destination","unverifiedAccountDestination","close","bind","register","verifyEmail","resendVerificationEmail","this","exitCallback","message","startsWith","substring","setStatePromise","event","preventDefault","form","target","value","checkPasswords","setSuccess","currentForm","createAccountForm","className","onSubmit","htmlFor","autoComplete","type","name","id","verifyEmailForm","key","onClick","emailVerifiedBox","Component","LoginForm","login","enablePasswordRecovery","resetPassword","emailVerificationCallback","loginForm","recoveryUsernameForm","recoveryPasswordForm","recoveryPasswordSuccess","UserMenu","logout","logoutCallback","closeCallback","to","HeaderAuth","showRegisterForm","showLoginForm","showUserMenu","refreshUsername","toggleRegisterForm","toggleLoginForm","toggleUserMenu","hideUserMenu","afterLogin","unverifiedAccount","getUsername","focusedElement","relatedTarget","console","log","classList","contains","loggedIn","loginButtons","loggedInButton","tabIndex","onBlur","topRightButtons","Header","path","useLocation","pathname","small","outerClassName","CpNotes","window","MathJax","typesetPromise","Home","UserInfo","SearchSelect","loading","searchTerm","previousValidSearchTerm","showOptions","options","filteredOptions","handleChange","handleBlur","handleFocus","handleOptionSelect","option","optionStringArray","keys","push","join","toLowerCase","getOptionString","includes","prevProps","staticKey","search","filterOptions","sortKey","optionString","callback","optionElements","displayString","displayKey","onChange","onFocus","disabled","ApiConstants","API_ENDPOINT","Api","resource","queryString","stringify","fetch","headers","Authorization","response","status","json","responseJson","err","Error","ProblemsApi","localStorage","setItem","JSON","problems","platform","getJson","contestId","problem","fakeUuid","Date","getTime","_updateStorage","parse","getItem","AddProblemForm","contestSortKey","problemSortKey","skipContestSearch","handlePlatformChange","toggleSkipContestSearch","updateProblemSortKey","updateContestSortKey","searchContestFunction","searchContestKey","getContests","searchProblemFunction","searchProblemKey","getProblems","skipButtonText","addProblem","defaultValue","UserProblems","showAddProblemForm","toggleAddProblemForm","problemKey","UserApi","UserProfileState","LOADING","DONE","NOT_FOUND","UserProfile","UserInfoState","match","params","getUserInfo","loadUserInfo","content","loadedContent","userNotFoundContent","App","exact","Boolean","location","hostname","Amplify","configure","amplify_config","document","body","addEventListener","add","keyCode","remove","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9d57e829.chunk.js","sourcesContent":["class Utils {\n  static async setStatePromise(component, stateObject) {\n    return new Promise((resolve, reject) => {\n      component.setState(stateObject, () => {\n        resolve();\n      });\n    });\n  }\n\n  static isEmpty(object) {\n    for(const property in object) {\n      if(object.hasOwnProperty(property))\n        return false;\n    }\n    return true;\n  }\n}\n\nexport default Utils;\n","const MIN_PASSWORD_LENGTH = 6;\n\nclass HeaderUtils {\n  static async checkPasswords(component, password, confirmPassword) {\n    if(password !== confirmPassword) {\n      await component.setError(\"Your passwords don't match!\");\n      return false;\n    }\n\n    if(password.length < MIN_PASSWORD_LENGTH) {\n      await component.setError('Your password is too short!');\n      return false;\n    }\n\n    return true;\n  }\n}\n\nexport default HeaderUtils;\n","import { Auth } from 'aws-amplify';\n\nclass UserAuthApi {\n  static profile = null;\n\n  static async loadProfile() {\n    try {\n      UserAuthApi.profile = await Auth.currentAuthenticatedUser();\n    }\n    catch(err) {\n      // currentAuthenticatedUser() throws this error if the user is not logged in\n    }\n  }\n\n  static async getProfile() {\n    if(!UserAuthApi.profile)\n      await UserAuthApi.loadProfile();\n\n    return UserAuthApi.profile;\n  }\n\n  static async register(username, email, password) {\n    const info = await Auth.signUp({\n      username,\n      password,\n      attributes: {\n        email: email\n      }\n    });\n\n    // I like how Amplify makes this one inconsistently lowercase... lol\n    return info.codeDeliveryDetails.Destination;\n  }\n\n  static async verifyEmail(username, code) {\n    await Auth.confirmSignUp(username, code);\n  }\n\n  static async resendVerificationEmail(username) {\n    const info = await Auth.resendSignUp(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async forgotPassword(username) {\n    const info = await Auth.forgotPassword(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async resetPassword(username, code, password) {\n    await Auth.forgotPasswordSubmit(username, code, password);\n  }\n\n  static async login(username, password) {\n    await Auth.signIn(username, password);\n  }\n\n  static async logout() {\n    await Auth.signOut();\n    UserAuthApi.profile = null;\n  }\n\n  static async getUsername() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    return profile.username;\n  }\n\n  static async getAccessToken() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    const currentSession = profile.getSignInUserSession();\n    const accessToken = currentSession.getAccessToken();\n    return accessToken.getJwtToken();\n  }\n}\n\nexport default UserAuthApi;\n","const HeaderState = Object.freeze({\n  LOGIN: 0,\n  RECOVERY_USERNAME: 1,\n  RECOVERY_PASSWORD: 2,\n  RECOVERY_SUCCESS: 3,\n  REGISTER: 4,\n  REGISTER_VERIFY: 5,\n  REGISTER_SUCCESS: 6\n});\n\nexport default HeaderState;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\nimport '../css/RegisterForm.css';\n\nconst USERNAME_MIN_LENGTH = 3;\nconst USERNAME_MAX_LENGTH = 20;\nconst ERROR_TRIGGER_PREFIX = 'PreSignUp failed with error';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const screen = props.unverifiedAccountUsername ?\n                   HeaderState.REGISTER_VERIFY : HeaderState.REGISTER;\n    this.state = {\n      error: '',\n      success: '',\n      username: props.unverifiedAccountUsername,\n      destination: props.unverifiedAccountDestination,\n      screen: screen\n    };\n\n    this.close = this.close.bind(this);\n    this.register = this.register.bind(this);\n    this.verifyEmail = this.verifyEmail.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async setError(message) {\n    if(message.startsWith(ERROR_TRIGGER_PREFIX)) {\n      message = message.substring(\n        ERROR_TRIGGER_PREFIX.length, message.length - 1\n      );\n    }\n\n    await Utils.setStatePromise(this, {\n      error: `Error: ${message}`,\n      success: ''\n    });\n  }\n\n  async setSuccess(message) {\n    await Utils.setStatePromise(this, {\n      error: '',\n      success: message\n    });\n  }\n\n  async register(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const email = form.email.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!username || !email || !password || !confirmPassword) {\n      await this.setError('Please fill out all of the fields.')\n      return;\n    }\n\n    if(username.length < USERNAME_MIN_LENGTH || username.length > USERNAME_MAX_LENGTH) {\n      await this.setError(\n        `Your username must be between ${USERNAME_MIN_LENGTH} ` +\n        `and ${USERNAME_MAX_LENGTH} characters!`\n      );\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      const destination = await UserAuthApi.register(username, email, password);\n      Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.REGISTER_VERIFY\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async verifyEmail(event) {\n    event.preventDefault();\n\n    const code = event.target.code.value;\n    try {\n      await UserAuthApi.verifyEmail(this.state.username, code);\n      Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.REGISTER_SUCCESS\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.resendVerificationEmail(this.state.username);\n      await this.setSuccess('Another email has been sent!');\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  render() {\n    const createAccountForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Create an account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.register}>\n          <label htmlFor=\"register-username\">Username</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 id=\"register-username\" />\n\n          <label htmlFor=\"register-email\">Email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"email\"\n                 id=\"register-email\" />\n\n          <label htmlFor=\"register-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 id=\"register-password\" />\n\n          <label htmlFor=\"register-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 id=\"register-confirm-password\" />\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Register\" />\n        </form>\n      </div>\n    );\n\n    const verifyEmailForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Verify your email!</h2>\n        <p>\n          You should've received an email at {this.state.destination} with a\n          verification code. If it isn't convenient for you to verify your\n          account now, you may do so later by logging in.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.verifyEmail}>\n          <label htmlFor=\"verification-code\">Verification code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"verification-code\" id=\"verification-code\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const emailVerifiedBox = (\n      <div className=\"Register-form Module-popup\">\n        <h2>Verification success!</h2>\n        <p className=\"Module-popup-last\">\n          Your email was successfully verified! Click the 'X' button in the\n          top-right corner to return to the site, and you'll be able to login.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.REGISTER:\n        currentForm = createAccountForm;\n        break;\n      case HeaderState.REGISTER_VERIFY:\n        currentForm = verifyEmailForm;\n        break;\n      case HeaderState.REGISTER_SUCCESS:\n        currentForm = emailVerifiedBox;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      username: null,\n      destination: null,\n      screen: props.screen || HeaderState.LOGIN\n    }\n\n    this.close = this.close.bind(this);\n    this.login = this.login.bind(this);\n    this.enablePasswordRecovery = this.enablePasswordRecovery.bind(this);\n    this.forgotPassword = this.forgotPassword.bind(this);\n    this.resetPassword = this.resetPassword.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback(false);\n  }\n\n  async setError(message) {\n    await Utils.setStatePromise(this, {\n      error: `Error: ${message}`\n    });\n  }\n\n  async setSuccess(message) {\n    await Utils.setStatePromise(this, {\n      error: '',\n      success: message\n    });\n  }\n\n  async login(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const password = form.password.value;\n\n    if(!username || !password)\n      await this.setError(\"Please fill out all of the fields.\")\n\n    try {\n      try {\n        await UserAuthApi.login(username, password);\n        this.props.exitCallback(true);\n      }\n      catch(err) {\n        if(err.code === 'UserNotConfirmedException') {\n          const destination = await UserAuthApi.resendVerificationEmail(username);\n          await this.props.emailVerificationCallback(username, destination);\n        }\n        else {\n          throw err;\n        }\n      }\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async enablePasswordRecovery(event) {\n    await Utils.setStatePromise(this, {\n      error: '',\n      screen: HeaderState.RECOVERY_USERNAME\n    });\n  }\n\n  async forgotPassword(event) {\n    event.preventDefault();\n\n    const username = event.target.username.value;\n    if(!username) {\n      this.setError('Please input your username.');\n      return;\n    }\n\n    try {\n      const destination = await UserAuthApi.forgotPassword(username);\n      Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.RECOVERY_PASSWORD\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async resetPassword(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const code = form.code.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!code || !password || !confirmPassword) {\n      this.setError('Please fill out all of the fields.');\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      await UserAuthApi.resetPassword(this.state.username, code, password);\n      await Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.RECOVERY_SUCCESS\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.forgotPassword(this.state.username);\n      await this.setSuccess('Another email has been sent!');\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  render() {\n    const loginForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Login to your account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.login}>\n          <label htmlFor=\"login-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"login-username\" id=\"login-username\" />\n\n          <label htmlFor=\"login-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"login-password\" id=\"login-password\" />\n\n          <button type=\"button\" onClick={this.enablePasswordRecovery}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Forgot your password?\n          </button>\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Login\" />\n        </form>\n      </div>\n    );\n\n    const recoveryUsernameForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          Please provide your username or email, so that you can reset your\n          password via an emailed confirmation code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.forgotPassword}>\n          <label htmlFor=\"reset-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"reset-username\" id=\"reset-username\" />\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          You should've received an email at { this.state.destination } with a\n          verification code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.resetPassword}>\n          <label htmlFor=\"reset-code\">Code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"reset-code\" id=\"reset-code\" />\n\n          <label htmlFor=\"reset-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"reset-password\" id=\"reset-password\" />\n\n          <label htmlFor=\"reset-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 key=\"reset-confirm-password\" id=\"reset-confirm-password\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordSuccess= (\n      <div className=\"Register-form Module-popup\">\n        <h2>Password reset success!</h2>\n        <p className=\"Module-popup-last\">\n          Your password has been reset successfully. You'll now be able to\n          login again.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.LOGIN:\n        currentForm = loginForm;\n        break;\n      case HeaderState.RECOVERY_USERNAME:\n        currentForm = recoveryUsernameForm;\n        break;\n      case HeaderState.RECOVERY_PASSWORD:\n        currentForm = recoveryPasswordForm;\n        break;\n      case HeaderState.RECOVERY_SUCCESS:\n        currentForm = recoveryPasswordSuccess;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/UserMenu.css'\n\nclass UserMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = this.logout.bind(this);\n  }\n\n  async logout() {\n    await UserAuthApi.logout();\n    await this.props.logoutCallback();\n  }\n\n  render() {\n    return (\n      <div className=\"User-menu\">\n        <ol>\n          <li>\n            <Link className=\"Header-menu-button\" onClick={this.props.closeCallback}\n                  to={`/users/${this.props.username}`}>\n                  Your profile\n            </Link>\n          </li>\n          <div className=\"User-menu-divider\"></div>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\">\n              Settings\n            </button>\n          </li>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\" onClick={this.logout}>\n              Logout\n            </button>\n          </li>\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default UserMenu;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport UserMenu from './UserMenu';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nclass HeaderAuth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      showRegisterForm: false,\n      showLoginForm: false,\n      showUserMenu: false,\n      unverifiedAccountUsername: null,\n      unverifiedAccountDestination: null\n    };\n\n    this.refreshUsername = this.refreshUsername.bind(this);\n    this.toggleRegisterForm = this.toggleRegisterForm.bind(this);\n    this.toggleLoginForm = this.toggleLoginForm.bind(this);\n    this.toggleUserMenu = this.toggleUserMenu.bind(this);\n    this.hideUserMenu = this.hideUserMenu.bind(this);\n    this.afterLogin = this.afterLogin.bind(this);\n    this.unverifiedAccount = this.unverifiedAccount.bind(this);\n  }\n\n  async refreshUsername() {\n    const username = await UserAuthApi.getUsername();\n\n    await Utils.setStatePromise(this, {\n      username: username,\n      showUserMenu: false,\n      unverifiedAccountUsername: null\n    });\n  }\n\n  async componentDidMount() {\n    await this.refreshUsername();\n  }\n\n  async toggleRegisterForm(event) {\n    if(this.state.showRegisterForm) {\n      await Utils.setStatePromise(this, {\n        unverifiedAccountUsername: null,\n        unverifiedAccountDestination: null\n      });\n    }\n\n    await Utils.setStatePromise(this, {\n      showRegisterForm: !this.state.showRegisterForm\n    });\n  }\n\n  async toggleLoginForm(event) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: !this.state.showLoginForm\n    });\n  }\n\n  async toggleUserMenu(event) {\n    await Utils.setStatePromise(this, {\n      showUserMenu: !this.state.showUserMenu\n    });\n  }\n\n  async hideUserMenu(event) {\n    const focusedElement = event.relatedTarget;\n    console.log(focusedElement);\n    if(focusedElement && focusedElement.classList.contains('Header-menu-button'))\n      return;\n\n    await Utils.setStatePromise(this, {\n      showUserMenu: false\n    });\n  }\n\n  async afterLogin(loggedIn) {\n    await this.toggleLoginForm();\n\n    if(loggedIn)\n      await this.refreshUsername();\n  }\n\n  async unverifiedAccount(username, destination) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: false,\n      showRegisterForm: true,\n      unverifiedAccountUsername: username,\n      unverifiedAccountDestination: destination\n    });\n  }\n\n  render() {\n    const loginButtons = (\n      <div className=\"Header-top-right\">\n        <button className=\"Header-menu-button\" onClick={this.toggleLoginForm}>\n          Login\n        </button>\n        <span className=\"Header-divider\"></span>\n        <button className=\"Header-menu-button\" onClick={this.toggleRegisterForm}>\n          Create an account\n        </button>\n      </div>\n    );\n\n    const loggedInButton = (\n      <div className=\"Header-logged-in\" tabIndex=\"-1\"\n           onBlur={this.hideUserMenu}>\n        <div className=\"Header-top-right\">\n          <button className=\"Header-menu-button\" onClick={this.toggleUserMenu}>\n            { this.state.username }\n          </button>\n        </div>\n        <div className=\"Header-user-menu\">\n          {\n            this.state.showUserMenu &&\n            <UserMenu username={this.state.username}\n                      closeCallback={this.toggleUserMenu}\n                      logoutCallback={this.refreshUsername} />\n          }\n        </div>\n      </div>\n    );\n\n    const topRightButtons = this.state.username ? loggedInButton : loginButtons;\n\n    return (\n      <>\n        {\n          this.state.showRegisterForm &&\n          <RegisterForm exitCallback={this.toggleRegisterForm}\n                        unverifiedAccountUsername=\n                        {this.state.unverifiedAccountUsername}\n                        unverifiedAccountDestination=\n                        {this.state.unverifiedAccountDestination} />\n        }\n        {\n          this.state.showLoginForm &&\n          <LoginForm exitCallback={this.afterLogin}\n                     emailVerificationCallback={this.unverifiedAccount} />\n        }\n        { topRightButtons }\n      </>\n    );\n  }\n}\n\nexport default HeaderAuth;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport HeaderAuth from './HeaderAuth';\nimport '../css/Header.css';\n\nfunction Header() {\n  const path = useLocation().pathname;\n  const small = (path === '/' || path === '/home');\n  const outerClassName = small ? 'Header' : 'Header-small';\n\n  return (\n    <div className={outerClassName}>\n      { small && <h1>cp-notes beta</h1> }\n      <ul>\n        <li>\n          <Link to=\"/home\">Home</Link>\n        </li>\n      </ul>\n      <HeaderAuth />\n      <span className=\"Header-bottom\"></span>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport '../css/CpNotes.css';\n\nclass CpNotes extends Component {\n  async componentDidMount() {\n    if(!window.MathJax)\n      return;\n\n    await window.MathJax.typesetPromise();\n  }\n\n  render() {\n    return (\n      <div className=\"Module-wrapper\">\n        <div className=\"Module-description Module-description-centered\">\n          <p>A work-in-progress web application for storing publicly\n          accessible competitive programming notes! \\[\\LaTeX\\]</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CpNotes;\n","import React from 'react';\nimport CpNotes from '../Home/CpNotes';\n\nfunction Home() {\n  return (\n    <>\n      <CpNotes />\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction UserInfo({ info }) {\n  return (\n    <>\n      <h2 className=\"Module-heading\">{info.username}</h2>\n      {\n        info.email &&\n        <p>Email: {info.email} (only visible to you)</p>\n      }\n    </>\n  );\n}\n\nexport default UserInfo;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport '../css/SearchSelect.css';\n\nconst MAX_OPTIONS = 10;\nconst GLOBAL_SORT_KEY = 'sk';\n\nclass SearchSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchTerm: '',\n      previousValidSearchTerm: '',\n      showOptions: false,\n      options: [],\n      filteredOptions: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleOptionSelect = this.handleOptionSelect.bind(this);\n  }\n\n  getOptionString(option) {\n    const optionStringArray = [];\n    for(const key of this.props.keys)\n      optionStringArray.push(option[key]);\n\n    return optionStringArray.join(' - ');\n  }\n\n  async filterOptions() {\n    var filteredOptions = [];\n    const searchTerm = this.state.searchTerm.toLowerCase();\n\n    for(const option of this.state.options) {\n      if(filteredOptions.length === MAX_OPTIONS)\n        break;\n\n      const optionString = this.getOptionString(option);\n      if(optionString.toLowerCase().includes(searchTerm)) {\n        filteredOptions.push(option);\n        continue;\n      }\n\n      for(const key of this.props.keys) {\n        if(option[key].toLowerCase().includes(searchTerm)) {\n          filteredOptions.push(option);\n          break;\n        }\n      }\n    }\n\n    await Utils.setStatePromise(this, {\n      filteredOptions: filteredOptions\n    });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.staticKey && !this.props.staticKey) {\n      await Utils.setStatePromise(this, {\n        searchTerm: ''\n      });\n      return;\n    }\n\n    if(this.props.staticKey === prevProps.staticKey)\n      return;\n\n    await Utils.setStatePromise(this, {\n      searchTerm: '',\n      loading: true\n    });\n    const options = await this.props.search();\n\n    await Utils.setStatePromise(this, {\n      loading: false,\n      previousValidSearchTerm: '',\n      options: options,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleChange(event) {\n    await Utils.setStatePromise(this, {\n      searchTerm: event.target.value,\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleBlur(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.id === `Select-options-${this.props.name}`)\n      return;\n\n    await Utils.setStatePromise(this, {\n      showOptions: false,\n      searchTerm: this.state.previousValidSearchTerm\n    });\n  }\n\n  async handleFocus(event) {\n    await Utils.setStatePromise(this, {\n      showOptions: true\n    });\n  }\n\n  async handleOptionSelect(sortKey, optionString) {\n    await Utils.setStatePromise(this, {\n      searchTerm: optionString,\n      previousValidSearchTerm: optionString,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n    this.props.callback(sortKey);\n  }\n\n  render() {\n    var optionElements = [];\n    for(const option of this.state.filteredOptions) {\n      const optionString = this.getOptionString(option);\n      const displayString = option[this.props.displayKey];\n      const sortKey = option[GLOBAL_SORT_KEY];\n      optionElements.push(\n        <li onClick={() => this.handleOptionSelect(sortKey, displayString)}\n            key={sortKey}>\n            {optionString}\n        </li>\n      );\n    }\n\n    return (\n      <div onBlur={this.handleBlur} className=\"Search-select\">\n        <input className={this.state.loading ? \"Askd-form-loading\" : \"\"}\n               onChange={this.handleChange} autoComplete=\"off\" type=\"text\"\n               value={this.state.searchTerm} onFocus={this.handleFocus}\n               name={this.props.name} id={this.props.id}\n               disabled={!this.props.search || this.state.loading} />\n        {\n          optionElements.length > 0 && this.state.showOptions &&\n          <ol id={`Select-options-${this.props.name}`} tabIndex=\"-1\"\n              className=\"Search-select-options\">\n            { optionElements }\n          </ol>\n        }\n      </div>\n    );\n  }\n}\n\nexport default SearchSelect;\n","const ApiConstants = Object.freeze({\n  API_ENDPOINT: 'https://qqmeusmrfk.execute-api.us-east-1.amazonaws.com/prod/'\n});\n\nexport default ApiConstants;\n","import queryString from 'query-string';\nimport ApiConstants from './ApiConstants';\nimport UserAuthApi from './UserAuthApi';\n\nclass Api {\n  static async getJson(resource, options) {\n    const path = `${resource}?${queryString.stringify(options)}`;\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + path, {\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    if(response.status === 400) {\n      const responseJson = await response.json();\n\n      const err = Error(responseJson.message);\n      err.name = responseJson.name;\n      throw err;\n    }\n    else if(response.status !== 200) {\n      throw Error('Request failed!');\n    }\n\n    return await response.json();\n  }\n}\n\nexport default Api;\n","import Api from './Api';\n\nconst API_STORAGE_KEY = 'askdfjlas.github.io';\n\nclass ProblemsApi {\n  static localStorage = window.localStorage;\n  static problems = JSON.parse(ProblemsApi.localStorage.getItem(API_STORAGE_KEY)) || {};\n\n  static _updateStorage() {\n    ProblemsApi.localStorage.setItem(API_STORAGE_KEY, JSON.stringify(ProblemsApi.problems));\n  }\n\n  static async getContests(platform) {\n    const options = {\n      'platform': platform\n    };\n\n    return await Api.getJson('contests', options);\n  }\n\n  static async getProblems(platform, contestId) {\n    const options = {\n      'platform': platform,\n      'contestId': contestId\n    };\n\n    return await Api.getJson('problems', options);\n  }\n\n  static addProblem(problem) {\n    const fakeUuid = '' + (new Date()).getTime();\n    ProblemsApi.problems[fakeUuid] = problem;\n    ProblemsApi._updateStorage();\n\n    return fakeUuid;\n  }\n}\n\nexport default ProblemsApi;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport SearchSelect from '../SearchSelect/SearchSelect';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport '../css/AddProblemForm.css';\n\nclass AddProblemForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      platform: null,\n      contestSortKey: null,\n      problemSortKey: null,\n      skipContestSearch: false\n    };\n\n    this.close = this.close.bind(this);\n    this.handlePlatformChange = this.handlePlatformChange.bind(this);\n    this.toggleSkipContestSearch = this.toggleSkipContestSearch.bind(this);\n    this.updateProblemSortKey = this.updateProblemSortKey.bind(this);\n    this.updateContestSortKey = this.updateContestSortKey.bind(this);\n  }\n\n  close() {\n    this.props.callback(null);\n  }\n\n  async handlePlatformChange(event) {\n    await Utils.setStatePromise(this, {\n      platform: event.target.value\n    });\n  }\n\n  async toggleSkipContestSearch(event) {\n    await Utils.setStatePromise(this, {\n      skipContestSearch: !this.state.skipContestSearch,\n      contestSortKey: null,\n      problemSortKey: null\n    });\n  }\n\n  async updateContestSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      contestSortKey: sortKey\n    });\n  }\n\n  async updateProblemSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      problemSortKey: sortKey\n    });\n  }\n\n  render() {\n    var searchContestFunction = null;\n    var searchContestKey = null;\n    if(this.state.platform && !this.state.skipContestSearch) {\n      searchContestFunction = () => ProblemsApi.getContests(this.state.platform);\n      searchContestKey = this.state.platform;\n    }\n\n    var searchProblemFunction = null;\n    var searchProblemKey = null;\n    if(this.state.platform && this.state.contestSortKey) {\n      searchProblemFunction = () =>\n        ProblemsApi.getProblems(this.state.platform, this.state.contestSortKey);\n      searchProblemKey = this.state.platform + this.state.contestSortKey;\n    }\n    else if(this.state.platform && this.state.skipContestSearch) {\n      searchProblemFunction = () => ProblemsApi.getProblems(this.state.platform);\n      searchProblemKey = this.state.platform;\n    }\n\n    var skipButtonText = this.state.skipContestSearch ?\n                         'Want to filter by contest?' :\n                         'Want to skip filtering by contest?';\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">\n                X\n        </button>\n        <div className=\"Add-problem-form Module-popup\">\n          <h2>Add a problem!</h2>\n          <form className=\"Askd-form\" onSubmit={this.addProblem}>\n            <label htmlFor=\"cp-platform\">Platform</label>\n            <select defaultValue=\"\" onChange={this.handlePlatformChange}\n                    name=\"platform\" id=\"cp-platform\">\n              <option disabled value=\"\"></option>\n              <option value=\"CodeForces\">CodeForces</option>\n              <option value=\"CodeChef\">CodeChef</option>\n            </select>\n\n            <label htmlFor=\"cp-contest\">Contest</label>\n            <SearchSelect name='contest' id='cp-contest' search={searchContestFunction}\n                          keys={['sk', 'name']} callback={this.updateContestSortKey}\n                          displayKey='name' staticKey={searchContestKey} />\n\n            <button onClick={this.toggleSkipContestSearch}\n                    type=\"button\" className=\"Askd-form-link Askd-form-link-separator\">\n              { skipButtonText }\n            </button>\n\n            <label htmlFor=\"cp-title\">Problem</label>\n            <SearchSelect name='title' id='cp-title' search={searchProblemFunction}\n                          keys={['sk', 'name']} callback={this.updateProblemSortKey}\n                          displayKey='name' staticKey={searchProblemKey} />\n\n            <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                   value=\"Add Problem\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddProblemForm;\n","import React, { Component } from 'react';\nimport AddProblemForm from './AddProblemForm';\nimport Utils from '../Utils';\n\nclass UserProblems extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAddProblemForm: false\n    };\n\n    this.toggleAddProblemForm = this.toggleAddProblemForm.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  async toggleAddProblemForm() {\n    Utils.setStatePromise(this, {\n      showAddProblemForm: !this.state.showAddProblemForm\n    });\n  }\n\n  async addProblem(problemKey) {\n    await this.toggleAddProblemForm();\n    if(!problemKey)\n      return;\n  }\n\n  render() {\n    return (\n      <>\n        <h2 className=\"Module-heading\">Problems</h2>\n        {\n          this.state.showAddProblemForm &&\n          <AddProblemForm callback={this.addProblem} />\n        }\n        <div className=\"Cp-notes Module-space\">\n          <p>There's nothing to see here yet!</p>\n          {\n            this.props.info.email &&\n            <button onClick={this.toggleAddProblemForm}\n                    className=\"Cp-notes-add Askd-button Askd-button-circular\">\n              +\n            </button>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProblems;\n","import Api from './Api';\n\nclass UserApi {\n  static async getUserInfo(username) {\n    const options = {\n      'username': username\n    };\n\n    return await Api.getJson('profile', options);\n  }\n}\n\nexport default UserApi;\n","const UserProfileState = Object.freeze({\n  LOADING: 0,\n  DONE: 1,\n  NOT_FOUND: 2\n});\n\nexport default UserProfileState;\n","import React, { Component } from 'react';\nimport UserInfo from './UserInfo';\nimport UserProblems from './UserProblems';\nimport UserApi from '../Api/UserApi';\nimport UserInfoState from './UserInfoState';\nimport Utils from '../Utils';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: UserInfoState.LOADING,\n      info: null\n    };\n  }\n\n  async loadUserInfo() {\n    try {\n      const username = this.props.match.params.username;\n      const info = await UserApi.getUserInfo(username);\n      await Utils.setStatePromise(this, {\n        screen: UserInfoState.DONE,\n        info: info\n      });\n    }\n    catch(err) {\n      if(err.name === 'UserNotFound') {\n        await Utils.setStatePromise(this, {\n          screen: UserInfoState.NOT_FOUND\n        });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadUserInfo();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.match.params.username !== this.props.match.params.username) {\n      await Utils.setStatePromise(this, {\n        screen: UserInfoState.LOADING,\n        info: null\n      });\n      await this.loadUserInfo();\n    }\n  }\n\n  render() {\n    const loadingContent = null;\n    const loadedContent = (\n      <>\n        <div className=\"Module-description\">\n          <UserInfo info={this.state.info} />\n        </div>\n        <UserProblems info={this.state.info} />\n      </>\n    );\n    const userNotFoundContent = (\n      <div className=\"Module-description\">\n        <h2>User not found!</h2>\n      </div>\n    );\n\n    var content;\n    switch(this.state.screen) {\n      case UserInfoState.LOADING:\n        content = loadingContent;\n        break;\n      case UserInfoState.DONE:\n        content = loadedContent;\n        break;\n      case UserInfoState.NOT_FOUND:\n        content = userNotFoundContent;\n        break;\n      default:\n    }\n\n    return (\n      <>\n        <div className=\"Module-wrapper\">\n          { content }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './Header/Header';\nimport Home from './Home/Home';\nimport UserProfile from './UserProfile/UserProfile';\n\nimport './css/App.css';\nimport './css/Module.css';\nimport './css/Form.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/users/:username\" component={UserProfile} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Amplify from 'aws-amplify';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport amplify_config from './amplify_config';\n\nAmplify.configure(amplify_config);\n\ndocument.body.addEventListener('mousedown', (event) => {\n  document.body.classList.add('Global-mouse-click');\n});\n\ndocument.body.addEventListener('keydown', (event) => {\n  if(event.keyCode === 9) {\n    document.body.classList.remove('Global-mouse-click');\n  }\n});\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}