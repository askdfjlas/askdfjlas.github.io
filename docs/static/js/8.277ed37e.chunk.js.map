{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-radio-button_2.entry.js","../node_modules/@aws-amplify/ui-components/dist/esm-es5/auth-helpers-2fada98e.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","AmplifyRadioButton","hostRef","registerInstance","placeholder","checked","disabled","prototype","render","h","class","Object","assign","type","name","onInput","handleInputChange","id","fieldId","inputProps","htmlFor","style","canPromise","toString","isarray","Array","isArray","arr","Buffer","TYPED_ARRAY_SUPPORT","Uint8Array","__proto__","foo","typedArraySupport","K_MAX_LENGTH","arg","offset","allocUnsafe","that","ArrayBuffer","array","byteOffset","byteLength","RangeError","buf","undefined","fromArrayLike","fromArrayBuffer","string","createBuffer","actual","write","slice","fromString","obj","isBuffer","len","copy","buffer","val","data","fromObject","from","size","i","utf8ToBytes","units","codePoint","Infinity","leadSurrogate","bytes","charCodeAt","Error","isView","species","defineProperty","configurable","enumerable","writable","isFinite","remaining","src","dst","blitBuffer","utf8Write","start","end","newBuf","subarray","sliceLen","target","targetStart","set","fill","code","concat","list","pos","_isBuffer","b","toSJISFunction","typedarrayBuffer","CODEWORDS_COUNT","utils","version","digit","kanji","createCommonjsModule","fn","basedir","module","path","exports","require","base","commonjsRequire","errorCorrectionLevel","L","bit","M","Q","H","isValid","level","defaultValue","toLowerCase","BitBuffer","get","index","bufIndex","Math","floor","put","num","putBit","getLengthInBits","bitBuffer","BitMatrix","reservedBit","row","col","reserved","xor","isReserved","bitMatrix","alignmentPattern","getSymbolSize","getRowColCoords","posCount","intervals","ceil","positions","reverse","getPositions","coords","posLength","j","getSymbolSize$1","finderPattern","maskPattern","Patterns","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PenaltyScores","getMaskAt","mask","isNaN","parseInt","getPenaltyN1","points","sameCountCol","sameCountRow","lastCol","lastRow","getPenaltyN2","last","getPenaltyN3","bitsCol","bitsRow","getPenaltyN4","darkCount","modulesCount","abs","applyMask","pattern","getBestMask","setupFormatFunc","numPatterns","keys","bestPattern","lowerPenalty","p","penalty","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","errorCorrectionCode","errorCorrectionLevel$1","EXP_TABLE","LOG_TABLE","x","galoisField","polynomial","mul","p1","p2","coeff","mod","divident","divisor","generateECPolynomial","degree","poly","Buffer$1","ReedSolomonEncoder","genPoly","initialize","encode","pad","paddedData","remainder","buff","reedSolomonEncoder","versionCheck","byte","replace","KANJI","RegExp","BYTE_KANJI","BYTE","NUMERIC","ALPHANUMERIC","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","regex","testKanji","str","test","testNumeric","testAlphanumeric","mode","ccBits","MIXED","getCharCountIndicator","getBestModeForData","dataStr","G18_BCH","getReservedBitsCount","mode$1","getTotalBitsFromDataArray","segments","totalBits","forEach","reservedBits","getBitsLength","getCapacity","dataTotalCodewordsBits","usableBits","getBestVersionForData","seg","ecl","currentVersion","getBestVersionForMixedData","getBestVersionForDataLength","getLength","getEncodedBits","d","G15_BCH","formatInfo","NumericData","group","substr","remainingNum","numericData","ALPHA_NUM_CHARS","AlphanumericData","indexOf","alphanumericData","ByteData","l","byteData","KanjiData","kanjiData","dijkstra_1","dijkstra","single_source_shortest_paths","graph","s","predecessors","costs","closest","u","cost_of_s_to_u","adjacent_nodes","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","open","PriorityQueue","make","empty","cost","hasOwnProperty","msg","join","extract_shortest_path_from_predecessor_list","nodes","find_path","opts","key","T","queue","sorter","default_sorter","a","item","sort","shift","getStringByteLength","unescape","encodeURIComponent","getSegments","exec","getSegmentsFromString","byteSegs","kanjiSegs","numSegs","alphaNumSegs","s1","s2","map","getSegmentBitsLength","buildSingleSegment","modesHint","bestMode","fromArray","reduce","acc","table","prevNodeIds","nodeGroup","currentNodeIds","node","lastCount","prevNodeId","buildGraph","segs","buildNodes","optimizedSegs","curr","prevSeg","mergeSegments","rawSplit","setupFormatInfo","matrix","bits","createData","remainingByte","totalCodewords","ecTotalCodewords","dataTotalCodewords","ecTotalBlocks","blocksInGroup1","totalCodewordsInGroup1","dataCodewordsInGroup1","dataCodewordsInGroup2","ecCount","rs","dcData","ecData","maxDataSize","dataSize","max","r","createCodewords","createSymbol","version$1","maskPattern$1","segments$1","estimatedVersion","rawSegments","bestVersion","dataBits","moduleCount","modules","c","setupFinderPattern","setupTimingPattern","setupAlignmentPattern","setupVersionInfo","inc","bitIndex","byteIndex","dark","setupData","bind","qrcode","options","toSJISFunc","utils$1","hex2rgba","hex","hexCode","split","hexValue","getOptions","color","margin","width","scale","light","rendererOpts","getScale","qrSize","getImageWidth","qrToImageData","imgData","qr","symbolSize","scaledMargin","palette","posDst","pxColor","canvas","qrData","canvasEl","getContext","document","createElement","getCanvasElement","ctx","image","createImageData","clearRect","height","clearCanvas","putImageData","renderToDataURL","toDataURL","quality","getColorAttrib","attrib","alpha","toFixed","svgCmd","cmd","svgTag","cb","qrcodesize","bg","moveBy","newRow","lineLength","qrToPath","viewBox","renderCanvas","renderFunc","text","args","arguments","argsNum","isLastArgCb","browser","create","toCanvas","logger","Logger","AmplifyTOTPSetup","class_1","autoFocus","handleAuthStateChange","dispatchAuthStateChangeEvent","headerText","Translations","TOTP_HEADER_TEXT","issuer","TOTP_ISSUER","setupMessage","qrCodeInput","loading","componentWillLoad","setup","buildOtpAuthPath","user","secretKey","username","onTOTPEvent","event","_a","debug","SETUP_TOTP","SUCCESS","checkContact","handleTotpInputChange","generateQRCode","codeFromTotp","error_1","_b","qrCodeImageSource","dispatchToastHubEvent","encodedIssuer","error_2","encodeURI","I18n","Auth","setupTOTP","NO_AUTH_MODULE_FOUND","TOTP_SETUP_FAILURE","verifyTotpToken","error_3","preventDefault","setPreferredMFA","MfaOption","TOTP","TOTP_SUCCESS_MESSAGE","error","_this","submitButtonText","TOTP_SUBMIT_BUTTON_TEXT","handleSubmit","alt","QR_CODE_ALT","TOTP_LABEL","newUser","verifiedContact","isEmpty","verified","unverified","AuthState","SignedIn","VerifyContact","handleSignIn","password","signIn","challengeName","ChallengeName","SMSMFA","SoftwareTokenMFA","ConfirmSignIn","NewPasswordRequired","challengeParam","ResetPassword","MFASetup","TOTPSetup","CustomChallenge","trigger","CustomConfirmSignIn","ConfirmSignUp","ForgotPassword"],"mappings":"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","file":"static/js/8.277ed37e.chunk.js","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { r as registerInstance, h } from './index-39969785.js';\nimport { Logger, I18n } from '@aws-amplify/core';\nimport { M as MfaOption } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { T as Translations } from './Translations-392acb9b.js';\nimport { S as SETUP_TOTP, i as SUCCESS, N as NO_AUTH_MODULE_FOUND } from './constants-d1abe7de.js';\nimport { d as dispatchAuthStateChangeEvent, a as dispatchToastHubEvent } from './helpers-01ecf5f9.js';\nimport { c as checkContact } from './auth-helpers-2fada98e.js';\nimport buffer from 'buffer';\nvar amplifyRadioButtonCss = \":host{--font-family:var(--amplify-font-family)}.radio-button{display:block;width:100%;padding:16px;font-size:var(--amplify-text-sm);font-family:var(--font-family)}.radio-button input{margin-right:12px}\";\nvar AmplifyRadioButton = /** @class */ (function () {\n    function AmplifyRadioButton(hostRef) {\n        registerInstance(this, hostRef);\n        /** (Optional) The placeholder for the input element.  Using hints is recommended, but placeholders can also be useful to convey information to users. */\n        this.placeholder = '';\n        /** If `true`, the radio button is selected. */\n        this.checked = false;\n        /** If `true`, the checkbox is disabled */\n        this.disabled = false;\n    }\n    AmplifyRadioButton.prototype.render = function () {\n        return (h(\"span\", { class: \"radio-button\" }, h(\"input\", Object.assign({ type: \"radio\", name: this.name, value: this.value, onInput: this.handleInputChange, placeholder: this.placeholder, id: this.fieldId, checked: this.checked, disabled: this.disabled }, this.inputProps)), h(\"amplify-label\", { htmlFor: this.fieldId }, this.label)));\n    };\n    return AmplifyRadioButton;\n}());\nAmplifyRadioButton.style = amplifyRadioButtonCss;\n// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\nvar canPromise = function () {\n    return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then;\n};\nvar toString = {}.toString;\nvar isarray = Array.isArray || function (arr) {\n    return toString.call(arr) == '[object Array]';\n};\nfunction typedArraySupport() {\n    // Can typed array instances be augmented?\n    try {\n        var arr = new Uint8Array(1);\n        arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42; } };\n        return arr.foo() === 42;\n    }\n    catch (e) {\n        return false;\n    }\n}\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport();\nvar K_MAX_LENGTH = Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff;\nfunction Buffer(arg, offset, length) {\n    if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n        return new Buffer(arg, offset, length);\n    }\n    if (typeof arg === 'number') {\n        return allocUnsafe(this, arg);\n    }\n    return from(this, arg, offset, length);\n}\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n    Buffer.prototype.__proto__ = Uint8Array.prototype;\n    Buffer.__proto__ = Uint8Array;\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    if (typeof Symbol !== 'undefined' && Symbol.species &&\n        Buffer[Symbol.species] === Buffer) {\n        Object.defineProperty(Buffer, Symbol.species, {\n            value: null,\n            configurable: true,\n            enumerable: false,\n            writable: false\n        });\n    }\n}\nfunction checked(length) {\n    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= K_MAX_LENGTH) {\n        throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n            'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');\n    }\n    return length | 0;\n}\nfunction isnan(val) {\n    return val !== val; // eslint-disable-line no-self-compare\n}\nfunction createBuffer(that, length) {\n    var buf;\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        buf = new Uint8Array(length);\n        buf.__proto__ = Buffer.prototype;\n    }\n    else {\n        // Fallback: Return an object instance of the Buffer class\n        buf = that;\n        if (buf === null) {\n            buf = new Buffer(length);\n        }\n        buf.length = length;\n    }\n    return buf;\n}\nfunction allocUnsafe(that, size) {\n    var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n    if (!Buffer.TYPED_ARRAY_SUPPORT) {\n        for (var i = 0; i < size; ++i) {\n            buf[i] = 0;\n        }\n    }\n    return buf;\n}\nfunction fromString(that, string) {\n    var length = byteLength(string) | 0;\n    var buf = createBuffer(that, length);\n    var actual = buf.write(string);\n    if (actual !== length) {\n        // Writing a hex string, for example, that contains invalid characters will\n        // cause everything after the first invalid character to be ignored. (e.g.\n        // 'abxxcd' will be treated as 'ab')\n        buf = buf.slice(0, actual);\n    }\n    return buf;\n}\nfunction fromArrayLike(that, array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0;\n    var buf = createBuffer(that, length);\n    for (var i = 0; i < length; i += 1) {\n        buf[i] = array[i] & 255;\n    }\n    return buf;\n}\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError('\\'offset\\' is out of bounds');\n    }\n    if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError('\\'length\\' is out of bounds');\n    }\n    var buf;\n    if (byteOffset === undefined && length === undefined) {\n        buf = new Uint8Array(array);\n    }\n    else if (length === undefined) {\n        buf = new Uint8Array(array, byteOffset);\n    }\n    else {\n        buf = new Uint8Array(array, byteOffset, length);\n    }\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        buf.__proto__ = Buffer.prototype;\n    }\n    else {\n        // Fallback: Return an object instance of the Buffer class\n        buf = fromArrayLike(that, buf);\n    }\n    return buf;\n}\nfunction fromObject(that, obj) {\n    if (Buffer.isBuffer(obj)) {\n        var len = checked(obj.length) | 0;\n        var buf = createBuffer(that, len);\n        if (buf.length === 0) {\n            return buf;\n        }\n        obj.copy(buf, 0, 0, len);\n        return buf;\n    }\n    if (obj) {\n        if ((typeof ArrayBuffer !== 'undefined' &&\n            obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n            if (typeof obj.length !== 'number' || isnan(obj.length)) {\n                return createBuffer(that, 0);\n            }\n            return fromArrayLike(that, obj);\n        }\n        if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n            return fromArrayLike(that, obj.data);\n        }\n    }\n    throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\nfunction utf8ToBytes(string, units) {\n    units = units || Infinity;\n    var codePoint;\n    var length = string.length;\n    var leadSurrogate = null;\n    var bytes = [];\n    for (var i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i);\n        // is surrogate component\n        if (codePoint > 0xD7FF && codePoint < 0xE000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xDBFF) {\n                    // unexpected trail\n                    if ((units -= 3) > -1)\n                        bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1)\n                        bytes.push(0xEF, 0xBF, 0xBD);\n                    continue;\n                }\n                // valid lead\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // 2 leads in a row\n            if (codePoint < 0xDC00) {\n                if ((units -= 3) > -1)\n                    bytes.push(0xEF, 0xBF, 0xBD);\n                leadSurrogate = codePoint;\n                continue;\n            }\n            // valid surrogate pair\n            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n        }\n        else if (leadSurrogate) {\n            // valid bmp char, but last char was a lead\n            if ((units -= 3) > -1)\n                bytes.push(0xEF, 0xBF, 0xBD);\n        }\n        leadSurrogate = null;\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0)\n                break;\n            bytes.push(codePoint);\n        }\n        else if (codePoint < 0x800) {\n            if ((units -= 2) < 0)\n                break;\n            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n        }\n        else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0)\n                break;\n            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        }\n        else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0)\n                break;\n            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n        }\n        else {\n            throw new Error('Invalid code point');\n        }\n    }\n    return bytes;\n}\nfunction byteLength(string) {\n    if (Buffer.isBuffer(string)) {\n        return string.length;\n    }\n    if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n        (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n        return string.byteLength;\n    }\n    if (typeof string !== 'string') {\n        string = '' + string;\n    }\n    var len = string.length;\n    if (len === 0)\n        return 0;\n    return utf8ToBytes(string).length;\n}\nfunction blitBuffer(src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n        if ((i + offset >= dst.length) || (i >= src.length))\n            break;\n        dst[i + offset] = src[i];\n    }\n    return i;\n}\nfunction utf8Write(buf, string, offset, length) {\n    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\nfunction from(that, value, offset, length) {\n    if (typeof value === 'number') {\n        throw new TypeError('\"value\" argument must not be a number');\n    }\n    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n        return fromArrayBuffer(that, value, offset, length);\n    }\n    if (typeof value === 'string') {\n        return fromString(that, value);\n    }\n    return fromObject(that, value);\n}\nBuffer.prototype.write = function write(string, offset, length) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, encoding)\n    }\n    else if (length === undefined && typeof offset === 'string') {\n        length = this.length;\n        offset = 0;\n        // Buffer#write(string, offset[, length])\n    }\n    else if (isFinite(offset)) {\n        offset = offset | 0;\n        if (isFinite(length)) {\n            length = length | 0;\n        }\n        else {\n            length = undefined;\n        }\n    }\n    var remaining = this.length - offset;\n    if (length === undefined || length > remaining)\n        length = remaining;\n    if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n        throw new RangeError('Attempt to write outside buffer bounds');\n    }\n    return utf8Write(this, string, offset, length);\n};\nBuffer.prototype.slice = function slice(start, end) {\n    var len = this.length;\n    start = ~~start;\n    end = end === undefined ? len : ~~end;\n    if (start < 0) {\n        start += len;\n        if (start < 0)\n            start = 0;\n    }\n    else if (start > len) {\n        start = len;\n    }\n    if (end < 0) {\n        end += len;\n        if (end < 0)\n            end = 0;\n    }\n    else if (end > len) {\n        end = len;\n    }\n    if (end < start)\n        end = start;\n    var newBuf;\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        newBuf = this.subarray(start, end);\n        // Return an augmented `Uint8Array` instance\n        newBuf.__proto__ = Buffer.prototype;\n    }\n    else {\n        var sliceLen = end - start;\n        newBuf = new Buffer(sliceLen, undefined);\n        for (var i = 0; i < sliceLen; ++i) {\n            newBuf[i] = this[i + start];\n        }\n    }\n    return newBuf;\n};\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!start)\n        start = 0;\n    if (!end && end !== 0)\n        end = this.length;\n    if (targetStart >= target.length)\n        targetStart = target.length;\n    if (!targetStart)\n        targetStart = 0;\n    if (end > 0 && end < start)\n        end = start;\n    // Copy 0 bytes; we're done\n    if (end === start)\n        return 0;\n    if (target.length === 0 || this.length === 0)\n        return 0;\n    // Fatal error conditions\n    if (targetStart < 0) {\n        throw new RangeError('targetStart out of bounds');\n    }\n    if (start < 0 || start >= this.length)\n        throw new RangeError('sourceStart out of bounds');\n    if (end < 0)\n        throw new RangeError('sourceEnd out of bounds');\n    // Are we oob?\n    if (end > this.length)\n        end = this.length;\n    if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start;\n    }\n    var len = end - start;\n    var i;\n    if (this === target && start < targetStart && targetStart < end) {\n        // descending copy from end\n        for (i = len - 1; i >= 0; --i) {\n            target[i + targetStart] = this[i + start];\n        }\n    }\n    else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n        // ascending copy from start\n        for (i = 0; i < len; ++i) {\n            target[i + targetStart] = this[i + start];\n        }\n    }\n    else {\n        Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n    }\n    return len;\n};\nBuffer.prototype.fill = function fill(val, start, end) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n        if (typeof start === 'string') {\n            start = 0;\n            end = this.length;\n        }\n        else if (typeof end === 'string') {\n            end = this.length;\n        }\n        if (val.length === 1) {\n            var code = val.charCodeAt(0);\n            if (code < 256) {\n                val = code;\n            }\n        }\n    }\n    else if (typeof val === 'number') {\n        val = val & 255;\n    }\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError('Out of range index');\n    }\n    if (end <= start) {\n        return this;\n    }\n    start = start >>> 0;\n    end = end === undefined ? this.length : end >>> 0;\n    if (!val)\n        val = 0;\n    var i;\n    if (typeof val === 'number') {\n        for (i = start; i < end; ++i) {\n            this[i] = val;\n        }\n    }\n    else {\n        var bytes = Buffer.isBuffer(val)\n            ? val\n            : new Buffer(val);\n        var len = bytes.length;\n        for (i = 0; i < end - start; ++i) {\n            this[i + start] = bytes[i % len];\n        }\n    }\n    return this;\n};\nBuffer.concat = function concat(list, length) {\n    if (!isarray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n    if (list.length === 0) {\n        return createBuffer(null, 0);\n    }\n    var i;\n    if (length === undefined) {\n        length = 0;\n        for (i = 0; i < list.length; ++i) {\n            length += list[i].length;\n        }\n    }\n    var buffer = allocUnsafe(null, length);\n    var pos = 0;\n    for (i = 0; i < list.length; ++i) {\n        var buf = list[i];\n        if (!Buffer.isBuffer(buf)) {\n            throw new TypeError('\"list\" argument must be an Array of Buffers');\n        }\n        buf.copy(buffer, pos);\n        pos += buf.length;\n    }\n    return buffer;\n};\nBuffer.byteLength = byteLength;\nBuffer.prototype._isBuffer = true;\nBuffer.isBuffer = function isBuffer(b) {\n    return !!(b != null && b._isBuffer);\n};\nvar alloc = function (size) {\n    var buffer = new Buffer(size);\n    buffer.fill(0);\n    return buffer;\n};\nvar from_1 = function (data) {\n    return new Buffer(data);\n};\nvar typedarrayBuffer = {\n    alloc: alloc,\n    from: from_1\n};\nvar toSJISFunction;\nvar CODEWORDS_COUNT = [\n    0,\n    26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n    404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n    1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n    2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n];\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nvar getSymbolSize = function getSymbolSize(version) {\n    if (!version)\n        throw new Error('\"version\" cannot be null or undefined');\n    if (version < 1 || version > 40)\n        throw new Error('\"version\" should be in range from 1 to 40');\n    return version * 4 + 17;\n};\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nvar getSymbolTotalCodewords = function getSymbolTotalCodewords(version) {\n    return CODEWORDS_COUNT[version];\n};\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nvar getBCHDigit = function (data) {\n    var digit = 0;\n    while (data !== 0) {\n        digit++;\n        data >>>= 1;\n    }\n    return digit;\n};\nvar setToSJISFunction = function setToSJISFunction(f) {\n    if (typeof f !== 'function') {\n        throw new Error('\"toSJISFunc\" is not a valid function.');\n    }\n    toSJISFunction = f;\n};\nvar isKanjiModeEnabled = function () {\n    return typeof toSJISFunction !== 'undefined';\n};\nvar toSJIS = function toSJIS(kanji) {\n    return toSJISFunction(kanji);\n};\nvar utils = {\n    getSymbolSize: getSymbolSize,\n    getSymbolTotalCodewords: getSymbolTotalCodewords,\n    getBCHDigit: getBCHDigit,\n    setToSJISFunction: setToSJISFunction,\n    isKanjiModeEnabled: isKanjiModeEnabled,\n    toSJIS: toSJIS\n};\nfunction createCommonjsModule(fn, basedir, module) {\n    return module = {\n        path: basedir,\n        exports: {},\n        require: function (path, base) {\n            return commonjsRequire();\n        }\n    }, fn(module, module.exports), module.exports;\n}\nfunction commonjsRequire() {\n    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\nvar errorCorrectionLevel = createCommonjsModule(function (module, exports) {\n    exports.L = { bit: 1 };\n    exports.M = { bit: 0 };\n    exports.Q = { bit: 3 };\n    exports.H = { bit: 2 };\n    function fromString(string) {\n        if (typeof string !== 'string') {\n            throw new Error('Param is not a string');\n        }\n        var lcStr = string.toLowerCase();\n        switch (lcStr) {\n            case 'l':\n            case 'low':\n                return exports.L;\n            case 'm':\n            case 'medium':\n                return exports.M;\n            case 'q':\n            case 'quartile':\n                return exports.Q;\n            case 'h':\n            case 'high':\n                return exports.H;\n            default:\n                throw new Error('Unknown EC Level: ' + string);\n        }\n    }\n    exports.isValid = function isValid(level) {\n        return level && typeof level.bit !== 'undefined' &&\n            level.bit >= 0 && level.bit < 4;\n    };\n    exports.from = function from(value, defaultValue) {\n        if (exports.isValid(value)) {\n            return value;\n        }\n        try {\n            return fromString(value);\n        }\n        catch (e) {\n            return defaultValue;\n        }\n    };\n});\nfunction BitBuffer() {\n    this.buffer = [];\n    this.length = 0;\n}\nBitBuffer.prototype = {\n    get: function (index) {\n        var bufIndex = Math.floor(index / 8);\n        return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1;\n    },\n    put: function (num, length) {\n        for (var i = 0; i < length; i++) {\n            this.putBit(((num >>> (length - i - 1)) & 1) === 1);\n        }\n    },\n    getLengthInBits: function () {\n        return this.length;\n    },\n    putBit: function (bit) {\n        var bufIndex = Math.floor(this.length / 8);\n        if (this.buffer.length <= bufIndex) {\n            this.buffer.push(0);\n        }\n        if (bit) {\n            this.buffer[bufIndex] |= (0x80 >>> (this.length % 8));\n        }\n        this.length++;\n    }\n};\nvar bitBuffer = BitBuffer;\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix(size) {\n    if (!size || size < 1) {\n        throw new Error('BitMatrix size must be defined and greater than 0');\n    }\n    this.size = size;\n    this.data = typedarrayBuffer.alloc(size * size);\n    this.reservedBit = typedarrayBuffer.alloc(size * size);\n}\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n    var index = row * this.size + col;\n    this.data[index] = value;\n    if (reserved)\n        this.reservedBit[index] = true;\n};\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n    return this.data[row * this.size + col];\n};\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n    this.data[row * this.size + col] ^= value;\n};\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n    return this.reservedBit[row * this.size + col];\n};\nvar bitMatrix = BitMatrix;\nvar alignmentPattern = createCommonjsModule(function (module, exports) {\n    /**\n     * Alignment pattern are fixed reference pattern in defined positions\n     * in a matrix symbology, which enables the decode software to re-synchronise\n     * the coordinate mapping of the image modules in the event of moderate amounts\n     * of distortion of the image.\n     *\n     * Alignment patterns are present only in QR Code symbols of version 2 or larger\n     * and their number depends on the symbol version.\n     */\n    var getSymbolSize = utils.getSymbolSize;\n    /**\n     * Calculate the row/column coordinates of the center module of each alignment pattern\n     * for the specified QR Code version.\n     *\n     * The alignment patterns are positioned symmetrically on either side of the diagonal\n     * running from the top left corner of the symbol to the bottom right corner.\n     *\n     * Since positions are simmetrical only half of the coordinates are returned.\n     * Each item of the array will represent in turn the x and y coordinate.\n     * @see {@link getPositions}\n     *\n     * @param  {Number} version QR Code version\n     * @return {Array}          Array of coordinate\n     */\n    exports.getRowColCoords = function getRowColCoords(version) {\n        if (version === 1)\n            return [];\n        var posCount = Math.floor(version / 7) + 2;\n        var size = getSymbolSize(version);\n        var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;\n        var positions = [size - 7]; // Last coord is always (size - 7)\n        for (var i = 1; i < posCount - 1; i++) {\n            positions[i] = positions[i - 1] - intervals;\n        }\n        positions.push(6); // First coord is always 6\n        return positions.reverse();\n    };\n    /**\n     * Returns an array containing the positions of each alignment pattern.\n     * Each array's element represent the center point of the pattern as (x, y) coordinates\n     *\n     * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n     * and filtering out the items that overlaps with finder pattern\n     *\n     * @example\n     * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n     * The alignment patterns, therefore, are to be centered on (row, column)\n     * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n     * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n     * and are not therefore used for alignment patterns.\n     *\n     * var pos = getPositions(7)\n     * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n     *\n     * @param  {Number} version QR Code version\n     * @return {Array}          Array of coordinates\n     */\n    exports.getPositions = function getPositions(version) {\n        var coords = [];\n        var pos = exports.getRowColCoords(version);\n        var posLength = pos.length;\n        for (var i = 0; i < posLength; i++) {\n            for (var j = 0; j < posLength; j++) {\n                // Skip if position is occupied by finder patterns\n                if ((i === 0 && j === 0) || // top-left\n                    (i === 0 && j === posLength - 1) || // bottom-left\n                    (i === posLength - 1 && j === 0)) { // top-right\n                    continue;\n                }\n                coords.push([pos[i], pos[j]]);\n            }\n        }\n        return coords;\n    };\n});\nvar getSymbolSize$1 = utils.getSymbolSize;\nvar FINDER_PATTERN_SIZE = 7;\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nvar getPositions = function getPositions(version) {\n    var size = getSymbolSize$1(version);\n    return [\n        // top-left\n        [0, 0],\n        // top-right\n        [size - FINDER_PATTERN_SIZE, 0],\n        // bottom-left\n        [0, size - FINDER_PATTERN_SIZE]\n    ];\n};\nvar finderPattern = {\n    getPositions: getPositions\n};\nvar maskPattern = createCommonjsModule(function (module, exports) {\n    /**\n     * Data mask pattern reference\n     * @type {Object}\n     */\n    exports.Patterns = {\n        PATTERN000: 0,\n        PATTERN001: 1,\n        PATTERN010: 2,\n        PATTERN011: 3,\n        PATTERN100: 4,\n        PATTERN101: 5,\n        PATTERN110: 6,\n        PATTERN111: 7\n    };\n    /**\n     * Weighted penalty scores for the undesirable features\n     * @type {Object}\n     */\n    var PenaltyScores = {\n        N1: 3,\n        N2: 3,\n        N3: 40,\n        N4: 10\n    };\n    /**\n     * Check if mask pattern value is valid\n     *\n     * @param  {Number}  mask    Mask pattern\n     * @return {Boolean}         true if valid, false otherwise\n     */\n    exports.isValid = function isValid(mask) {\n        return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7;\n    };\n    /**\n     * Returns mask pattern from a value.\n     * If value is not valid, returns undefined\n     *\n     * @param  {Number|String} value        Mask pattern value\n     * @return {Number}                     Valid mask pattern or undefined\n     */\n    exports.from = function from(value) {\n        return exports.isValid(value) ? parseInt(value, 10) : undefined;\n    };\n    /**\n    * Find adjacent modules in row/column with the same color\n    * and assign a penalty value.\n    *\n    * Points: N1 + i\n    * i is the amount by which the number of adjacent modules of the same color exceeds 5\n    */\n    exports.getPenaltyN1 = function getPenaltyN1(data) {\n        var size = data.size;\n        var points = 0;\n        var sameCountCol = 0;\n        var sameCountRow = 0;\n        var lastCol = null;\n        var lastRow = null;\n        for (var row = 0; row < size; row++) {\n            sameCountCol = sameCountRow = 0;\n            lastCol = lastRow = null;\n            for (var col = 0; col < size; col++) {\n                var module = data.get(row, col);\n                if (module === lastCol) {\n                    sameCountCol++;\n                }\n                else {\n                    if (sameCountCol >= 5)\n                        points += PenaltyScores.N1 + (sameCountCol - 5);\n                    lastCol = module;\n                    sameCountCol = 1;\n                }\n                module = data.get(col, row);\n                if (module === lastRow) {\n                    sameCountRow++;\n                }\n                else {\n                    if (sameCountRow >= 5)\n                        points += PenaltyScores.N1 + (sameCountRow - 5);\n                    lastRow = module;\n                    sameCountRow = 1;\n                }\n            }\n            if (sameCountCol >= 5)\n                points += PenaltyScores.N1 + (sameCountCol - 5);\n            if (sameCountRow >= 5)\n                points += PenaltyScores.N1 + (sameCountRow - 5);\n        }\n        return points;\n    };\n    /**\n     * Find 2x2 blocks with the same color and assign a penalty value\n     *\n     * Points: N2 * (m - 1) * (n - 1)\n     */\n    exports.getPenaltyN2 = function getPenaltyN2(data) {\n        var size = data.size;\n        var points = 0;\n        for (var row = 0; row < size - 1; row++) {\n            for (var col = 0; col < size - 1; col++) {\n                var last = data.get(row, col) +\n                    data.get(row, col + 1) +\n                    data.get(row + 1, col) +\n                    data.get(row + 1, col + 1);\n                if (last === 4 || last === 0)\n                    points++;\n            }\n        }\n        return points * PenaltyScores.N2;\n    };\n    /**\n     * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n     * preceded or followed by light area 4 modules wide\n     *\n     * Points: N3 * number of pattern found\n     */\n    exports.getPenaltyN3 = function getPenaltyN3(data) {\n        var size = data.size;\n        var points = 0;\n        var bitsCol = 0;\n        var bitsRow = 0;\n        for (var row = 0; row < size; row++) {\n            bitsCol = bitsRow = 0;\n            for (var col = 0; col < size; col++) {\n                bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col);\n                if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D))\n                    points++;\n                bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row);\n                if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D))\n                    points++;\n            }\n        }\n        return points * PenaltyScores.N3;\n    };\n    /**\n     * Calculate proportion of dark modules in entire symbol\n     *\n     * Points: N4 * k\n     *\n     * k is the rating of the deviation of the proportion of dark modules\n     * in the symbol from 50% in steps of 5%\n     */\n    exports.getPenaltyN4 = function getPenaltyN4(data) {\n        var darkCount = 0;\n        var modulesCount = data.data.length;\n        for (var i = 0; i < modulesCount; i++)\n            darkCount += data.data[i];\n        var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10);\n        return k * PenaltyScores.N4;\n    };\n    /**\n     * Return mask value at given position\n     *\n     * @param  {Number} maskPattern Pattern reference value\n     * @param  {Number} i           Row\n     * @param  {Number} j           Column\n     * @return {Boolean}            Mask value\n     */\n    function getMaskAt(maskPattern, i, j) {\n        switch (maskPattern) {\n            case exports.Patterns.PATTERN000: return (i + j) % 2 === 0;\n            case exports.Patterns.PATTERN001: return i % 2 === 0;\n            case exports.Patterns.PATTERN010: return j % 3 === 0;\n            case exports.Patterns.PATTERN011: return (i + j) % 3 === 0;\n            case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n            case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0;\n            case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0;\n            case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0;\n            default: throw new Error('bad maskPattern:' + maskPattern);\n        }\n    }\n    /**\n     * Apply a mask pattern to a BitMatrix\n     *\n     * @param  {Number}    pattern Pattern reference number\n     * @param  {BitMatrix} data    BitMatrix data\n     */\n    exports.applyMask = function applyMask(pattern, data) {\n        var size = data.size;\n        for (var col = 0; col < size; col++) {\n            for (var row = 0; row < size; row++) {\n                if (data.isReserved(row, col))\n                    continue;\n                data.xor(row, col, getMaskAt(pattern, row, col));\n            }\n        }\n    };\n    /**\n     * Returns the best mask pattern for data\n     *\n     * @param  {BitMatrix} data\n     * @return {Number} Mask pattern reference number\n     */\n    exports.getBestMask = function getBestMask(data, setupFormatFunc) {\n        var numPatterns = Object.keys(exports.Patterns).length;\n        var bestPattern = 0;\n        var lowerPenalty = Infinity;\n        for (var p = 0; p < numPatterns; p++) {\n            setupFormatFunc(p);\n            exports.applyMask(p, data);\n            // Calculate penalty\n            var penalty = exports.getPenaltyN1(data) +\n                exports.getPenaltyN2(data) +\n                exports.getPenaltyN3(data) +\n                exports.getPenaltyN4(data);\n            // Undo previously applied mask\n            exports.applyMask(p, data);\n            if (penalty < lowerPenalty) {\n                lowerPenalty = penalty;\n                bestPattern = p;\n            }\n        }\n        return bestPattern;\n    };\n});\nvar EC_BLOCKS_TABLE = [\n    // L  M  Q  H\n    1, 1, 1, 1,\n    1, 1, 1, 1,\n    1, 1, 2, 2,\n    1, 2, 2, 4,\n    1, 2, 4, 4,\n    2, 4, 4, 4,\n    2, 4, 6, 5,\n    2, 4, 6, 6,\n    2, 5, 8, 8,\n    4, 5, 8, 8,\n    4, 5, 8, 11,\n    4, 8, 10, 11,\n    4, 9, 12, 16,\n    4, 9, 16, 16,\n    6, 10, 12, 18,\n    6, 10, 17, 16,\n    6, 11, 16, 19,\n    6, 13, 18, 21,\n    7, 14, 21, 25,\n    8, 16, 20, 25,\n    8, 17, 23, 25,\n    9, 17, 23, 34,\n    9, 18, 25, 30,\n    10, 20, 27, 32,\n    12, 21, 29, 35,\n    12, 23, 34, 37,\n    12, 25, 34, 40,\n    13, 26, 35, 42,\n    14, 28, 38, 45,\n    15, 29, 40, 48,\n    16, 31, 43, 51,\n    17, 33, 45, 54,\n    18, 35, 48, 57,\n    19, 37, 51, 60,\n    19, 38, 53, 63,\n    20, 40, 56, 66,\n    21, 43, 59, 70,\n    22, 45, 62, 74,\n    24, 47, 65, 77,\n    25, 49, 68, 81\n];\nvar EC_CODEWORDS_TABLE = [\n    // L  M  Q  H\n    7, 10, 13, 17,\n    10, 16, 22, 28,\n    15, 26, 36, 44,\n    20, 36, 52, 64,\n    26, 48, 72, 88,\n    36, 64, 96, 112,\n    40, 72, 108, 130,\n    48, 88, 132, 156,\n    60, 110, 160, 192,\n    72, 130, 192, 224,\n    80, 150, 224, 264,\n    96, 176, 260, 308,\n    104, 198, 288, 352,\n    120, 216, 320, 384,\n    132, 240, 360, 432,\n    144, 280, 408, 480,\n    168, 308, 448, 532,\n    180, 338, 504, 588,\n    196, 364, 546, 650,\n    224, 416, 600, 700,\n    224, 442, 644, 750,\n    252, 476, 690, 816,\n    270, 504, 750, 900,\n    300, 560, 810, 960,\n    312, 588, 870, 1050,\n    336, 644, 952, 1110,\n    360, 700, 1020, 1200,\n    390, 728, 1050, 1260,\n    420, 784, 1140, 1350,\n    450, 812, 1200, 1440,\n    480, 868, 1290, 1530,\n    510, 924, 1350, 1620,\n    540, 980, 1440, 1710,\n    570, 1036, 1530, 1800,\n    570, 1064, 1590, 1890,\n    600, 1120, 1680, 1980,\n    630, 1204, 1770, 2100,\n    660, 1260, 1860, 2220,\n    720, 1316, 1950, 2310,\n    750, 1372, 2040, 2430\n];\n/**\n * Returns the number of error correction block that the QR Code should contain\n * for the specified version and error correction level.\n *\n * @param  {Number} version              QR Code version\n * @param  {Number} errorCorrectionLevel Error correction level\n * @return {Number}                      Number of error correction blocks\n */\nvar getBlocksCount = function getBlocksCount(version, errorCorrectionLevel$1) {\n    switch (errorCorrectionLevel$1) {\n        case errorCorrectionLevel.L:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];\n        case errorCorrectionLevel.M:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];\n        case errorCorrectionLevel.Q:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];\n        case errorCorrectionLevel.H:\n            return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\n/**\n * Returns the number of error correction codewords to use for the specified\n * version and error correction level.\n *\n * @param  {Number} version              QR Code version\n * @param  {Number} errorCorrectionLevel Error correction level\n * @return {Number}                      Number of error correction codewords\n */\nvar getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel$1) {\n    switch (errorCorrectionLevel$1) {\n        case errorCorrectionLevel.L:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];\n        case errorCorrectionLevel.M:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];\n        case errorCorrectionLevel.Q:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];\n        case errorCorrectionLevel.H:\n            return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];\n        default:\n            return undefined;\n    }\n};\nvar errorCorrectionCode = {\n    getBlocksCount: getBlocksCount,\n    getTotalCodewordsCount: getTotalCodewordsCount\n};\nvar EXP_TABLE = typedarrayBuffer.alloc(512);\nvar LOG_TABLE = typedarrayBuffer.alloc(256);\n(function initTables() {\n    var x = 1;\n    for (var i = 0; i < 255; i++) {\n        EXP_TABLE[i] = x;\n        LOG_TABLE[x] = i;\n        x <<= 1; // multiply by 2\n        // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n        // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n        if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n            x ^= 0x11D;\n        }\n    }\n    // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n    // stay inside the bounds (because we will mainly use this table for the multiplication of\n    // two GF numbers, no more).\n    // @see {@link mul}\n    for (i = 255; i < 512; i++) {\n        EXP_TABLE[i] = EXP_TABLE[i - 255];\n    }\n}());\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nvar log = function log(n) {\n    if (n < 1)\n        throw new Error('log(' + n + ')');\n    return LOG_TABLE[n];\n};\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nvar exp = function exp(n) {\n    return EXP_TABLE[n];\n};\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nvar mul = function mul(x, y) {\n    if (x === 0 || y === 0)\n        return 0;\n    // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n    // @see {@link initTables}\n    return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]];\n};\nvar galoisField = {\n    log: log,\n    exp: exp,\n    mul: mul\n};\nvar polynomial = createCommonjsModule(function (module, exports) {\n    /**\n     * Multiplies two polynomials inside Galois Field\n     *\n     * @param  {Buffer} p1 Polynomial\n     * @param  {Buffer} p2 Polynomial\n     * @return {Buffer}    Product of p1 and p2\n     */\n    exports.mul = function mul(p1, p2) {\n        var coeff = typedarrayBuffer.alloc(p1.length + p2.length - 1);\n        for (var i = 0; i < p1.length; i++) {\n            for (var j = 0; j < p2.length; j++) {\n                coeff[i + j] ^= galoisField.mul(p1[i], p2[j]);\n            }\n        }\n        return coeff;\n    };\n    /**\n     * Calculate the remainder of polynomials division\n     *\n     * @param  {Buffer} divident Polynomial\n     * @param  {Buffer} divisor  Polynomial\n     * @return {Buffer}          Remainder\n     */\n    exports.mod = function mod(divident, divisor) {\n        var result = typedarrayBuffer.from(divident);\n        while ((result.length - divisor.length) >= 0) {\n            var coeff = result[0];\n            for (var i = 0; i < divisor.length; i++) {\n                result[i] ^= galoisField.mul(divisor[i], coeff);\n            }\n            // remove all zeros from buffer head\n            var offset = 0;\n            while (offset < result.length && result[offset] === 0)\n                offset++;\n            result = result.slice(offset);\n        }\n        return result;\n    };\n    /**\n     * Generate an irreducible generator polynomial of specified degree\n     * (used by Reed-Solomon encoder)\n     *\n     * @param  {Number} degree Degree of the generator polynomial\n     * @return {Buffer}        Buffer containing polynomial coefficients\n     */\n    exports.generateECPolynomial = function generateECPolynomial(degree) {\n        var poly = typedarrayBuffer.from([1]);\n        for (var i = 0; i < degree; i++) {\n            poly = exports.mul(poly, [1, galoisField.exp(i)]);\n        }\n        return poly;\n    };\n});\nvar Buffer$1 = buffer.Buffer;\nfunction ReedSolomonEncoder(degree) {\n    this.genPoly = undefined;\n    this.degree = degree;\n    if (this.degree)\n        this.initialize(this.degree);\n}\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize(degree) {\n    // create an irreducible generator polynomial\n    this.degree = degree;\n    this.genPoly = polynomial.generateECPolynomial(this.degree);\n};\n/**\n * Encodes a chunk of data\n *\n * @param  {Buffer} data Buffer containing input data\n * @return {Buffer}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode(data) {\n    if (!this.genPoly) {\n        throw new Error('Encoder not initialized');\n    }\n    // Calculate EC for this data block\n    // extends data size to data+genPoly size\n    var pad = typedarrayBuffer.alloc(this.degree);\n    var paddedData = Buffer$1.concat([data, pad], data.length + this.degree);\n    // The error correction codewords are the remainder after dividing the data codewords\n    // by a generator polynomial\n    var remainder = polynomial.mod(paddedData, this.genPoly);\n    // return EC data blocks (last n byte, where n is the degree of genPoly)\n    // If coefficients number in remainder are less than genPoly degree,\n    // pad with 0s to the left to reach the needed number of coefficients\n    var start = this.degree - remainder.length;\n    if (start > 0) {\n        var buff = typedarrayBuffer.alloc(this.degree);\n        remainder.copy(buff, start);\n        return buff;\n    }\n    return remainder;\n};\nvar reedSolomonEncoder = ReedSolomonEncoder;\n/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nvar isValid = function isValid(version) {\n    return !isNaN(version) && version >= 1 && version <= 40;\n};\nvar versionCheck = {\n    isValid: isValid\n};\nvar numeric = '[0-9]+';\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+';\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n    '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n    '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n    '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+';\nkanji = kanji.replace(/u/g, '\\\\u');\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+';\nvar KANJI = new RegExp(kanji, 'g');\nvar BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g');\nvar BYTE = new RegExp(byte, 'g');\nvar NUMERIC = new RegExp(numeric, 'g');\nvar ALPHANUMERIC = new RegExp(alphanumeric, 'g');\nvar TEST_KANJI = new RegExp('^' + kanji + '$');\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$');\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$');\nvar testKanji = function testKanji(str) {\n    return TEST_KANJI.test(str);\n};\nvar testNumeric = function testNumeric(str) {\n    return TEST_NUMERIC.test(str);\n};\nvar testAlphanumeric = function testAlphanumeric(str) {\n    return TEST_ALPHANUMERIC.test(str);\n};\nvar regex = {\n    KANJI: KANJI,\n    BYTE_KANJI: BYTE_KANJI,\n    BYTE: BYTE,\n    NUMERIC: NUMERIC,\n    ALPHANUMERIC: ALPHANUMERIC,\n    testKanji: testKanji,\n    testNumeric: testNumeric,\n    testAlphanumeric: testAlphanumeric\n};\nvar mode = createCommonjsModule(function (module, exports) {\n    /**\n     * Numeric mode encodes data from the decimal digit set (0 - 9)\n     * (byte values 30HEX to 39HEX).\n     * Normally, 3 data characters are represented by 10 bits.\n     *\n     * @type {Object}\n     */\n    exports.NUMERIC = {\n        id: 'Numeric',\n        bit: 1 << 0,\n        ccBits: [10, 12, 14]\n    };\n    /**\n     * Alphanumeric mode encodes data from a set of 45 characters,\n     * i.e. 10 numeric digits (0 - 9),\n     *      26 alphabetic characters (A - Z),\n     *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n     * Normally, two input characters are represented by 11 bits.\n     *\n     * @type {Object}\n     */\n    exports.ALPHANUMERIC = {\n        id: 'Alphanumeric',\n        bit: 1 << 1,\n        ccBits: [9, 11, 13]\n    };\n    /**\n     * In byte mode, data is encoded at 8 bits per character.\n     *\n     * @type {Object}\n     */\n    exports.BYTE = {\n        id: 'Byte',\n        bit: 1 << 2,\n        ccBits: [8, 16, 16]\n    };\n    /**\n     * The Kanji mode efficiently encodes Kanji characters in accordance with\n     * the Shift JIS system based on JIS X 0208.\n     * The Shift JIS values are shifted from the JIS X 0208 values.\n     * JIS X 0208 gives details of the shift coded representation.\n     * Each two-byte character value is compacted to a 13-bit binary codeword.\n     *\n     * @type {Object}\n     */\n    exports.KANJI = {\n        id: 'Kanji',\n        bit: 1 << 3,\n        ccBits: [8, 10, 12]\n    };\n    /**\n     * Mixed mode will contain a sequences of data in a combination of any of\n     * the modes described above\n     *\n     * @type {Object}\n     */\n    exports.MIXED = {\n        bit: -1\n    };\n    /**\n     * Returns the number of bits needed to store the data length\n     * according to QR Code specifications.\n     *\n     * @param  {Mode}   mode    Data mode\n     * @param  {Number} version QR Code version\n     * @return {Number}         Number of bits\n     */\n    exports.getCharCountIndicator = function getCharCountIndicator(mode, version) {\n        if (!mode.ccBits)\n            throw new Error('Invalid mode: ' + mode);\n        if (!versionCheck.isValid(version)) {\n            throw new Error('Invalid version: ' + version);\n        }\n        if (version >= 1 && version < 10)\n            return mode.ccBits[0];\n        else if (version < 27)\n            return mode.ccBits[1];\n        return mode.ccBits[2];\n    };\n    /**\n     * Returns the most efficient mode to store the specified data\n     *\n     * @param  {String} dataStr Input data string\n     * @return {Mode}           Best mode\n     */\n    exports.getBestModeForData = function getBestModeForData(dataStr) {\n        if (regex.testNumeric(dataStr))\n            return exports.NUMERIC;\n        else if (regex.testAlphanumeric(dataStr))\n            return exports.ALPHANUMERIC;\n        else if (regex.testKanji(dataStr))\n            return exports.KANJI;\n        else\n            return exports.BYTE;\n    };\n    /**\n     * Return mode name as string\n     *\n     * @param {Mode} mode Mode object\n     * @returns {String}  Mode name\n     */\n    exports.toString = function toString(mode) {\n        if (mode && mode.id)\n            return mode.id;\n        throw new Error('Invalid mode');\n    };\n    /**\n     * Check if input param is a valid mode object\n     *\n     * @param   {Mode}    mode Mode object\n     * @returns {Boolean} True if valid mode, false otherwise\n     */\n    exports.isValid = function isValid(mode) {\n        return mode && mode.bit && mode.ccBits;\n    };\n    /**\n     * Get mode object from its name\n     *\n     * @param   {String} string Mode name\n     * @returns {Mode}          Mode object\n     */\n    function fromString(string) {\n        if (typeof string !== 'string') {\n            throw new Error('Param is not a string');\n        }\n        var lcStr = string.toLowerCase();\n        switch (lcStr) {\n            case 'numeric':\n                return exports.NUMERIC;\n            case 'alphanumeric':\n                return exports.ALPHANUMERIC;\n            case 'kanji':\n                return exports.KANJI;\n            case 'byte':\n                return exports.BYTE;\n            default:\n                throw new Error('Unknown mode: ' + string);\n        }\n    }\n    /**\n     * Returns mode from a value.\n     * If value is not a valid mode, returns defaultValue\n     *\n     * @param  {Mode|String} value        Encoding mode\n     * @param  {Mode}        defaultValue Fallback value\n     * @return {Mode}                     Encoding mode\n     */\n    exports.from = function from(value, defaultValue) {\n        if (exports.isValid(value)) {\n            return value;\n        }\n        try {\n            return fromString(value);\n        }\n        catch (e) {\n            return defaultValue;\n        }\n    };\n});\nvar version = createCommonjsModule(function (module, exports) {\n    // Generator polynomial used to encode version information\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G18_BCH = utils.getBCHDigit(G18);\n    function getBestVersionForDataLength(mode, length, errorCorrectionLevel) {\n        for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n            if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n                return currentVersion;\n            }\n        }\n        return undefined;\n    }\n    function getReservedBitsCount(mode$1, version) {\n        // Character count indicator + mode indicator bits\n        return mode.getCharCountIndicator(mode$1, version) + 4;\n    }\n    function getTotalBitsFromDataArray(segments, version) {\n        var totalBits = 0;\n        segments.forEach(function (data) {\n            var reservedBits = getReservedBitsCount(data.mode, version);\n            totalBits += reservedBits + data.getBitsLength();\n        });\n        return totalBits;\n    }\n    function getBestVersionForMixedData(segments, errorCorrectionLevel) {\n        for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n            var length = getTotalBitsFromDataArray(segments, currentVersion);\n            if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode.MIXED)) {\n                return currentVersion;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns version number from a value.\n     * If value is not a valid version, returns defaultValue\n     *\n     * @param  {Number|String} value        QR Code version\n     * @param  {Number}        defaultValue Fallback value\n     * @return {Number}                     QR Code version number\n     */\n    exports.from = function from(value, defaultValue) {\n        if (versionCheck.isValid(value)) {\n            return parseInt(value, 10);\n        }\n        return defaultValue;\n    };\n    /**\n     * Returns how much data can be stored with the specified QR code version\n     * and error correction level\n     *\n     * @param  {Number} version              QR Code version (1-40)\n     * @param  {Number} errorCorrectionLevel Error correction level\n     * @param  {Mode}   mode                 Data mode\n     * @return {Number}                      Quantity of storable data\n     */\n    exports.getCapacity = function getCapacity(version, errorCorrectionLevel, mode$1) {\n        if (!versionCheck.isValid(version)) {\n            throw new Error('Invalid QR Code version');\n        }\n        // Use Byte mode as default\n        if (typeof mode$1 === 'undefined')\n            mode$1 = mode.BYTE;\n        // Total codewords for this QR code version (Data + Error correction)\n        var totalCodewords = utils.getSymbolTotalCodewords(version);\n        // Total number of error correction codewords\n        var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n        // Total number of data codewords\n        var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n        if (mode$1 === mode.MIXED)\n            return dataTotalCodewordsBits;\n        var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode$1, version);\n        // Return max number of storable codewords\n        switch (mode$1) {\n            case mode.NUMERIC:\n                return Math.floor((usableBits / 10) * 3);\n            case mode.ALPHANUMERIC:\n                return Math.floor((usableBits / 11) * 2);\n            case mode.KANJI:\n                return Math.floor(usableBits / 13);\n            case mode.BYTE:\n            default:\n                return Math.floor(usableBits / 8);\n        }\n    };\n    /**\n     * Returns the minimum version needed to contain the amount of data\n     *\n     * @param  {Segment} data                    Segment of data\n     * @param  {Number} [errorCorrectionLevel=H] Error correction level\n     * @param  {Mode} mode                       Data mode\n     * @return {Number}                          QR Code version\n     */\n    exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel$1) {\n        var seg;\n        var ecl = errorCorrectionLevel.from(errorCorrectionLevel$1, errorCorrectionLevel.M);\n        if (isarray(data)) {\n            if (data.length > 1) {\n                return getBestVersionForMixedData(data, ecl);\n            }\n            if (data.length === 0) {\n                return 1;\n            }\n            seg = data[0];\n        }\n        else {\n            seg = data;\n        }\n        return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);\n    };\n    /**\n     * Returns version information with relative error correction bits\n     *\n     * The version information is included in QR Code symbols of version 7 or larger.\n     * It consists of an 18-bit sequence containing 6 data bits,\n     * with 12 error correction bits calculated using the (18, 6) Golay code.\n     *\n     * @param  {Number} version QR Code version\n     * @return {Number}         Encoded version info bits\n     */\n    exports.getEncodedBits = function getEncodedBits(version) {\n        if (!versionCheck.isValid(version) || version < 7) {\n            throw new Error('Invalid QR Code version');\n        }\n        var d = version << 12;\n        while (utils.getBCHDigit(d) - G18_BCH >= 0) {\n            d ^= (G18 << (utils.getBCHDigit(d) - G18_BCH));\n        }\n        return (version << 12) | d;\n    };\n});\nvar G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\nvar G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\nvar G15_BCH = utils.getBCHDigit(G15);\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nvar getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {\n    var data = ((errorCorrectionLevel.bit << 3) | mask);\n    var d = data << 10;\n    while (utils.getBCHDigit(d) - G15_BCH >= 0) {\n        d ^= (G15 << (utils.getBCHDigit(d) - G15_BCH));\n    }\n    // xor final data with mask pattern in order to ensure that\n    // no combination of Error Correction Level and data mask pattern\n    // will result in an all-zero data string\n    return ((data << 10) | d) ^ G15_MASK;\n};\nvar formatInfo = {\n    getEncodedBits: getEncodedBits\n};\nfunction NumericData(data) {\n    this.mode = mode.NUMERIC;\n    this.data = data.toString();\n}\nNumericData.getBitsLength = function getBitsLength(length) {\n    return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0);\n};\nNumericData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nNumericData.prototype.getBitsLength = function getBitsLength() {\n    return NumericData.getBitsLength(this.data.length);\n};\nNumericData.prototype.write = function write(bitBuffer) {\n    var i, group, value;\n    // The input data string is divided into groups of three digits,\n    // and each group is converted to its 10-bit binary equivalent.\n    for (i = 0; i + 3 <= this.data.length; i += 3) {\n        group = this.data.substr(i, 3);\n        value = parseInt(group, 10);\n        bitBuffer.put(value, 10);\n    }\n    // If the number of input digits is not an exact multiple of three,\n    // the final one or two digits are converted to 4 or 7 bits respectively.\n    var remainingNum = this.data.length - i;\n    if (remainingNum > 0) {\n        group = this.data.substr(i);\n        value = parseInt(group, 10);\n        bitBuffer.put(value, remainingNum * 3 + 1);\n    }\n};\nvar numericData = NumericData;\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nvar ALPHA_NUM_CHARS = [\n    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n    'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n    ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n];\nfunction AlphanumericData(data) {\n    this.mode = mode.ALPHANUMERIC;\n    this.data = data;\n}\nAlphanumericData.getBitsLength = function getBitsLength(length) {\n    return 11 * Math.floor(length / 2) + 6 * (length % 2);\n};\nAlphanumericData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nAlphanumericData.prototype.getBitsLength = function getBitsLength() {\n    return AlphanumericData.getBitsLength(this.data.length);\n};\nAlphanumericData.prototype.write = function write(bitBuffer) {\n    var i;\n    // Input data characters are divided into groups of two characters\n    // and encoded as 11-bit binary codes.\n    for (i = 0; i + 2 <= this.data.length; i += 2) {\n        // The character value of the first character is multiplied by 45\n        var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45;\n        // The character value of the second digit is added to the product\n        value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]);\n        // The sum is then stored as 11-bit binary number\n        bitBuffer.put(value, 11);\n    }\n    // If the number of input data characters is not a multiple of two,\n    // the character value of the final character is encoded as a 6-bit binary number.\n    if (this.data.length % 2) {\n        bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);\n    }\n};\nvar alphanumericData = AlphanumericData;\nfunction ByteData(data) {\n    this.mode = mode.BYTE;\n    this.data = typedarrayBuffer.from(data);\n}\nByteData.getBitsLength = function getBitsLength(length) {\n    return length * 8;\n};\nByteData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nByteData.prototype.getBitsLength = function getBitsLength() {\n    return ByteData.getBitsLength(this.data.length);\n};\nByteData.prototype.write = function (bitBuffer) {\n    for (var i = 0, l = this.data.length; i < l; i++) {\n        bitBuffer.put(this.data[i], 8);\n    }\n};\nvar byteData = ByteData;\nfunction KanjiData(data) {\n    this.mode = mode.KANJI;\n    this.data = data;\n}\nKanjiData.getBitsLength = function getBitsLength(length) {\n    return length * 13;\n};\nKanjiData.prototype.getLength = function getLength() {\n    return this.data.length;\n};\nKanjiData.prototype.getBitsLength = function getBitsLength() {\n    return KanjiData.getBitsLength(this.data.length);\n};\nKanjiData.prototype.write = function (bitBuffer) {\n    var i;\n    // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n    // These byte values are shifted from the JIS X 0208 values.\n    // JIS X 0208 gives details of the shift coded representation.\n    for (i = 0; i < this.data.length; i++) {\n        var value = utils.toSJIS(this.data[i]);\n        // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n        if (value >= 0x8140 && value <= 0x9FFC) {\n            // Subtract 0x8140 from Shift JIS value\n            value -= 0x8140;\n            // For characters with Shift JIS values from 0xE040 to 0xEBBF\n        }\n        else if (value >= 0xE040 && value <= 0xEBBF) {\n            // Subtract 0xC140 from Shift JIS value\n            value -= 0xC140;\n        }\n        else {\n            throw new Error('Invalid SJIS character: ' + this.data[i] + '\\n' +\n                'Make sure your charset is UTF-8');\n        }\n        // Multiply most significant byte of result by 0xC0\n        // and add least significant byte to product\n        value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff);\n        // Convert result to a 13-bit binary string\n        bitBuffer.put(value, 13);\n    }\n};\nvar kanjiData = KanjiData;\nvar dijkstra_1 = createCommonjsModule(function (module) {\n    /******************************************************************************\n     * Created 2008-08-19.\n     *\n     * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n     *\n     * Copyright (C) 2008\n     *   Wyatt Baldwin <self@wyattbaldwin.com>\n     *   All rights reserved\n     *\n     * Licensed under the MIT license.\n     *\n     *   http://www.opensource.org/licenses/mit-license.php\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n     * THE SOFTWARE.\n     *****************************************************************************/\n    var dijkstra = {\n        single_source_shortest_paths: function (graph, s, d) {\n            // Predecessor map for each node that has been encountered.\n            // node ID => predecessor node ID\n            var predecessors = {};\n            // Costs of shortest paths from s to all nodes encountered.\n            // node ID => cost\n            var costs = {};\n            costs[s] = 0;\n            // Costs of shortest paths from s to all nodes encountered; differs from\n            // `costs` in that it provides easy access to the node that currently has\n            // the known shortest path from s.\n            // XXX: Do we actually need both `costs` and `open`?\n            var open = dijkstra.PriorityQueue.make();\n            open.push(s, 0);\n            var closest, u, v, cost_of_s_to_u, adjacent_nodes, cost_of_e, cost_of_s_to_u_plus_cost_of_e, cost_of_s_to_v, first_visit;\n            while (!open.empty()) {\n                // In the nodes remaining in graph that have a known cost from s,\n                // find the node, u, that currently has the shortest path from s.\n                closest = open.pop();\n                u = closest.value;\n                cost_of_s_to_u = closest.cost;\n                // Get nodes adjacent to u...\n                adjacent_nodes = graph[u] || {};\n                // ...and explore the edges that connect u to those nodes, updating\n                // the cost of the shortest paths to any or all of those nodes as\n                // necessary. v is the node across the current edge from u.\n                for (v in adjacent_nodes) {\n                    if (adjacent_nodes.hasOwnProperty(v)) {\n                        // Get the cost of the edge running from u to v.\n                        cost_of_e = adjacent_nodes[v];\n                        // Cost of s to u plus the cost of u to v across e--this is *a*\n                        // cost from s to v that may or may not be less than the current\n                        // known cost to v.\n                        cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n                        // If we haven't visited v yet OR if the current known cost from s to\n                        // v is greater than the new cost we just found (cost of s to u plus\n                        // cost of u to v across e), update v's cost in the cost list and\n                        // update v's predecessor in the predecessor list (it's now u).\n                        cost_of_s_to_v = costs[v];\n                        first_visit = (typeof costs[v] === 'undefined');\n                        if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n                            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n                            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n                            predecessors[v] = u;\n                        }\n                    }\n                }\n            }\n            if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n                var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n                throw new Error(msg);\n            }\n            return predecessors;\n        },\n        extract_shortest_path_from_predecessor_list: function (predecessors, d) {\n            var nodes = [];\n            var u = d;\n            while (u) {\n                nodes.push(u);\n                u = predecessors[u];\n            }\n            nodes.reverse();\n            return nodes;\n        },\n        find_path: function (graph, s, d) {\n            var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n            return dijkstra.extract_shortest_path_from_predecessor_list(predecessors, d);\n        },\n        /**\n         * A very naive priority queue implementation.\n         */\n        PriorityQueue: {\n            make: function (opts) {\n                var T = dijkstra.PriorityQueue, t = {}, key;\n                opts = opts || {};\n                for (key in T) {\n                    if (T.hasOwnProperty(key)) {\n                        t[key] = T[key];\n                    }\n                }\n                t.queue = [];\n                t.sorter = opts.sorter || T.default_sorter;\n                return t;\n            },\n            default_sorter: function (a, b) {\n                return a.cost - b.cost;\n            },\n            /**\n             * Add a new item to the queue and ensure the highest priority element\n             * is at the front of the queue.\n             */\n            push: function (value, cost) {\n                var item = { value: value, cost: cost };\n                this.queue.push(item);\n                this.queue.sort(this.sorter);\n            },\n            /**\n             * Return the highest priority element in the queue.\n             */\n            pop: function () {\n                return this.queue.shift();\n            },\n            empty: function () {\n                return this.queue.length === 0;\n            }\n        }\n    };\n    // node.js module exports\n    {\n        module.exports = dijkstra;\n    }\n});\nvar segments = createCommonjsModule(function (module, exports) {\n    /**\n     * Returns UTF8 byte length\n     *\n     * @param  {String} str Input string\n     * @return {Number}     Number of byte\n     */\n    function getStringByteLength(str) {\n        return unescape(encodeURIComponent(str)).length;\n    }\n    /**\n     * Get a list of segments of the specified mode\n     * from a string\n     *\n     * @param  {Mode}   mode Segment mode\n     * @param  {String} str  String to process\n     * @return {Array}       Array of object with segments data\n     */\n    function getSegments(regex, mode, str) {\n        var segments = [];\n        var result;\n        while ((result = regex.exec(str)) !== null) {\n            segments.push({\n                data: result[0],\n                index: result.index,\n                mode: mode,\n                length: result[0].length\n            });\n        }\n        return segments;\n    }\n    /**\n     * Extracts a series of segments with the appropriate\n     * modes from a string\n     *\n     * @param  {String} dataStr Input string\n     * @return {Array}          Array of object with segments data\n     */\n    function getSegmentsFromString(dataStr) {\n        var numSegs = getSegments(regex.NUMERIC, mode.NUMERIC, dataStr);\n        var alphaNumSegs = getSegments(regex.ALPHANUMERIC, mode.ALPHANUMERIC, dataStr);\n        var byteSegs;\n        var kanjiSegs;\n        if (utils.isKanjiModeEnabled()) {\n            byteSegs = getSegments(regex.BYTE, mode.BYTE, dataStr);\n            kanjiSegs = getSegments(regex.KANJI, mode.KANJI, dataStr);\n        }\n        else {\n            byteSegs = getSegments(regex.BYTE_KANJI, mode.BYTE, dataStr);\n            kanjiSegs = [];\n        }\n        var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);\n        return segs\n            .sort(function (s1, s2) {\n            return s1.index - s2.index;\n        })\n            .map(function (obj) {\n            return {\n                data: obj.data,\n                mode: obj.mode,\n                length: obj.length\n            };\n        });\n    }\n    /**\n     * Returns how many bits are needed to encode a string of\n     * specified length with the specified mode\n     *\n     * @param  {Number} length String length\n     * @param  {Mode} mode     Segment mode\n     * @return {Number}        Bit length\n     */\n    function getSegmentBitsLength(length, mode$1) {\n        switch (mode$1) {\n            case mode.NUMERIC:\n                return numericData.getBitsLength(length);\n            case mode.ALPHANUMERIC:\n                return alphanumericData.getBitsLength(length);\n            case mode.KANJI:\n                return kanjiData.getBitsLength(length);\n            case mode.BYTE:\n                return byteData.getBitsLength(length);\n        }\n    }\n    /**\n     * Merges adjacent segments which have the same mode\n     *\n     * @param  {Array} segs Array of object with segments data\n     * @return {Array}      Array of object with segments data\n     */\n    function mergeSegments(segs) {\n        return segs.reduce(function (acc, curr) {\n            var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;\n            if (prevSeg && prevSeg.mode === curr.mode) {\n                acc[acc.length - 1].data += curr.data;\n                return acc;\n            }\n            acc.push(curr);\n            return acc;\n        }, []);\n    }\n    /**\n     * Generates a list of all possible nodes combination which\n     * will be used to build a segments graph.\n     *\n     * Nodes are divided by groups. Each group will contain a list of all the modes\n     * in which is possible to encode the given text.\n     *\n     * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n     * The group for '12345' will contain then 3 objects, one for each\n     * possible encoding mode.\n     *\n     * Each node represents a possible segment.\n     *\n     * @param  {Array} segs Array of object with segments data\n     * @return {Array}      Array of object with segments data\n     */\n    function buildNodes(segs) {\n        var nodes = [];\n        for (var i = 0; i < segs.length; i++) {\n            var seg = segs[i];\n            switch (seg.mode) {\n                case mode.NUMERIC:\n                    nodes.push([seg,\n                        { data: seg.data, mode: mode.ALPHANUMERIC, length: seg.length },\n                        { data: seg.data, mode: mode.BYTE, length: seg.length }\n                    ]);\n                    break;\n                case mode.ALPHANUMERIC:\n                    nodes.push([seg,\n                        { data: seg.data, mode: mode.BYTE, length: seg.length }\n                    ]);\n                    break;\n                case mode.KANJI:\n                    nodes.push([seg,\n                        { data: seg.data, mode: mode.BYTE, length: getStringByteLength(seg.data) }\n                    ]);\n                    break;\n                case mode.BYTE:\n                    nodes.push([\n                        { data: seg.data, mode: mode.BYTE, length: getStringByteLength(seg.data) }\n                    ]);\n            }\n        }\n        return nodes;\n    }\n    /**\n     * Builds a graph from a list of nodes.\n     * All segments in each node group will be connected with all the segments of\n     * the next group and so on.\n     *\n     * At each connection will be assigned a weight depending on the\n     * segment's byte length.\n     *\n     * @param  {Array} nodes    Array of object with segments data\n     * @param  {Number} version QR Code version\n     * @return {Object}         Graph of all possible segments\n     */\n    function buildGraph(nodes, version) {\n        var table = {};\n        var graph = { 'start': {} };\n        var prevNodeIds = ['start'];\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeGroup = nodes[i];\n            var currentNodeIds = [];\n            for (var j = 0; j < nodeGroup.length; j++) {\n                var node = nodeGroup[j];\n                var key = '' + i + j;\n                currentNodeIds.push(key);\n                table[key] = { node: node, lastCount: 0 };\n                graph[key] = {};\n                for (var n = 0; n < prevNodeIds.length; n++) {\n                    var prevNodeId = prevNodeIds[n];\n                    if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n                        graph[prevNodeId][key] =\n                            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n                                getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);\n                        table[prevNodeId].lastCount += node.length;\n                    }\n                    else {\n                        if (table[prevNodeId])\n                            table[prevNodeId].lastCount = node.length;\n                        graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n                            4 + mode.getCharCountIndicator(node.mode, version); // switch cost\n                    }\n                }\n            }\n            prevNodeIds = currentNodeIds;\n        }\n        for (n = 0; n < prevNodeIds.length; n++) {\n            graph[prevNodeIds[n]]['end'] = 0;\n        }\n        return { map: graph, table: table };\n    }\n    /**\n     * Builds a segment from a specified data and mode.\n     * If a mode is not specified, the more suitable will be used.\n     *\n     * @param  {String} data             Input data\n     * @param  {Mode | String} modesHint Data mode\n     * @return {Segment}                 Segment\n     */\n    function buildSingleSegment(data, modesHint) {\n        var mode$1;\n        var bestMode = mode.getBestModeForData(data);\n        mode$1 = mode.from(modesHint, bestMode);\n        // Make sure data can be encoded\n        if (mode$1 !== mode.BYTE && mode$1.bit < bestMode.bit) {\n            throw new Error('\"' + data + '\"' +\n                ' cannot be encoded with mode ' + mode.toString(mode$1) +\n                '.\\n Suggested mode is: ' + mode.toString(bestMode));\n        }\n        // Use Mode.BYTE if Kanji support is disabled\n        if (mode$1 === mode.KANJI && !utils.isKanjiModeEnabled()) {\n            mode$1 = mode.BYTE;\n        }\n        switch (mode$1) {\n            case mode.NUMERIC:\n                return new numericData(data);\n            case mode.ALPHANUMERIC:\n                return new alphanumericData(data);\n            case mode.KANJI:\n                return new kanjiData(data);\n            case mode.BYTE:\n                return new byteData(data);\n        }\n    }\n    /**\n     * Builds a list of segments from an array.\n     * Array can contain Strings or Objects with segment's info.\n     *\n     * For each item which is a string, will be generated a segment with the given\n     * string and the more appropriate encoding mode.\n     *\n     * For each item which is an object, will be generated a segment with the given\n     * data and mode.\n     * Objects must contain at least the property \"data\".\n     * If property \"mode\" is not present, the more suitable mode will be used.\n     *\n     * @param  {Array} array Array of objects with segments data\n     * @return {Array}       Array of Segments\n     */\n    exports.fromArray = function fromArray(array) {\n        return array.reduce(function (acc, seg) {\n            if (typeof seg === 'string') {\n                acc.push(buildSingleSegment(seg, null));\n            }\n            else if (seg.data) {\n                acc.push(buildSingleSegment(seg.data, seg.mode));\n            }\n            return acc;\n        }, []);\n    };\n    /**\n     * Builds an optimized sequence of segments from a string,\n     * which will produce the shortest possible bitstream.\n     *\n     * @param  {String} data    Input string\n     * @param  {Number} version QR Code version\n     * @return {Array}          Array of segments\n     */\n    exports.fromString = function fromString(data, version) {\n        var segs = getSegmentsFromString(data, utils.isKanjiModeEnabled());\n        var nodes = buildNodes(segs);\n        var graph = buildGraph(nodes, version);\n        var path = dijkstra_1.find_path(graph.map, 'start', 'end');\n        var optimizedSegs = [];\n        for (var i = 1; i < path.length - 1; i++) {\n            optimizedSegs.push(graph.table[path[i]].node);\n        }\n        return exports.fromArray(mergeSegments(optimizedSegs));\n    };\n    /**\n     * Splits a string in various segments with the modes which\n     * best represent their content.\n     * The produced segments are far from being optimized.\n     * The output of this function is only used to estimate a QR Code version\n     * which may contain the data.\n     *\n     * @param  {string} data Input string\n     * @return {Array}       Array of segments\n     */\n    exports.rawSplit = function rawSplit(data) {\n        return exports.fromArray(getSegmentsFromString(data, utils.isKanjiModeEnabled()));\n    };\n});\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern(matrix, version) {\n    var size = matrix.size;\n    var pos = finderPattern.getPositions(version);\n    for (var i = 0; i < pos.length; i++) {\n        var row = pos[i][0];\n        var col = pos[i][1];\n        for (var r = -1; r <= 7; r++) {\n            if (row + r <= -1 || size <= row + r)\n                continue;\n            for (var c = -1; c <= 7; c++) {\n                if (col + c <= -1 || size <= col + c)\n                    continue;\n                if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n                    (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n                    (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n                    matrix.set(row + r, col + c, true, true);\n                }\n                else {\n                    matrix.set(row + r, col + c, false, true);\n                }\n            }\n        }\n    }\n}\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern(matrix) {\n    var size = matrix.size;\n    for (var r = 8; r < size - 8; r++) {\n        var value = r % 2 === 0;\n        matrix.set(r, 6, value, true);\n        matrix.set(6, r, value, true);\n    }\n}\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern(matrix, version) {\n    var pos = alignmentPattern.getPositions(version);\n    for (var i = 0; i < pos.length; i++) {\n        var row = pos[i][0];\n        var col = pos[i][1];\n        for (var r = -2; r <= 2; r++) {\n            for (var c = -2; c <= 2; c++) {\n                if (r === -2 || r === 2 || c === -2 || c === 2 ||\n                    (r === 0 && c === 0)) {\n                    matrix.set(row + r, col + c, true, true);\n                }\n                else {\n                    matrix.set(row + r, col + c, false, true);\n                }\n            }\n        }\n    }\n}\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo(matrix, version$1) {\n    var size = matrix.size;\n    var bits = version.getEncodedBits(version$1);\n    var row, col, mod;\n    for (var i = 0; i < 18; i++) {\n        row = Math.floor(i / 3);\n        col = i % 3 + size - 8 - 3;\n        mod = ((bits >> i) & 1) === 1;\n        matrix.set(row, col, mod, true);\n        matrix.set(col, row, mod, true);\n    }\n}\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {\n    var size = matrix.size;\n    var bits = formatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);\n    var i, mod;\n    for (i = 0; i < 15; i++) {\n        mod = ((bits >> i) & 1) === 1;\n        // vertical\n        if (i < 6) {\n            matrix.set(i, 8, mod, true);\n        }\n        else if (i < 8) {\n            matrix.set(i + 1, 8, mod, true);\n        }\n        else {\n            matrix.set(size - 15 + i, 8, mod, true);\n        }\n        // horizontal\n        if (i < 8) {\n            matrix.set(8, size - i - 1, mod, true);\n        }\n        else if (i < 9) {\n            matrix.set(8, 15 - i - 1 + 1, mod, true);\n        }\n        else {\n            matrix.set(8, 15 - i - 1, mod, true);\n        }\n    }\n    // fixed module\n    matrix.set(size - 8, 8, 1, true);\n}\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix} matrix Modules matrix\n * @param  {Buffer}    data   Data codewords\n */\nfunction setupData(matrix, data) {\n    var size = matrix.size;\n    var inc = -1;\n    var row = size - 1;\n    var bitIndex = 7;\n    var byteIndex = 0;\n    for (var col = size - 1; col > 0; col -= 2) {\n        if (col === 6)\n            col--;\n        while (true) {\n            for (var c = 0; c < 2; c++) {\n                if (!matrix.isReserved(row, col - c)) {\n                    var dark = false;\n                    if (byteIndex < data.length) {\n                        dark = (((data[byteIndex] >>> bitIndex) & 1) === 1);\n                    }\n                    matrix.set(row, col - c, dark);\n                    bitIndex--;\n                    if (bitIndex === -1) {\n                        byteIndex++;\n                        bitIndex = 7;\n                    }\n                }\n            }\n            row += inc;\n            if (row < 0 || size <= row) {\n                row -= inc;\n                inc = -inc;\n                break;\n            }\n        }\n    }\n}\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Buffer}                        Buffer containing encoded codewords\n */\nfunction createData(version, errorCorrectionLevel, segments) {\n    // Prepare data buffer\n    var buffer = new bitBuffer();\n    segments.forEach(function (data) {\n        // prefix data with mode indicator (4 bits)\n        buffer.put(data.mode.bit, 4);\n        // Prefix data with character count indicator.\n        // The character count indicator is a string of bits that represents the\n        // number of characters that are being encoded.\n        // The character count indicator must be placed after the mode indicator\n        // and must be a certain number of bits long, depending on the QR version\n        // and data mode\n        // @see {@link Mode.getCharCountIndicator}.\n        buffer.put(data.getLength(), mode.getCharCountIndicator(data.mode, version));\n        // add binary data sequence to buffer\n        data.write(buffer);\n    });\n    // Calculate required number of bits\n    var totalCodewords = utils.getSymbolTotalCodewords(version);\n    var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n    var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;\n    // Add a terminator.\n    // If the bit string is shorter than the total number of required bits,\n    // a terminator of up to four 0s must be added to the right side of the string.\n    // If the bit string is more than four bits shorter than the required number of bits,\n    // add four 0s to the end.\n    if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n        buffer.put(0, 4);\n    }\n    // If the bit string is fewer than four bits shorter, add only the number of 0s that\n    // are needed to reach the required number of bits.\n    // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n    // pad the string on the right with 0s to make the string's length a multiple of 8.\n    while (buffer.getLengthInBits() % 8 !== 0) {\n        buffer.putBit(0);\n    }\n    // Add pad bytes if the string is still shorter than the total number of required bits.\n    // Extend the buffer to fill the data capacity of the symbol corresponding to\n    // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n    // and 00010001 (0x11) alternately.\n    var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;\n    for (var i = 0; i < remainingByte; i++) {\n        buffer.put(i % 2 ? 0x11 : 0xEC, 8);\n    }\n    return createCodewords(buffer, version, errorCorrectionLevel);\n}\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Buffer}                         Buffer containing encoded codewords\n */\nfunction createCodewords(bitBuffer, version, errorCorrectionLevel) {\n    // Total codewords for this QR code version (Data + Error correction)\n    var totalCodewords = utils.getSymbolTotalCodewords(version);\n    // Total number of error correction codewords\n    var ecTotalCodewords = errorCorrectionCode.getTotalCodewordsCount(version, errorCorrectionLevel);\n    // Total number of data codewords\n    var dataTotalCodewords = totalCodewords - ecTotalCodewords;\n    // Total number of blocks\n    var ecTotalBlocks = errorCorrectionCode.getBlocksCount(version, errorCorrectionLevel);\n    // Calculate how many blocks each group should contain\n    var blocksInGroup2 = totalCodewords % ecTotalBlocks;\n    var blocksInGroup1 = ecTotalBlocks - blocksInGroup2;\n    var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);\n    var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);\n    var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1;\n    // Number of EC codewords is the same for both groups\n    var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1;\n    // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n    var rs = new reedSolomonEncoder(ecCount);\n    var offset = 0;\n    var dcData = new Array(ecTotalBlocks);\n    var ecData = new Array(ecTotalBlocks);\n    var maxDataSize = 0;\n    var buffer = typedarrayBuffer.from(bitBuffer.buffer);\n    // Divide the buffer into the required number of blocks\n    for (var b = 0; b < ecTotalBlocks; b++) {\n        var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2;\n        // extract a block of data from buffer\n        dcData[b] = buffer.slice(offset, offset + dataSize);\n        // Calculate EC codewords for this data block\n        ecData[b] = rs.encode(dcData[b]);\n        offset += dataSize;\n        maxDataSize = Math.max(maxDataSize, dataSize);\n    }\n    // Create final data\n    // Interleave the data and error correction codewords from each block\n    var data = typedarrayBuffer.alloc(totalCodewords);\n    var index = 0;\n    var i, r;\n    // Add data codewords\n    for (i = 0; i < maxDataSize; i++) {\n        for (r = 0; r < ecTotalBlocks; r++) {\n            if (i < dcData[r].length) {\n                data[index++] = dcData[r][i];\n            }\n        }\n    }\n    // Apped EC codewords\n    for (i = 0; i < ecCount; i++) {\n        for (r = 0; r < ecTotalBlocks; r++) {\n            data[index++] = ecData[r][i];\n        }\n    }\n    return data;\n}\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol(data, version$1, errorCorrectionLevel, maskPattern$1) {\n    var segments$1;\n    if (isarray(data)) {\n        segments$1 = segments.fromArray(data);\n    }\n    else if (typeof data === 'string') {\n        var estimatedVersion = version$1;\n        if (!estimatedVersion) {\n            var rawSegments = segments.rawSplit(data);\n            // Estimate best version that can contain raw splitted segments\n            estimatedVersion = version.getBestVersionForData(rawSegments, errorCorrectionLevel);\n        }\n        // Build optimized segments\n        // If estimated version is undefined, try with the highest version\n        segments$1 = segments.fromString(data, estimatedVersion || 40);\n    }\n    else {\n        throw new Error('Invalid data');\n    }\n    // Get the min version that can contain data\n    var bestVersion = version.getBestVersionForData(segments$1, errorCorrectionLevel);\n    // If no version is found, data cannot be stored\n    if (!bestVersion) {\n        throw new Error('The amount of data is too big to be stored in a QR Code');\n    }\n    // If not specified, use min version as default\n    if (!version$1) {\n        version$1 = bestVersion;\n        // Check if the specified version can contain the data\n    }\n    else if (version$1 < bestVersion) {\n        throw new Error('\\n' +\n            'The chosen QR Code version cannot contain this amount of data.\\n' +\n            'Minimum version required to store current data is: ' + bestVersion + '.\\n');\n    }\n    var dataBits = createData(version$1, errorCorrectionLevel, segments$1);\n    // Allocate matrix buffer\n    var moduleCount = utils.getSymbolSize(version$1);\n    var modules = new bitMatrix(moduleCount);\n    // Add function modules\n    setupFinderPattern(modules, version$1);\n    setupTimingPattern(modules);\n    setupAlignmentPattern(modules, version$1);\n    // Add temporary dummy bits for format info just to set them as reserved.\n    // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n    // since the masking operation must be performed only on the encoding region.\n    // These blocks will be replaced with correct values later in code.\n    setupFormatInfo(modules, errorCorrectionLevel, 0);\n    if (version$1 >= 7) {\n        setupVersionInfo(modules, version$1);\n    }\n    // Add data codewords\n    setupData(modules, dataBits);\n    if (isNaN(maskPattern$1)) {\n        // Find best mask pattern\n        maskPattern$1 = maskPattern.getBestMask(modules, setupFormatInfo.bind(null, modules, errorCorrectionLevel));\n    }\n    // Apply mask pattern\n    maskPattern.applyMask(maskPattern$1, modules);\n    // Replace format info bits with correct values\n    setupFormatInfo(modules, errorCorrectionLevel, maskPattern$1);\n    return {\n        modules: modules,\n        version: version$1,\n        errorCorrectionLevel: errorCorrectionLevel,\n        maskPattern: maskPattern$1,\n        segments: segments$1\n    };\n}\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nvar create = function create(data, options) {\n    if (typeof data === 'undefined' || data === '') {\n        throw new Error('No input text');\n    }\n    var errorCorrectionLevel$1 = errorCorrectionLevel.M;\n    var version$1;\n    var mask;\n    if (typeof options !== 'undefined') {\n        // Use higher error correction level as default\n        errorCorrectionLevel$1 = errorCorrectionLevel.from(options.errorCorrectionLevel, errorCorrectionLevel.M);\n        version$1 = version.from(options.version);\n        mask = maskPattern.from(options.maskPattern);\n        if (options.toSJISFunc) {\n            utils.setToSJISFunction(options.toSJISFunc);\n        }\n    }\n    return createSymbol(data, version$1, errorCorrectionLevel$1, mask);\n};\nvar qrcode = {\n    create: create\n};\nvar utils$1 = createCommonjsModule(function (module, exports) {\n    function hex2rgba(hex) {\n        if (typeof hex === 'number') {\n            hex = hex.toString();\n        }\n        if (typeof hex !== 'string') {\n            throw new Error('Color should be defined as hex string');\n        }\n        var hexCode = hex.slice().replace('#', '').split('');\n        if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n            throw new Error('Invalid hex color: ' + hex);\n        }\n        // Convert from short to long form (fff -> ffffff)\n        if (hexCode.length === 3 || hexCode.length === 4) {\n            hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n                return [c, c];\n            }));\n        }\n        // Add default alpha value\n        if (hexCode.length === 6)\n            hexCode.push('F', 'F');\n        var hexValue = parseInt(hexCode.join(''), 16);\n        return {\n            r: (hexValue >> 24) & 255,\n            g: (hexValue >> 16) & 255,\n            b: (hexValue >> 8) & 255,\n            a: hexValue & 255,\n            hex: '#' + hexCode.slice(0, 6).join('')\n        };\n    }\n    exports.getOptions = function getOptions(options) {\n        if (!options)\n            options = {};\n        if (!options.color)\n            options.color = {};\n        var margin = typeof options.margin === 'undefined' ||\n            options.margin === null ||\n            options.margin < 0 ? 4 : options.margin;\n        var width = options.width && options.width >= 21 ? options.width : undefined;\n        var scale = options.scale || 4;\n        return {\n            width: width,\n            scale: width ? 4 : scale,\n            margin: margin,\n            color: {\n                dark: hex2rgba(options.color.dark || '#000000ff'),\n                light: hex2rgba(options.color.light || '#ffffffff')\n            },\n            type: options.type,\n            rendererOpts: options.rendererOpts || {}\n        };\n    };\n    exports.getScale = function getScale(qrSize, opts) {\n        return opts.width && opts.width >= qrSize + opts.margin * 2\n            ? opts.width / (qrSize + opts.margin * 2)\n            : opts.scale;\n    };\n    exports.getImageWidth = function getImageWidth(qrSize, opts) {\n        var scale = exports.getScale(qrSize, opts);\n        return Math.floor((qrSize + opts.margin * 2) * scale);\n    };\n    exports.qrToImageData = function qrToImageData(imgData, qr, opts) {\n        var size = qr.modules.size;\n        var data = qr.modules.data;\n        var scale = exports.getScale(size, opts);\n        var symbolSize = Math.floor((size + opts.margin * 2) * scale);\n        var scaledMargin = opts.margin * scale;\n        var palette = [opts.color.light, opts.color.dark];\n        for (var i = 0; i < symbolSize; i++) {\n            for (var j = 0; j < symbolSize; j++) {\n                var posDst = (i * symbolSize + j) * 4;\n                var pxColor = opts.color.light;\n                if (i >= scaledMargin && j >= scaledMargin &&\n                    i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n                    var iSrc = Math.floor((i - scaledMargin) / scale);\n                    var jSrc = Math.floor((j - scaledMargin) / scale);\n                    pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];\n                }\n                imgData[posDst++] = pxColor.r;\n                imgData[posDst++] = pxColor.g;\n                imgData[posDst++] = pxColor.b;\n                imgData[posDst] = pxColor.a;\n            }\n        }\n    };\n});\nvar canvas = createCommonjsModule(function (module, exports) {\n    function clearCanvas(ctx, canvas, size) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        if (!canvas.style)\n            canvas.style = {};\n        canvas.height = size;\n        canvas.width = size;\n        canvas.style.height = size + 'px';\n        canvas.style.width = size + 'px';\n    }\n    function getCanvasElement() {\n        try {\n            return document.createElement('canvas');\n        }\n        catch (e) {\n            throw new Error('You need to specify a canvas element');\n        }\n    }\n    exports.render = function render(qrData, canvas, options) {\n        var opts = options;\n        var canvasEl = canvas;\n        if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n            opts = canvas;\n            canvas = undefined;\n        }\n        if (!canvas) {\n            canvasEl = getCanvasElement();\n        }\n        opts = utils$1.getOptions(opts);\n        var size = utils$1.getImageWidth(qrData.modules.size, opts);\n        var ctx = canvasEl.getContext('2d');\n        var image = ctx.createImageData(size, size);\n        utils$1.qrToImageData(image.data, qrData, opts);\n        clearCanvas(ctx, canvasEl, size);\n        ctx.putImageData(image, 0, 0);\n        return canvasEl;\n    };\n    exports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {\n        var opts = options;\n        if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n            opts = canvas;\n            canvas = undefined;\n        }\n        if (!opts)\n            opts = {};\n        var canvasEl = exports.render(qrData, canvas, opts);\n        var type = opts.type || 'image/png';\n        var rendererOpts = opts.rendererOpts || {};\n        return canvasEl.toDataURL(type, rendererOpts.quality);\n    };\n});\nfunction getColorAttrib(color, attrib) {\n    var alpha = color.a / 255;\n    var str = attrib + '=\"' + color.hex + '\"';\n    return alpha < 1\n        ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n        : str;\n}\nfunction svgCmd(cmd, x, y) {\n    var str = cmd + x;\n    if (typeof y !== 'undefined')\n        str += ' ' + y;\n    return str;\n}\nfunction qrToPath(data, size, margin) {\n    var path = '';\n    var moveBy = 0;\n    var newRow = false;\n    var lineLength = 0;\n    for (var i = 0; i < data.length; i++) {\n        var col = Math.floor(i % size);\n        var row = Math.floor(i / size);\n        if (!col && !newRow)\n            newRow = true;\n        if (data[i]) {\n            lineLength++;\n            if (!(i > 0 && col > 0 && data[i - 1])) {\n                path += newRow\n                    ? svgCmd('M', col + margin, 0.5 + row + margin)\n                    : svgCmd('m', moveBy, 0);\n                moveBy = 0;\n                newRow = false;\n            }\n            if (!(col + 1 < size && data[i + 1])) {\n                path += svgCmd('h', lineLength);\n                lineLength = 0;\n            }\n        }\n        else {\n            moveBy++;\n        }\n    }\n    return path;\n}\nvar render = function render(qrData, options, cb) {\n    var opts = utils$1.getOptions(options);\n    var size = qrData.modules.size;\n    var data = qrData.modules.data;\n    var qrcodesize = size + opts.margin * 2;\n    var bg = !opts.color.light.a\n        ? ''\n        : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n            ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>';\n    var path = '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n        ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>';\n    var viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"';\n    var width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" ';\n    var svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n';\n    if (typeof cb === 'function') {\n        cb(null, svgTag);\n    }\n    return svgTag;\n};\nvar svgTag = {\n    render: render\n};\nfunction renderCanvas(renderFunc, canvas, text, opts, cb) {\n    var args = [].slice.call(arguments, 1);\n    var argsNum = args.length;\n    var isLastArgCb = typeof args[argsNum - 1] === 'function';\n    if (!isLastArgCb && !canPromise()) {\n        throw new Error('Callback required as last argument');\n    }\n    if (isLastArgCb) {\n        if (argsNum < 2) {\n            throw new Error('Too few arguments provided');\n        }\n        if (argsNum === 2) {\n            cb = text;\n            text = canvas;\n            canvas = opts = undefined;\n        }\n        else if (argsNum === 3) {\n            if (canvas.getContext && typeof cb === 'undefined') {\n                cb = opts;\n                opts = undefined;\n            }\n            else {\n                cb = opts;\n                opts = text;\n                text = canvas;\n                canvas = undefined;\n            }\n        }\n    }\n    else {\n        if (argsNum < 1) {\n            throw new Error('Too few arguments provided');\n        }\n        if (argsNum === 1) {\n            text = canvas;\n            canvas = opts = undefined;\n        }\n        else if (argsNum === 2 && !canvas.getContext) {\n            opts = text;\n            text = canvas;\n            canvas = undefined;\n        }\n        return new Promise(function (resolve, reject) {\n            try {\n                var data = qrcode.create(text, opts);\n                resolve(renderFunc(data, canvas, opts));\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    try {\n        var data = qrcode.create(text, opts);\n        cb(null, renderFunc(data, canvas, opts));\n    }\n    catch (e) {\n        cb(e);\n    }\n}\nvar create$1 = qrcode.create;\nvar toCanvas = renderCanvas.bind(null, canvas.render);\nvar toDataURL = renderCanvas.bind(null, canvas.renderToDataURL);\n// only svg for now.\nvar toString_1 = renderCanvas.bind(null, function (data, _, opts) {\n    return svgTag.render(data, opts);\n});\nvar browser = {\n    create: create$1,\n    toCanvas: toCanvas,\n    toDataURL: toDataURL,\n    toString: toString_1\n};\nvar amplifyTotpSetupCss = \".totp-setup{text-align:center;margin-bottom:30px}.totp-setup img{height:128px;width:128px}\";\nvar logger = new Logger('TOTP');\nvar AmplifyTOTPSetup = /** @class */ (function () {\n    function class_1(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputProps = {\n            autoFocus: true,\n        };\n        /** Auth state change handler for this component */\n        this.handleAuthStateChange = dispatchAuthStateChangeEvent;\n        /** Used for header text in totp setup component */\n        this.headerText = Translations.TOTP_HEADER_TEXT;\n        /** Used for customizing the issuer string in the qr code image */\n        this.issuer = Translations.TOTP_ISSUER;\n        this.code = null;\n        this.setupMessage = null;\n        this.qrCodeInput = null;\n        this.loading = false;\n    }\n    class_1.prototype.componentWillLoad = function () {\n        this.setup();\n    };\n    class_1.prototype.buildOtpAuthPath = function (user, issuer, secretKey) {\n        return \"otpauth://totp/\" + issuer + \":\" + user.username + \"?secret=\" + secretKey + \"&issuer=\" + issuer;\n    };\n    class_1.prototype.onTOTPEvent = function (event, data, user) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        logger.debug('on totp event', event, data);\n                        if (!(event === SETUP_TOTP && data === SUCCESS)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, checkContact(user, this.handleAuthStateChange)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.handleTotpInputChange = function (event) {\n        this.setupMessage = null;\n        this.qrCodeInput = event.target.value;\n    };\n    class_1.prototype.generateQRCode = function (codeFromTotp) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, error_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        _b.trys.push([0, 2, , 3]);\n                        _a = this;\n                        return [4 /*yield*/, browser.toDataURL(codeFromTotp)];\n                    case 1:\n                        _a.qrCodeImageSource = _b.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        error_1 = _b.sent();\n                        dispatchToastHubEvent(error_1);\n                        return [3 /*break*/, 3];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.setup = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var encodedIssuer, secretKey, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.setupMessage = null;\n                        encodedIssuer = encodeURI(I18n.get(this.issuer));\n                        if (!Auth || typeof Auth.setupTOTP !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        this.loading = true;\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, 4, 5]);\n                        return [4 /*yield*/, Auth.setupTOTP(this.user)];\n                    case 2:\n                        secretKey = _a.sent();\n                        logger.debug('secret key', secretKey);\n                        this.code = this.buildOtpAuthPath(this.user, encodedIssuer, secretKey);\n                        this.generateQRCode(this.code);\n                        return [3 /*break*/, 5];\n                    case 3:\n                        error_2 = _a.sent();\n                        dispatchToastHubEvent(error_2);\n                        logger.debug(I18n.get(Translations.TOTP_SETUP_FAILURE), error_2);\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.loading = false;\n                        return [7 /*endfinally*/];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.verifyTotpToken = function (event) {\n        return __awaiter(this, void 0, void 0, function () {\n            var user, error_3;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event) {\n                            event.preventDefault();\n                        }\n                        if (!this.qrCodeInput) {\n                            logger.debug('No TOTP Code provided');\n                            return [2 /*return*/];\n                        }\n                        user = this.user;\n                        if (!Auth || typeof Auth.verifyTotpToken !== 'function' || typeof Auth.setPreferredMFA !== 'function') {\n                            throw new Error(NO_AUTH_MODULE_FOUND);\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 5, , 6]);\n                        return [4 /*yield*/, Auth.verifyTotpToken(user, this.qrCodeInput)];\n                    case 2:\n                        _a.sent();\n                        return [4 /*yield*/, Auth.setPreferredMFA(user, MfaOption.TOTP)];\n                    case 3:\n                        _a.sent();\n                        this.setupMessage = I18n.get(Translations.TOTP_SUCCESS_MESSAGE);\n                        logger.debug(I18n.get(Translations.TOTP_SUCCESS_MESSAGE));\n                        return [4 /*yield*/, this.onTOTPEvent(SETUP_TOTP, SUCCESS, user)];\n                    case 4:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 5:\n                        error_3 = _a.sent();\n                        this.setupMessage = I18n.get(Translations.TOTP_SETUP_FAILURE);\n                        logger.error(error_3);\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    // TODO add Toast component to the Top of the form section\n    class_1.prototype.render = function () {\n        var _this = this;\n        return (h(\"amplify-form-section\", { headerText: I18n.get(this.headerText), submitButtonText: I18n.get(Translations.TOTP_SUBMIT_BUTTON_TEXT), handleSubmit: function (event) { return _this.verifyTotpToken(event); }, loading: this.loading }, h(\"div\", { class: \"totp-setup\" }, h(\"img\", { src: this.qrCodeImageSource, alt: I18n.get(Translations.QR_CODE_ALT) }), h(\"amplify-form-field\", { label: I18n.get(Translations.TOTP_LABEL), inputProps: this.inputProps, fieldId: \"totpCode\", name: \"totpCode\", handleInputChange: function (event) { return _this.handleTotpInputChange(event); } }))));\n    };\n    return class_1;\n}());\nAmplifyTOTPSetup.style = amplifyTotpSetupCss;\nexport { AmplifyRadioButton as amplify_radio_button, AmplifyTOTPSetup as amplify_totp_setup };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Logger, isEmpty } from '@aws-amplify/core';\nimport { A as AuthState, C as ChallengeName } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { N as NO_AUTH_MODULE_FOUND } from './constants-d1abe7de.js';\nimport { a as dispatchToastHubEvent } from './helpers-01ecf5f9.js';\nvar logger = new Logger('auth-helpers');\nfunction checkContact(user, handleAuthStateChange) {\n    return __awaiter(this, void 0, void 0, function () {\n        var data, newUser, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!Auth || typeof Auth.verifiedContact !== 'function') {\n                        throw new Error(NO_AUTH_MODULE_FOUND);\n                    }\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4 /*yield*/, Auth.verifiedContact(user)];\n                case 2:\n                    data = _a.sent();\n                    if (!isEmpty(data.verified) || isEmpty(data.unverified)) {\n                        handleAuthStateChange(AuthState.SignedIn, user);\n                    }\n                    else {\n                        newUser = Object.assign(user, data);\n                        handleAuthStateChange(AuthState.VerifyContact, newUser);\n                    }\n                    return [3 /*break*/, 4];\n                case 3:\n                    error_1 = _a.sent();\n                    dispatchToastHubEvent(error_1);\n                    return [3 /*break*/, 4];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\nvar handleSignIn = function (username, password, handleAuthStateChange) { return __awaiter(void 0, void 0, void 0, function () {\n    var user, error_2;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!Auth || typeof Auth.signIn !== 'function') {\n                    throw new Error(NO_AUTH_MODULE_FOUND);\n                }\n                _a.label = 1;\n            case 1:\n                _a.trys.push([1, 9, , 10]);\n                return [4 /*yield*/, Auth.signIn(username, password)];\n            case 2:\n                user = _a.sent();\n                logger.debug(user);\n                if (!(user.challengeName === ChallengeName.SMSMFA || user.challengeName === ChallengeName.SoftwareTokenMFA)) return [3 /*break*/, 3];\n                logger.debug('confirm user with ' + user.challengeName);\n                handleAuthStateChange(AuthState.ConfirmSignIn, user);\n                return [3 /*break*/, 8];\n            case 3:\n                if (!(user.challengeName === ChallengeName.NewPasswordRequired)) return [3 /*break*/, 4];\n                logger.debug('require new password', user.challengeParam);\n                handleAuthStateChange(AuthState.ResetPassword, user);\n                return [3 /*break*/, 8];\n            case 4:\n                if (!(user.challengeName === ChallengeName.MFASetup)) return [3 /*break*/, 5];\n                logger.debug('TOTP setup', user.challengeParam);\n                handleAuthStateChange(AuthState.TOTPSetup, user);\n                return [3 /*break*/, 8];\n            case 5:\n                if (!(user.challengeName === ChallengeName.CustomChallenge &&\n                    user.challengeParam &&\n                    user.challengeParam.trigger === 'true')) return [3 /*break*/, 6];\n                logger.debug('custom challenge', user.challengeParam);\n                handleAuthStateChange(AuthState.CustomConfirmSignIn, user);\n                return [3 /*break*/, 8];\n            case 6: return [4 /*yield*/, checkContact(user, handleAuthStateChange)];\n            case 7:\n                _a.sent();\n                _a.label = 8;\n            case 8: return [3 /*break*/, 10];\n            case 9:\n                error_2 = _a.sent();\n                dispatchToastHubEvent(error_2);\n                if (error_2.code === 'UserNotConfirmedException') {\n                    logger.debug('the user is not confirmed');\n                    handleAuthStateChange(AuthState.ConfirmSignUp, { username: username });\n                }\n                else if (error_2.code === 'PasswordResetRequiredException') {\n                    logger.debug('the user requires a new password');\n                    handleAuthStateChange(AuthState.ForgotPassword, { username: username });\n                }\n                return [3 /*break*/, 10];\n            case 10: return [2 /*return*/];\n        }\n    });\n}); };\nexport { checkContact as c, handleSignIn as h };\n"],"sourceRoot":""}