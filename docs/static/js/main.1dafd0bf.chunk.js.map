{"version":3,"sources":["Utils.js","Header/HeaderUtils.js","Api/UserAuthApi.js","Header/HeaderState.js","Header/RegisterForm.js","Header/LoginForm.js","Header/UserMenu.js","Header/HeaderAuth.js","Header/Header.js","Home/CpNotes.js","Home/Home.js","UserProfile/UserInfo.js","SearchSelect/SearchSelect.js","Api/ApiConstants.js","Api/Api.js","Api/ProblemsApi.js","UserProfile/AddProblemForm.js","Api/NotesApi.js","UserProfile/UserProblems.js","Api/UserApi.js","UserProfile/UserInfoState.js","UserProfile/UserProfile.js","EditNote/EditNoteState.js","TextEditor/Caret.js","TextEditor/VirtualTextEditor.js","TextEditor/TextEditor.js","EditNote/EditNoteForm.js","EditNote/ProblemInfo.js","EditNote/EditNote.js","App.js","serviceWorker.js","index.js"],"names":["Utils","component","stateObject","Promise","resolve","reject","setState","object","property","hasOwnProperty","message","setError","setStatePromise","error","setSuccess","success","window","MathJax","typesetPromise","HeaderUtils","password","confirmPassword","componentSetError","length","UserAuthApi","Auth","currentAuthenticatedUser","username","email","signUp","attributes","info","codeDeliveryDetails","Destination","code","confirmSignUp","resendSignUp","CodeDeliveryDetails","forgotPassword","forgotPasswordSubmit","signIn","signOut","profile","getProfile","currentSession","getSignInUserSession","accessToken","getAccessToken","getJwtToken","HeaderState","Object","freeze","LOGIN","RECOVERY_USERNAME","RECOVERY_PASSWORD","RECOVERY_SUCCESS","REGISTER","REGISTER_VERIFY","REGISTER_SUCCESS","RegisterForm","props","screen","unverifiedAccountUsername","state","destination","unverifiedAccountDestination","close","bind","register","verifyEmail","resendVerificationEmail","this","exitCallback","startsWith","substring","event","preventDefault","form","target","value","checkPasswords","componentSetSuccess","currentForm","createAccountForm","className","onSubmit","htmlFor","autoComplete","type","name","id","verifyEmailForm","key","onClick","emailVerifiedBox","Component","LoginForm","login","enablePasswordRecovery","resetPassword","emailVerificationCallback","componentsSetError","loginForm","recoveryUsernameForm","recoveryPasswordForm","recoveryPasswordSuccess","UserMenu","logout","logoutCallback","closeCallback","to","HeaderAuth","showRegisterForm","showLoginForm","showUserMenu","refreshUsername","toggleRegisterForm","toggleLoginForm","toggleUserMenu","hideUserMenu","afterLogin","unverifiedAccount","getUsername","focusedElement","relatedTarget","classList","contains","loggedIn","loginButtons","loggedInButton","tabIndex","onBlur","topRightButtons","Header","path","useLocation","pathname","small","outerClassName","CpNotes","renderMathJax","Home","UserInfo","SearchSelect","loading","searchTerm","previousValidSearchTerm","showOptions","options","filteredOptions","handleChange","handleBlur","handleFocus","handleOptionSelect","option","optionStringArray","keys","push","join","toLowerCase","getOptionString","includes","prevProps","staticKey","search","filterOptions","sortKey","optionString","callback","optionElements","displayString","displayKey","onChange","onFocus","disabled","ApiConstants","API_ENDPOINT","Api","err","Error","response","status","json","responseJson","createApiError","resource","queryString","stringify","fetch","headers","Authorization","manageResponseError","method","body","JSON","ProblemsApi","problems","i","prettySk","sk","replaceAll","platform","getJson","contestId","_prettifyProblems","problemId","AddProblemForm","contestSortKey","problemSortKey","skipContestSearch","handlePlatformChange","toggleSkipContestSearch","updateProblemSortKey","updateContestSortKey","addProblem","searchContestFunction","searchContestKey","getContests","searchProblemFunction","searchProblemKey","getProblems","skipButtonText","defaultValue","NotesApi","postJson","UserProblems","showAddProblemForm","toggleAddProblemForm","formComponent","addNote","problemUrl","replace","history","UserApi","UserProfileState","LOADING","DONE","NOT_FOUND","UserProfile","UserInfoState","match","params","getUserInfo","loadUserInfo","content","loadedContent","userNotFoundContent","EditNoteState","Caret","a","b","c","d","selection","getSelection","anchorElement","anchorNode","parentElement","focusElement","focusNode","anchorIndex","Number","getAttribute","focusIndex","anchorOffset","focusOffset","rangeSelect","index","position","leftIndex","leftPosition","rightIndex","rightPosition","textNode","document","getElementById","childNodes","range","createRange","setStart","collapse","removeAllRanges","addRange","VirtualTextEditor","characters","globalCaretPosition","updateBlocks","charactersScanned","blocks","block","insertedString","mask","globalCharacterIndex","blockStarts","characterMask","m","rightBuffer","splice","char","character","getVirtualCaretIndex","globalLeftIndex","deleteLength","currentMask","buffer","forEach","TextEditor","uniqueKey","virtualTextEditor","caret","getContent","caretInfo","getInfo","delete","newCaretIndex","newCaretPosition","updateText","updatePosition","newString","insert","textEditor","addEventListener","newChar","contentElements","contentEditable","suppressContentEditableWarning","spellCheck","EditNoteForm","ProblemInfo","problemCode","problemName","contestName","href","link","EditNote","problemInfo","getProblemInfo","loadProblemInfo","App","exact","Boolean","location","hostname","Amplify","configure","amplify_config","add","keyCode","remove","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.1dafd0bf.chunk.js","sourcesContent":["class Utils {\n  static async setStatePromise(component, stateObject) {\n    return new Promise((resolve, reject) => {\n      component.setState(stateObject, () => {\n        resolve();\n      });\n    });\n  }\n\n  static isEmpty(object) {\n    for(const property in object) {\n      if(object.hasOwnProperty(property))\n        return false;\n    }\n    return true;\n  }\n\n  static async componentSetError(component, message) {\n    if(component.setError) {\n      await component.setError(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: `Error: ${message}`\n      });\n    }\n  }\n\n  static async componentSetSuccess(component, message) {\n    if(component.setSuccess) {\n      await component.setSuccess(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: '',\n        success: message\n      });\n    }\n  }\n\n  static async renderMathJax() {\n    if(window.MathJax) {\n      await window.MathJax.typesetPromise();\n    }\n  }\n}\n\nexport default Utils;\n","import Utils from '../Utils';\n\nconst MIN_PASSWORD_LENGTH = 6;\n\nclass HeaderUtils {\n  static async checkPasswords(component, password, confirmPassword) {\n    if(password !== confirmPassword) {\n      await Utils.componentSetError(component, \"Your passwords don't match!\");\n      return false;\n    }\n\n    if(password.length < MIN_PASSWORD_LENGTH) {\n      await Utils.componentSetError(component, 'Your password is too short!');\n      return false;\n    }\n\n    return true;\n  }\n}\n\nexport default HeaderUtils;\n","import { Auth } from 'aws-amplify';\n\nclass UserAuthApi {\n  static async getProfile() {\n    try {\n      return await Auth.currentAuthenticatedUser();\n    }\n    catch(err) {\n      // currentAuthenticatedUser() throws this error if the user is not logged in\n      return null;\n    }\n  }\n\n  static async register(username, email, password) {\n    const info = await Auth.signUp({\n      username,\n      password,\n      attributes: {\n        email: email\n      }\n    });\n\n    // I like how Amplify makes this one inconsistently lowercase... lol\n    return info.codeDeliveryDetails.Destination;\n  }\n\n  static async verifyEmail(username, code) {\n    await Auth.confirmSignUp(username, code);\n  }\n\n  static async resendVerificationEmail(username) {\n    const info = await Auth.resendSignUp(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async forgotPassword(username) {\n    const info = await Auth.forgotPassword(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async resetPassword(username, code, password) {\n    await Auth.forgotPasswordSubmit(username, code, password);\n  }\n\n  static async login(username, password) {\n    await Auth.signIn(username, password);\n  }\n\n  static async logout() {\n    await Auth.signOut();\n    UserAuthApi.profile = null;\n  }\n\n  static async getUsername() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    return profile.username;\n  }\n\n  static async getAccessToken() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    const currentSession = profile.getSignInUserSession();\n    const accessToken = currentSession.getAccessToken();\n    return accessToken.getJwtToken();\n  }\n}\n\nexport default UserAuthApi;\n","const HeaderState = Object.freeze({\n  LOGIN: 0,\n  RECOVERY_USERNAME: 1,\n  RECOVERY_PASSWORD: 2,\n  RECOVERY_SUCCESS: 3,\n  REGISTER: 4,\n  REGISTER_VERIFY: 5,\n  REGISTER_SUCCESS: 6\n});\n\nexport default HeaderState;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\nimport '../css/RegisterForm.css';\n\nconst USERNAME_MIN_LENGTH = 3;\nconst USERNAME_MAX_LENGTH = 20;\nconst ERROR_TRIGGER_PREFIX = 'PreSignUp failed with error';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const screen = props.unverifiedAccountUsername ?\n                   HeaderState.REGISTER_VERIFY : HeaderState.REGISTER;\n    this.state = {\n      error: '',\n      success: '',\n      username: props.unverifiedAccountUsername,\n      destination: props.unverifiedAccountDestination,\n      screen: screen\n    };\n\n    this.close = this.close.bind(this);\n    this.register = this.register.bind(this);\n    this.verifyEmail = this.verifyEmail.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async setError(message) {\n    if(message.startsWith(ERROR_TRIGGER_PREFIX)) {\n      message = message.substring(\n        ERROR_TRIGGER_PREFIX.length, message.length - 1\n      );\n    }\n\n    await Utils.setStatePromise(this, {\n      error: `Error: ${message}`,\n      success: ''\n    });\n  }\n\n  async register(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const email = form.email.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!username || !email || !password || !confirmPassword) {\n      await this.setError('Please fill out all of the fields.')\n      return;\n    }\n\n    if(username.length < USERNAME_MIN_LENGTH || username.length > USERNAME_MAX_LENGTH) {\n      await this.setError(\n        `Your username must be between ${USERNAME_MIN_LENGTH} ` +\n        `and ${USERNAME_MAX_LENGTH} characters!`\n      );\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      const destination = await UserAuthApi.register(username, email, password);\n      Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.REGISTER_VERIFY\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async verifyEmail(event) {\n    event.preventDefault();\n\n    const code = event.target.code.value;\n    try {\n      await UserAuthApi.verifyEmail(this.state.username, code);\n      Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.REGISTER_SUCCESS\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.resendVerificationEmail(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  render() {\n    const createAccountForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Create an account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.register}>\n          <label htmlFor=\"register-username\">Username</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 id=\"register-username\" />\n\n          <label htmlFor=\"register-email\">Email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"email\"\n                 id=\"register-email\" />\n\n          <label htmlFor=\"register-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 id=\"register-password\" />\n\n          <label htmlFor=\"register-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 id=\"register-confirm-password\" />\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Register\" />\n        </form>\n      </div>\n    );\n\n    const verifyEmailForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Verify your email!</h2>\n        <p>\n          You should've received an email at {this.state.destination} with a\n          verification code. If it isn't convenient for you to verify your\n          account now, you may do so later by logging in.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.verifyEmail}>\n          <label htmlFor=\"verification-code\">Verification code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"verification-code\" id=\"verification-code\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const emailVerifiedBox = (\n      <div className=\"Register-form Module-popup\">\n        <h2>Verification success!</h2>\n        <p className=\"Module-popup-last\">\n          Your email was successfully verified! Click the 'X' button in the\n          top-right corner to return to the site, and you'll be able to login.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.REGISTER:\n        currentForm = createAccountForm;\n        break;\n      case HeaderState.REGISTER_VERIFY:\n        currentForm = verifyEmailForm;\n        break;\n      case HeaderState.REGISTER_SUCCESS:\n        currentForm = emailVerifiedBox;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      username: null,\n      destination: null,\n      screen: props.screen || HeaderState.LOGIN\n    }\n\n    this.close = this.close.bind(this);\n    this.login = this.login.bind(this);\n    this.enablePasswordRecovery = this.enablePasswordRecovery.bind(this);\n    this.forgotPassword = this.forgotPassword.bind(this);\n    this.resetPassword = this.resetPassword.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback(false);\n  }\n\n  async login(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const password = form.password.value;\n\n    if(!username || !password) {\n      await Utils.componentSetError(this, \"Please fill out all of the fields.\");\n      return;\n    }\n\n    try {\n      try {\n        await UserAuthApi.login(username, password);\n        this.props.exitCallback(true);\n      }\n      catch(err) {\n        if(err.code === 'UserNotConfirmedException') {\n          const destination = await UserAuthApi.resendVerificationEmail(username);\n          await this.props.emailVerificationCallback(username, destination);\n        }\n        else {\n          throw err;\n        }\n      }\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async enablePasswordRecovery(event) {\n    await Utils.setStatePromise(this, {\n      error: '',\n      screen: HeaderState.RECOVERY_USERNAME\n    });\n  }\n\n  async forgotPassword(event) {\n    event.preventDefault();\n\n    const username = event.target.username.value;\n    if(!username) {\n      Utils.componentsSetError(this, 'Please input your username.');\n      return;\n    }\n\n    try {\n      const destination = await UserAuthApi.forgotPassword(username);\n      Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.RECOVERY_PASSWORD\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async resetPassword(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const code = form.code.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!code || !password || !confirmPassword) {\n      Utils.componentSetError(this, 'Please fill out all of the fields.');\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      await UserAuthApi.resetPassword(this.state.username, code, password);\n      await Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.RECOVERY_SUCCESS\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.forgotPassword(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  render() {\n    const loginForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Login to your account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.login}>\n          <label htmlFor=\"login-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"login-username\" id=\"login-username\" />\n\n          <label htmlFor=\"login-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"login-password\" id=\"login-password\" />\n\n          <button type=\"button\" onClick={this.enablePasswordRecovery}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Forgot your password?\n          </button>\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    );\n\n    const recoveryUsernameForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          Please provide your username or email, so that you can reset your\n          password via an emailed confirmation code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.forgotPassword}>\n          <label htmlFor=\"reset-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"reset-username\" id=\"reset-username\" />\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          You should've received an email at { this.state.destination } with a\n          verification code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.resetPassword}>\n          <label htmlFor=\"reset-code\">Code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"reset-code\" id=\"reset-code\" />\n\n          <label htmlFor=\"reset-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"reset-password\" id=\"reset-password\" />\n\n          <label htmlFor=\"reset-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 key=\"reset-confirm-password\" id=\"reset-confirm-password\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordSuccess= (\n      <div className=\"Register-form Module-popup\">\n        <h2>Password reset success!</h2>\n        <p>\n          Your password has been reset successfully. You'll now be able to\n          login again.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.LOGIN:\n        currentForm = loginForm;\n        break;\n      case HeaderState.RECOVERY_USERNAME:\n        currentForm = recoveryUsernameForm;\n        break;\n      case HeaderState.RECOVERY_PASSWORD:\n        currentForm = recoveryPasswordForm;\n        break;\n      case HeaderState.RECOVERY_SUCCESS:\n        currentForm = recoveryPasswordSuccess;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/UserMenu.css'\n\nclass UserMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = this.logout.bind(this);\n  }\n\n  async logout() {\n    await UserAuthApi.logout();\n    await this.props.logoutCallback();\n  }\n\n  render() {\n    return (\n      <div className=\"User-menu\">\n        <ol>\n          <li>\n            <Link className=\"Header-menu-button\" onClick={this.props.closeCallback}\n                  to={`/users/${this.props.username}`}>\n                  Your profile\n            </Link>\n          </li>\n          <div className=\"User-menu-divider\"></div>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\">\n              Settings\n            </button>\n          </li>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\" onClick={this.logout}>\n              Logout\n            </button>\n          </li>\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default UserMenu;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport UserMenu from './UserMenu';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nclass HeaderAuth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      showRegisterForm: false,\n      showLoginForm: false,\n      showUserMenu: false,\n      unverifiedAccountUsername: null,\n      unverifiedAccountDestination: null\n    };\n\n    this.refreshUsername = this.refreshUsername.bind(this);\n    this.toggleRegisterForm = this.toggleRegisterForm.bind(this);\n    this.toggleLoginForm = this.toggleLoginForm.bind(this);\n    this.toggleUserMenu = this.toggleUserMenu.bind(this);\n    this.hideUserMenu = this.hideUserMenu.bind(this);\n    this.afterLogin = this.afterLogin.bind(this);\n    this.unverifiedAccount = this.unverifiedAccount.bind(this);\n  }\n\n  async refreshUsername() {\n    const username = await UserAuthApi.getUsername();\n\n    await Utils.setStatePromise(this, {\n      username: username,\n      showUserMenu: false,\n      unverifiedAccountUsername: null\n    });\n  }\n\n  async componentDidMount() {\n    await this.refreshUsername();\n  }\n\n  async toggleRegisterForm(event) {\n    if(this.state.showRegisterForm) {\n      await Utils.setStatePromise(this, {\n        unverifiedAccountUsername: null,\n        unverifiedAccountDestination: null\n      });\n    }\n\n    await Utils.setStatePromise(this, {\n      showRegisterForm: !this.state.showRegisterForm\n    });\n  }\n\n  async toggleLoginForm(event) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: !this.state.showLoginForm\n    });\n  }\n\n  async toggleUserMenu(event) {\n    await Utils.setStatePromise(this, {\n      showUserMenu: !this.state.showUserMenu\n    });\n  }\n\n  async hideUserMenu(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.classList.contains('Header-menu-button'))\n      return;\n\n    await Utils.setStatePromise(this, {\n      showUserMenu: false\n    });\n  }\n\n  async afterLogin(loggedIn) {\n    await this.toggleLoginForm();\n\n    if(loggedIn)\n      await this.refreshUsername();\n  }\n\n  async unverifiedAccount(username, destination) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: false,\n      showRegisterForm: true,\n      unverifiedAccountUsername: username,\n      unverifiedAccountDestination: destination\n    });\n  }\n\n  render() {\n    const loginButtons = (\n      <div className=\"Header-top-right\">\n        <button className=\"Header-menu-button\" onClick={this.toggleLoginForm}>\n          Login\n        </button>\n        <span className=\"Header-divider\"></span>\n        <button className=\"Header-menu-button\" onClick={this.toggleRegisterForm}>\n          Create an account\n        </button>\n      </div>\n    );\n\n    const loggedInButton = (\n      <div className=\"Header-logged-in\" tabIndex=\"-1\"\n           onBlur={this.hideUserMenu}>\n        <div className=\"Header-top-right\">\n          <button className=\"Header-menu-button\" onClick={this.toggleUserMenu}>\n            { this.state.username }\n          </button>\n        </div>\n        <div className=\"Header-user-menu\">\n          {\n            this.state.showUserMenu &&\n            <UserMenu username={this.state.username}\n                      closeCallback={this.toggleUserMenu}\n                      logoutCallback={this.refreshUsername} />\n          }\n        </div>\n      </div>\n    );\n\n    const topRightButtons = this.state.username ? loggedInButton : loginButtons;\n\n    return (\n      <>\n        {\n          this.state.showRegisterForm &&\n          <RegisterForm exitCallback={this.toggleRegisterForm}\n                        unverifiedAccountUsername=\n                        {this.state.unverifiedAccountUsername}\n                        unverifiedAccountDestination=\n                        {this.state.unverifiedAccountDestination} />\n        }\n        {\n          this.state.showLoginForm &&\n          <LoginForm exitCallback={this.afterLogin}\n                     emailVerificationCallback={this.unverifiedAccount} />\n        }\n        { topRightButtons }\n      </>\n    );\n  }\n}\n\nexport default HeaderAuth;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport HeaderAuth from './HeaderAuth';\nimport '../css/Header.css';\n\nfunction Header() {\n  const path = useLocation().pathname;\n  const small = (path === '/' || path === '/home');\n  const outerClassName = small ? 'Header' : 'Header-small';\n\n  return (\n    <div className={outerClassName}>\n      { small && <h1>cp-notes beta</h1> }\n      <ul>\n        <li>\n          <Link to=\"/home\">Home</Link>\n        </li>\n      </ul>\n      <HeaderAuth />\n      <span className=\"Header-bottom\"></span>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport '../css/CpNotes.css';\n\nclass CpNotes extends Component {\n  async componentDidMount() {\n    await Utils.renderMathJax();\n  }\n\n  render() {\n    return (\n      <div className=\"Module-wrapper\">\n        <div className=\"Module-description Module-description-centered\">\n          <p>A work-in-progress web application for storing publicly\n          accessible competitive programming notes! \\[\\LaTeX\\]</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CpNotes;\n","import React from 'react';\nimport CpNotes from '../Home/CpNotes';\n\nfunction Home() {\n  return (\n    <>\n      <CpNotes />\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction UserInfo({ info }) {\n  return (\n    <>\n      <h2 className=\"Module-heading\">{info.username}</h2>\n      {\n        info.email &&\n        <p>Email: {info.email} (only visible to you)</p>\n      }\n    </>\n  );\n}\n\nexport default UserInfo;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport '../css/SearchSelect.css';\n\nconst MAX_OPTIONS = 10;\nconst GLOBAL_SORT_KEY = 'sk';\n\nclass SearchSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchTerm: '',\n      previousValidSearchTerm: '',\n      showOptions: false,\n      options: [],\n      filteredOptions: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleOptionSelect = this.handleOptionSelect.bind(this);\n  }\n\n  getOptionString(option) {\n    const optionStringArray = [];\n    for(const key of this.props.keys)\n      optionStringArray.push(option[key]);\n\n    return optionStringArray.join(' - ');\n  }\n\n  async filterOptions() {\n    var filteredOptions = [];\n    const searchTerm = this.state.searchTerm.toLowerCase();\n\n    for(const option of this.state.options) {\n      if(filteredOptions.length === MAX_OPTIONS)\n        break;\n\n      const optionString = this.getOptionString(option);\n      if(optionString.toLowerCase().includes(searchTerm)) {\n        filteredOptions.push(option);\n        continue;\n      }\n\n      for(const key of this.props.keys) {\n        if(option[key].toLowerCase().includes(searchTerm)) {\n          filteredOptions.push(option);\n          break;\n        }\n      }\n    }\n\n    await Utils.setStatePromise(this, {\n      filteredOptions: filteredOptions\n    });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.staticKey && !this.props.staticKey) {\n      await Utils.setStatePromise(this, {\n        searchTerm: ''\n      });\n      return;\n    }\n\n    if(this.props.staticKey === prevProps.staticKey)\n      return;\n\n    await Utils.setStatePromise(this, {\n      searchTerm: '',\n      loading: true\n    });\n    const options = await this.props.search();\n\n    await Utils.setStatePromise(this, {\n      loading: false,\n      previousValidSearchTerm: '',\n      options: options,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleChange(event) {\n    await Utils.setStatePromise(this, {\n      searchTerm: event.target.value,\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleBlur(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.id === `Select-options-${this.props.name}`)\n      return;\n\n    await Utils.setStatePromise(this, {\n      showOptions: false,\n      searchTerm: this.state.previousValidSearchTerm\n    });\n  }\n\n  async handleFocus(event) {\n    await Utils.setStatePromise(this, {\n      showOptions: true\n    });\n  }\n\n  async handleOptionSelect(sortKey, optionString) {\n    await Utils.setStatePromise(this, {\n      searchTerm: optionString,\n      previousValidSearchTerm: optionString,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n    this.props.callback(sortKey);\n  }\n\n  render() {\n    var optionElements = [];\n    for(const option of this.state.filteredOptions) {\n      const optionString = this.getOptionString(option);\n      const displayString = option[this.props.displayKey];\n      const sortKey = option[GLOBAL_SORT_KEY];\n      optionElements.push(\n        <li onClick={() => this.handleOptionSelect(sortKey, displayString)}\n            key={sortKey}>\n            {optionString}\n        </li>\n      );\n    }\n\n    return (\n      <div onBlur={this.handleBlur} className=\"Search-select\">\n        <input className={this.state.loading ? \"Askd-form-loading\" : \"\"}\n               onChange={this.handleChange} autoComplete=\"off\" type=\"text\"\n               value={this.state.searchTerm} onFocus={this.handleFocus}\n               name={this.props.name} id={this.props.id}\n               disabled={!this.props.search || this.state.loading} />\n        {\n          optionElements.length > 0 && this.state.showOptions &&\n          <ol id={`Select-options-${this.props.name}`} tabIndex=\"-1\"\n              className=\"Search-select-options\">\n            { optionElements }\n          </ol>\n        }\n      </div>\n    );\n  }\n}\n\nexport default SearchSelect;\n","const ApiConstants = Object.freeze({\n  API_ENDPOINT: 'https://qqmeusmrfk.execute-api.us-east-1.amazonaws.com/prod/'\n});\n\nexport default ApiConstants;\n","import queryString from 'query-string';\nimport ApiConstants from './ApiConstants';\nimport UserAuthApi from './UserAuthApi';\n\nclass Api {\n  static createApiError(name, message) {\n    const err = Error(message);\n    err.name = name;\n\n    return err;\n  }\n\n  static async manageResponseError(response) {\n    if(response.status === 400) {\n      const responseJson = await response.json();\n      throw Api.createApiError(responseJson.name, responseJson.message);\n    }\n    else if(response.status !== 200) {\n      throw Error('Request failed!');\n    }\n  }\n\n  static async getJson(resource, options) {\n    const path = `${resource}?${queryString.stringify(options)}`;\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + path, {\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async postJson(resource, options) {\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + resource, {\n      method: 'POST',\n      body: JSON.stringify(options),\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n}\n\nexport default Api;\n","import Api from './Api';\n\nclass ProblemsApi {\n  static _prettifyProblems(problems) {\n    for(let i = 0; i < problems.length; i++) {\n      problems[i].prettySk = problems[i].sk.replaceAll('#', '');\n    }\n  }\n\n  static async getContests(platform) {\n    const options = {\n      platform: platform\n    };\n\n    return await Api.getJson('contests', options);\n  }\n\n  static async getProblems(platform, contestId) {\n    const options = {\n      platform: platform,\n      contestId: contestId\n    };\n\n    let problems = await Api.getJson('problems', options);\n    ProblemsApi._prettifyProblems(problems);\n\n    return problems;\n  }\n\n  static async getProblemInfo(platform, problemId) {\n    const options = {\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.getJson('problems', options);\n  }\n}\n\nexport default ProblemsApi;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport SearchSelect from '../SearchSelect/SearchSelect';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport '../css/AddProblemForm.css';\n\nclass AddProblemForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      platform: null,\n      contestSortKey: null,\n      problemSortKey: null,\n      skipContestSearch: false\n    };\n\n    this.close = this.close.bind(this);\n    this.handlePlatformChange = this.handlePlatformChange.bind(this);\n    this.toggleSkipContestSearch = this.toggleSkipContestSearch.bind(this);\n    this.updateProblemSortKey = this.updateProblemSortKey.bind(this);\n    this.updateContestSortKey = this.updateContestSortKey.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  close() {\n    this.props.callback(null, null, null);\n  }\n\n  async handlePlatformChange(event) {\n    await Utils.setStatePromise(this, {\n      platform: event.target.value\n    });\n  }\n\n  async toggleSkipContestSearch(event) {\n    await Utils.setStatePromise(this, {\n      skipContestSearch: !this.state.skipContestSearch,\n      contestSortKey: null,\n      problemSortKey: null\n    });\n  }\n\n  async updateContestSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      contestSortKey: sortKey,\n      problemSortKey: null\n    });\n  }\n\n  async updateProblemSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      problemSortKey: sortKey\n    });\n  }\n\n  async addProblem(event) {\n    event.preventDefault();\n\n    if(!this.state.problemSortKey) {\n      await Utils.componentSetError(this, 'Please search and select a problem.');\n      return;\n    }\n\n    this.props.callback(this.state.problemSortKey, this.state.platform, this);\n  }\n\n  render() {\n    var searchContestFunction = null;\n    var searchContestKey = null;\n    if(this.state.platform && !this.state.skipContestSearch) {\n      searchContestFunction = () => ProblemsApi.getContests(this.state.platform);\n      searchContestKey = this.state.platform;\n    }\n\n    var searchProblemFunction = null;\n    var searchProblemKey = null;\n    if(this.state.platform && this.state.contestSortKey) {\n      searchProblemFunction = () =>\n        ProblemsApi.getProblems(this.state.platform, this.state.contestSortKey);\n      searchProblemKey = this.state.platform + this.state.contestSortKey;\n    }\n    else if(this.state.platform && this.state.skipContestSearch) {\n      searchProblemFunction = () => ProblemsApi.getProblems(this.state.platform);\n      searchProblemKey = this.state.platform;\n    }\n\n    var skipButtonText = this.state.skipContestSearch ?\n                         'Want to filter by contest?' :\n                         'Want to skip filtering by contest?';\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">\n                X\n        </button>\n        <div className=\"Add-problem-form Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Add a problem!</h2>\n          <form className=\"Askd-form\" onSubmit={this.addProblem}>\n            <label htmlFor=\"cp-platform\">Platform</label>\n            <select defaultValue=\"\" onChange={this.handlePlatformChange}\n                    name=\"platform\" id=\"cp-platform\">\n              <option disabled value=\"\"></option>\n              <option value=\"CodeForces\">CodeForces</option>\n              <option value=\"CodeChef\">CodeChef</option>\n            </select>\n\n            <label htmlFor=\"cp-contest\">Contest</label>\n            <SearchSelect name='contest' id='cp-contest' search={searchContestFunction}\n                          keys={['sk', 'name']} callback={this.updateContestSortKey}\n                          displayKey='name' staticKey={searchContestKey} />\n\n            <button onClick={this.toggleSkipContestSearch}\n                    type=\"button\" className=\"Askd-form-link Askd-form-link-separator\">\n              { skipButtonText }\n            </button>\n\n            <label htmlFor=\"cp-title\">Problem</label>\n            <SearchSelect name='title' id='cp-title' search={searchProblemFunction}\n                          keys={['prettySk', 'name']} callback={this.updateProblemSortKey}\n                          displayKey='name' staticKey={searchProblemKey} />\n\n            <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                   value=\"Add Problem\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddProblemForm;\n","import Api from './Api';\n\nclass NotesApi {\n  static async addNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.postJson('notes', options);\n  }\n}\n\nexport default NotesApi;\n","import React, { Component } from 'react';\nimport AddProblemForm from './AddProblemForm';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\n\nclass UserProblems extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAddProblemForm: false\n    };\n\n    this.toggleAddProblemForm = this.toggleAddProblemForm.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  async toggleAddProblemForm() {\n    Utils.setStatePromise(this, {\n      showAddProblemForm: !this.state.showAddProblemForm\n    });\n  }\n\n  async addProblem(problemSortKey, platform, formComponent) {\n    if(!problemSortKey) {\n      await this.toggleAddProblemForm();\n      return;\n    }\n\n    try {\n      const username = this.props.info.username;\n      await NotesApi.addNote(username, platform, problemSortKey);\n\n      const problemUrl = problemSortKey.replace('#', '/');\n      this.props.history.push(`/notes/edit/${platform}/${problemUrl}`);\n    }\n    catch(err) {\n      await Utils.componentSetError(formComponent, err.message);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h2 className=\"Module-heading\">Problems</h2>\n        {\n          this.state.showAddProblemForm &&\n          <AddProblemForm callback={this.addProblem} />\n        }\n        <div className=\"Cp-notes Module-space\">\n          <p>There's nothing to see here yet!</p>\n          {\n            this.props.info.email &&\n            <button onClick={this.toggleAddProblemForm}\n                    className=\"Cp-notes-add Askd-button Askd-button-circular\">\n              +\n            </button>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProblems;\n","import Api from './Api';\n\nclass UserApi {\n  static async getUserInfo(username) {\n    const options = {\n      username: username\n    };\n\n    return await Api.getJson('profile', options);\n  }\n}\n\nexport default UserApi;\n","const UserProfileState = Object.freeze({\n  LOADING: 0,\n  DONE: 1,\n  NOT_FOUND: 2\n});\n\nexport default UserProfileState;\n","import React, { Component } from 'react';\nimport UserInfo from './UserInfo';\nimport UserProblems from './UserProblems';\nimport UserApi from '../Api/UserApi';\nimport UserInfoState from './UserInfoState';\nimport Utils from '../Utils';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: UserInfoState.LOADING,\n      info: null\n    };\n  }\n\n  async loadUserInfo() {\n    try {\n      const username = this.props.match.params.username;\n      const info = await UserApi.getUserInfo(username);\n      await Utils.setStatePromise(this, {\n        screen: UserInfoState.DONE,\n        info: info\n      });\n    }\n    catch(err) {\n      if(err.name === 'UserNotFound') {\n        await Utils.setStatePromise(this, {\n          screen: UserInfoState.NOT_FOUND\n        });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadUserInfo();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.match.params.username !== this.props.match.params.username) {\n      await Utils.setStatePromise(this, {\n        screen: UserInfoState.LOADING,\n        info: null\n      });\n      await this.loadUserInfo();\n    }\n  }\n\n  render() {\n    const loadingContent = null;\n    const loadedContent = (\n      <>\n        <div className=\"Module-description\">\n          <UserInfo info={this.state.info} />\n        </div>\n        <UserProblems info={this.state.info} history={this.props.history} />\n      </>\n    );\n    const userNotFoundContent = (\n      <div className=\"Module-description\">\n        <h2>User not found!</h2>\n      </div>\n    );\n\n    var content;\n    switch(this.state.screen) {\n      case UserInfoState.LOADING:\n        content = loadingContent;\n        break;\n      case UserInfoState.DONE:\n        content = loadedContent;\n        break;\n      case UserInfoState.NOT_FOUND:\n        content = userNotFoundContent;\n        break;\n      default:\n    }\n\n    return (\n      <>\n        <div className=\"Module-wrapper\">\n          { content }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProfile;\n","const EditNoteState = Object.freeze({\n  LOADING: 0,\n  DONE: 1,\n  NOT_FOUND: 2\n});\n\nexport default EditNoteState;\n","function lessThan(a, b, c, d) {\n  if(a === c)\n    return b < d;\n  return a < c;\n}\n\nclass Caret {\n  constructor(id) {\n    this.id = id;\n  }\n\n  getInfo() {\n    const selection = window.getSelection();\n    const anchorElement = selection.anchorNode.parentElement;\n    const focusElement = selection.focusNode.parentElement;\n\n    let anchorIndex = Number(anchorElement.getAttribute('index'));\n    let focusIndex = Number(focusElement.getAttribute('index'));\n    let anchorOffset = selection.anchorOffset;\n    let focusOffset = selection.focusOffset;\n\n    if(anchorIndex === focusIndex && anchorOffset === focusOffset) {\n      return {\n        rangeSelect: false,\n        index: anchorIndex,\n        position: anchorOffset\n      };\n    }\n\n    if(!lessThan(anchorIndex, anchorOffset, focusIndex, focusOffset)) {\n      [ anchorIndex, focusIndex ] = [ focusIndex, anchorIndex ];\n      [ anchorOffset, focusOffset ] = [ focusOffset, anchorOffset ];\n    }\n\n    return {\n      rangeSelect: true,\n      leftIndex: anchorIndex,\n      leftPosition: anchorOffset,\n      rightIndex: focusIndex,\n      rightPosition: focusOffset\n    };\n  }\n\n  updatePosition(index, position) {\n    const blockElement = document.getElementById(this.id + index);\n    const textNode = blockElement.childNodes[0];\n\n    if(!textNode)\n      return;\n\n    let range = document.createRange();\n    range.setStart(textNode, position);\n    range.collapse(true);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport default Caret;\n","class VirtualTextEditor {\n  constructor() {\n    this.characters = [];\n    this.globalCaretPosition = 0;\n    this.updateBlocks();\n  }\n\n  getVirtualCaretIndex() {\n    let charactersScanned = 0;\n    for(let i = 0; i < this.blocks.length; i++) {\n      const block = this.blocks[i];\n      if(this.globalCaretPosition <= charactersScanned + block.c.length) {\n        return [ i, this.globalCaretPosition - charactersScanned ];\n      }\n      charactersScanned += block.c.length;\n    }\n\n    return [ null, null ];\n  }\n\n  insert(index, position, insertedString, mask) {\n    const globalCharacterIndex = this.blockStarts[index] + position;\n    const characterMask = mask || this.blocks[index].m;\n\n    const rightBuffer = this.characters.splice(globalCharacterIndex);\n    for(const char of insertedString) {\n      this.characters.push({\n        m: characterMask,\n        c: char\n      });\n    }\n\n    this.globalCaretPosition = this.characters.length;\n    for(const character of rightBuffer) {\n      this.characters.push(character);\n    }\n\n    this.updateBlocks();\n    return this.getVirtualCaretIndex();\n  }\n\n  delete(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const globalLeftIndex = this.blockStarts[leftIndex] + leftPosition;\n    const globalRightIndex = this.blockStarts[rightIndex] + rightPosition;\n    const deleteLength = globalRightIndex - globalLeftIndex;\n\n    if(globalLeftIndex < 0) {\n      return [ 0, 0 ];\n    }\n    \n    this.characters.splice(globalLeftIndex, deleteLength);\n    this.globalCaretPosition = globalLeftIndex;\n\n    this.updateBlocks();\n    return this.getVirtualCaretIndex();\n  }\n\n  updateBlocks() {\n    if(this.characters.length === 0) {\n      this.blocks = [\n        { m: 0, c: '' }\n      ];\n      this.blockStarts = [ 0 ];\n\n      return;\n    }\n\n    this.blocks = [];\n    this.blockStarts = [];\n\n    let currentMask = this.characters[0].m;\n    let buffer = '';\n    this.characters.forEach((character, i) => {\n      if(character.m !== currentMask) {\n        this.blocks.push({\n          m: currentMask,\n          c: buffer\n        });\n        this.blockStarts.push(i - buffer.length);\n\n        currentMask = character.m;\n        buffer = character.c;\n      }\n      else {\n        buffer += character.c;\n      }\n    });\n\n    this.blocks.push({\n      m: currentMask,\n      c: buffer\n    });\n    this.blockStarts.push(this.characters.length - buffer.length);\n  }\n\n  getContent() {\n    return this.blocks;\n  }\n}\n\nexport default VirtualTextEditor;\n","import React, { Component } from 'react';\nimport Caret from './Caret';\nimport VirtualTextEditor from './VirtualTextEditor';\nimport Utils from '../Utils';\nimport '../css/TextEditor.css';\n\nclass TextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.id = `Askd-text-editor${this.props.uniqueKey}`;\n    this.virtualTextEditor = new VirtualTextEditor();\n    this.caret = new Caret(this.id);\n\n    this.state = {\n      content: this.virtualTextEditor.getContent()\n    };\n  }\n\n  async delete() {\n    const caretInfo = this.caret.getInfo();\n\n    let newCaretIndex, newCaretPosition;\n    if(!caretInfo.rangeSelect) {\n      [ newCaretIndex, newCaretPosition ] = this.virtualTextEditor.delete(\n        caretInfo.index, caretInfo.position - 1,\n        caretInfo.index, caretInfo.position\n      );\n    }\n    else {\n      [ newCaretIndex, newCaretPosition ] = this.virtualTextEditor.delete(\n        caretInfo.leftIndex, caretInfo.leftPosition,\n        caretInfo.rightIndex, caretInfo.rightPosition\n      );\n    }\n\n    await this.updateText();\n    this.caret.updatePosition(newCaretIndex, newCaretPosition);\n  }\n\n  async insert(newString) {\n    const caretInfo = this.caret.getInfo();\n\n    let [ newCaretIndex, newCaretPosition ] = this.virtualTextEditor.insert(\n      caretInfo.index, caretInfo.position, newString\n    );\n\n    await this.updateText();\n    this.caret.updatePosition(newCaretIndex, newCaretPosition);\n  }\n\n  componentDidMount() {\n    this.textEditor = document.getElementById(this.id);\n\n    this.textEditor.addEventListener('keydown', async (event) => {\n      if(event.key === 'Backspace') {\n        await this.delete();\n\n        event.preventDefault();\n      }\n    });\n\n    this.textEditor.addEventListener('keypress', async (event) => {\n      const newChar = event.key;\n      const caretInfo = this.caret.getInfo();\n\n      if(newChar === 'Enter') {\n        // TBD\n        event.preventDefault();\n        return;\n      }\n\n      if(!caretInfo.rangeSelect) {\n        await this.insert(newChar);\n      }\n      else {\n        await this.delete();\n        await this.insert(newChar);\n      }\n\n      event.preventDefault();\n    });\n  }\n\n  async updateText() {\n    await Utils.setStatePromise(this, {\n      content: this.virtualTextEditor.getContent()\n    });\n  }\n\n  render() {\n    let contentElements = [];\n    this.state.content.forEach((block, i) => {\n      contentElements.push(\n        <div id={this.id + i} key={i} index={i}>\n          { block.c }\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"Askd-text-editor\">\n        <div className=\"Askd-text-editor-toolbar\">\n          <ul>\n            <li><button type=\"button\">Bold</button></li>\n          </ul>\n        </div>\n        <div className=\"Askd-text-editor-text\" id={this.id} tabIndex=\"0\"\n             contentEditable=\"true\" suppressContentEditableWarning={true}\n             spellCheck=\"false\">\n             { contentElements }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TextEditor;\n","import React, { Component } from 'react';\nimport TextEditor from '../TextEditor/TextEditor';\n\nclass EditNoteForm extends Component {\n  render() {\n    return (\n      <form className=\"Askd-form\">\n        <label htmlFor=\"notes\">Notes</label>\n        <TextEditor />\n      </form>\n    );\n  }\n}\n\nexport default EditNoteForm;\n","import React, { Component } from 'react';\n\nclass ProblemInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    return (\n      <div className=\"Edit-note-problem-info\">\n        {\n          info &&\n          <div className=\"Module-info-box\">\n            <h4>\n              {this.props.platform} {info.problemCode} - {info.problemName}\n            </h4>\n            <p className=\"Edit-note-contest\">{info.contestName}</p>\n            <a className=\"Askd-form-link\" href={info.link}>Problem link</a>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default ProblemInfo;\n","import React, { Component } from 'react';\nimport EditNoteState from './EditNoteState';\nimport EditNoteForm from './EditNoteForm';\nimport ProblemInfo from './ProblemInfo';\nimport ProblemsApi from '../Api/ProblemsApi'\nimport Utils from '../Utils';\nimport '../css/EditNote.css';\n\nclass EditNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: EditNoteState.LOADING,\n      problemInfo: null\n    };\n  }\n\n  async loadProblemInfo() {\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    const problemInfo = await ProblemsApi.getProblemInfo(platform, problemId);\n    await Utils.setStatePromise(this, {\n      problemInfo: problemInfo\n    });\n  }\n\n  async loadInfo() {\n    await this.loadProblemInfo();\n    await Utils.setStatePromise(this, {\n      screen: EditNoteState.DONE\n    });\n  }\n\n  async componentDidMount() {\n    await this.loadProblemInfo();\n  }\n\n  render() {\n    return (\n      <div className=\"Module-wrapper\">\n        <ProblemInfo info={this.state.problemInfo}\n                     platform={this.props.match.params.platform} />\n        <EditNoteForm />\n      </div>\n    );\n  }\n}\n\nexport default EditNote;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './Header/Header';\nimport Home from './Home/Home';\nimport UserProfile from './UserProfile/UserProfile';\nimport EditNote from './EditNote/EditNote';\n\nimport './css/App.css';\nimport './css/Module.css';\nimport './css/Form.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/users/:username\" component={UserProfile} />\n          <Route exact path=\"/notes/edit/:platform/:contestId/:problemCode\"\n                 component={EditNote} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Amplify from 'aws-amplify';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport amplify_config from './amplify_config';\n\nAmplify.configure(amplify_config);\n\ndocument.body.addEventListener('mousedown', (event) => {\n  document.body.classList.add('Global-mouse-click');\n});\n\ndocument.body.addEventListener('keydown', (event) => {\n  if(event.keyCode === 9) {\n    document.body.classList.remove('Global-mouse-click');\n  }\n});\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}