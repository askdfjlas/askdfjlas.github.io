{"version":3,"sources":["Utils.js","Header/HeaderUtils.js","Api/UserAuthApi.js","Header/HeaderState.js","Header/RegisterForm.js","Header/LoginForm.js","Header/UserMenu.js","Header/HeaderAuth.js","Header/Header.js","TextEditor/Caret.js","TextEditor/ContentType.js","TextEditor/Toolbar.js","TextEditor/MaskManager.js","TextEditor/VirtualTextEditor.js","TextEditor/Block/MathBlock.js","TextEditor/Block/Block.js","TextEditor/TextEditorContent.js","TextEditor/registerEventHandlers.js","TextEditor/TextEditor.js","Home/CpNotes.js","Home/Home.js","UserProfile/UserInfo.js","SearchSelect/SearchSelect.js","Api/ApiConstants.js","Api/Api.js","Enum/SolvedState.js","Api/ProblemsApi.js","UserProfile/AddProblemForm.js","Api/NotesApi.js","UserProfile/UserNoteInfo.js","UserProfile/UserContestInfo.js","UserProfile/UserNotesTitleDropdown.js","Paginator/VirtualPaginator.js","Paginator/Paginator.js","UserProfile/UserNotesList.js","UserProfile/UserNotes.js","Api/UserApi.js","Enum/LoadState.js","UserProfile/UserProfile.js","EditNote/DeleteMenu.js","EditNote/EditNoteForm.js","EditNote/ProblemInfo.js","EditNote/EditNote.js","Api/LikesApi.js","Misc/LikeDislike.js","PublicNote/PublicNoteInfo.js","PublicNote/PublicNote.js","App.js","serviceWorker.js","index.js"],"names":["Utils","component","stateObject","Promise","resolve","reject","mounted","setState","object","property","hasOwnProperty","message","setError","setStatePromise","error","setSuccess","success","window","MathJax","typesetPromise","HeaderUtils","password","confirmPassword","componentSetError","length","UserAuthApi","Auth","currentAuthenticatedUser","username","email","signUp","attributes","info","codeDeliveryDetails","Destination","code","confirmSignUp","resendSignUp","CodeDeliveryDetails","forgotPassword","forgotPasswordSubmit","signIn","signOut","getProfile","profile","currentSession","getSignInUserSession","accessToken","getAccessToken","getJwtToken","HeaderState","Object","freeze","LOGIN","RECOVERY_USERNAME","RECOVERY_PASSWORD","RECOVERY_SUCCESS","REGISTER","REGISTER_VERIFY","REGISTER_SUCCESS","ERROR_TRIGGER_PREFIX","RegisterForm","props","screen","unverifiedAccountUsername","state","destination","unverifiedAccountDestination","close","bind","register","verifyEmail","resendVerificationEmail","this","exitCallback","startsWith","substring","event","preventDefault","form","target","value","checkPasswords","componentSetSuccess","currentForm","createAccountForm","className","onSubmit","htmlFor","autoComplete","type","name","id","verifyEmailForm","key","onClick","emailVerifiedBox","Component","LoginForm","login","enablePasswordRecovery","resetPassword","emailVerificationCallback","componentsSetError","loginForm","recoveryUsernameForm","recoveryPasswordForm","recoveryPasswordSuccess","UserMenu","logout","logoutCallback","closeCallback","to","HeaderAuth","showRegisterForm","showLoginForm","showUserMenu","refreshUsername","toggleRegisterForm","toggleLoginForm","toggleUserMenu","hideUserMenu","afterLogin","unverifiedAccount","suggestUserRegister","getUsername","focusedElement","relatedTarget","classList","contains","loggedIn","loginButtons","loggedInButton","tabIndex","onBlur","topRightButtons","Header","path","useLocation","pathname","small","outerClassName","Caret","a","b","c","d","selection","getSelection","anchorElement","anchorNode","parentElement","focusElement","focusNode","anchorIndex","Number","getAttribute","focusIndex","anchorOffset","focusOffset","rangeSelect","index","position","leftIndex","leftPosition","rightIndex","rightPosition","blockElement","document","getElementById","textNode","childNodes","createTextNode","appendChild","range","createRange","setStart","collapse","removeAllRanges","addRange","leftBlockElement","rightBlockElement","leftTextNode","rightTextNode","setEnd","ContentType","MATH","BOLD","ITALIC","UNDERLINE","Toolbar","boldSelected","mask","italicSelected","underlineSelected","mathSelected","callback","MaskManager","bit","on","originalMask","countCharacters","str","counter","character","VirtualTextEditor","initialContent","characters","globalCaretPosition","block","m","char","push","splice","updateBlocks","globalIndex","charactersScanned","i","blocks","blockLength","blockEndIndex","j","blockStarts","characterCounter","getGlobalIndex","insertedString","rightBuffer","getIndexAndPosition","globalLeftIndex","deleteLength","globalRightIndex","editorMergeBit","newLeftIndex","newLeftPosition","currentMask","characterBuffer","forEach","join","String","fromCharCode","MathBlock","content","handleBlur","onFocus","handleFocus","getClassName","style","Block","editorId","editorMask","selected","rendered","TextEditorContent","editable","caretInfo","contentElements","editorSelected","contentEditable","suppressContentEditableWarning","spellCheck","registerEventHandlers","that","textEditor","addEventListener","composing","delete","insert","isComposing","inputType","dataTransfer","getData","data","pasteText","clipboardData","compositionIndex","compositionPosition","previousBlockElement","setAttribute","nextBlockElement","compositionDiv","createElement","insertBefore","removeChild","compositionInsert","selectionChanged","TextEditor","uniqueKey","virtualTextEditor","caret","contentChanged","getContent","toolbarUpdate","updateText","newString","updateCaretInfo","rangeMaskUpdate","newMask","focus","newToolbarMask","toolbarMergeBit","updateMask","newCaretInfo","getInfo","maxCaretIndex","badCaretRange","setRangePosition","setPosition","leftCharacterMask","getCharacterMask","junkNodes","node","nodeType","Node","TEXT_NODE","nodeName","childElement","children","innerHTML","nodeValue","onChange","forceUpdate","CpNotes","renderMathJax","Home","UserInfo","SearchSelect","loading","searchTerm","previousValidSearchTerm","showOptions","options","filteredOptions","handleChange","handleOptionSelect","option","optionStringArray","keys","toLowerCase","getOptionString","includes","prevProps","staticKey","search","filterOptions","sortKey","optionString","optionElements","displayString","displayKey","disabled","ApiConstants","API_ENDPOINT","Api","err","Error","response","status","json","responseJson","createApiError","resource","method","fetch","body","JSON","stringify","headers","Authorization","manageResponseError","queryString","sendRequestBody","SolvedState","SOLVED","text","css","UPSOLVED","UPSOLVED_HELP","UNSOLVED","ProblemsApi","problems","prettySk","sk","replaceAll","platform","getJson","contestId","_prettifyProblems","problemId","solvedStateValue","parseInt","AddProblemForm","contestSortKey","problemSortKey","skipContestSearch","handlePlatformChange","toggleSkipContestSearch","updateProblemSortKey","updateContestSortKey","addProblem","searchContestFunction","searchContestKey","getContests","searchProblemFunction","searchProblemKey","getProblems","skipButtonText","defaultValue","NotesApi","forcePublished","postJson","title","solved","published","putJson","deleteJson","UserNoteInfo","solvedClass","getSolvedStateCssClass","problemUrl","problemSk","replace","publishedClass","timestamp","Date","editedTime","toLocaleDateString","authorUsername","loggedInUsername","problemCode","problemName","UserContestInfo","noteElements","notes","note","split","codeClassName","contestName","UserNotesTitleDropdown","innerContent","showing","toggleCallback","showText","VirtualPaginator","pageSize","setContent","activeItems","item","paginatorActive","indices","active","pageIndex","currentIndex","activeBufferSize","itemBuffer","pageCount","bufferSize","Paginator","currentPage","totalPages","pageIndices","after","increment","before","sort","paginatorButtons","buttonClassName","RecursionLevel","CONTEST","PLATFORM","compareByRecent","note1","note2","groupByAttributes","objectList","attributeGroups","obj","attributeValues","attribute","UserNotesList","page","sortNoteItems","virtualPaginator","sortedNoteItems","updatePage","firstNote","contestObject","contestCode","organizeBySolved","organizeByPlatform","recursionLevel","keyString","paginatorIndices","organizeByContest","contestGroups","createContestObject","organize","attributeString","dropdownShowing","dropdownIndices","sortByRecent","groups","innerKeyString","innerIndices","noteInfoElements","NoteComponent","renderNoteItems","getSolvedStateText","toggleActiveItems","getPageCount","nextProps","nextState","importantProps","currentImportantProps","map","x","nextImportantProps","noteItems","paginator","UserNotes","showAddProblemForm","toggleAddProblemForm","toggleOrganizeBySolved","toggleOrganizeByPlatform","toggleOrganizeByContest","toggleSortByRecent","formComponent","userInfo","addNote","history","UserApi","LoadState","LOADING","DONE","NOT_FOUND","UserProfile","match","params","getUserInfo","getNotes","loadInfo","loadedContent","userNotFoundContent","DeleteMenu","randomCode","uuidv4","deleteNote","confirmCode","problemInfo","remindUserToSave","returnValue","EditNoteForm","noteInfo","parse","lastSaved","disableEditButtons","saved","loadingSave","loadingPublish","showDeleteMenu","saveNote","togglePublishNote","toggleDeleteMenu","handleTitleChange","handleSolvedChange","handleContentChange","editNote","onbeforeunload","saveOrPublishNote","newContent","savedText","toLocaleString","togglePublishText","saveButtonClass","publishButtonClass","when","placeholder","ProblemInfo","href","link","EditNote","getProblemInfo","getNoteInfo","loadProblemInfo","loadNoteInfo","noteNotFoundContent","LikesApi","noteAuthor","likedStatus","LikeDislike","initialScore","initialStatus","likeCallback","useState","score","setScore","setStatus","likeButtonClass","toggleStatus","PublicNoteInfo","editedTimestamp","sendLike","likeCount","PublicNote","ownerUsername","App","exact","Boolean","location","hostname","Amplify","configure","amplify_config","add","keyCode","remove","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.4f5cfabd.chunk.js","sourcesContent":["class Utils {\n  static async setStatePromise(component, stateObject) {\n    return new Promise((resolve, reject) => {\n      if(component.mounted !== false) {\n        component.setState(stateObject, () => {\n          resolve();\n        });\n      }\n      resolve();\n    });\n  }\n\n  static isEmpty(object) {\n    for(const property in object) {\n      if(object.hasOwnProperty(property))\n        return false;\n    }\n    return true;\n  }\n\n  static async componentSetError(component, message) {\n    if(component.setError) {\n      await component.setError(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: `Error: ${message}`\n      });\n    }\n  }\n\n  static async componentSetSuccess(component, message) {\n    if(component.setSuccess) {\n      await component.setSuccess(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: '',\n        success: message\n      });\n    }\n  }\n\n  static async renderMathJax() {\n    if(window.MathJax) {\n      await window.MathJax.typesetPromise();\n    }\n  }\n}\n\nexport default Utils;\n","import Utils from '../Utils';\n\nconst MIN_PASSWORD_LENGTH = 6;\n\nclass HeaderUtils {\n  static async checkPasswords(component, password, confirmPassword) {\n    if(password !== confirmPassword) {\n      await Utils.componentSetError(component, \"Your passwords don't match!\");\n      return false;\n    }\n\n    if(password.length < MIN_PASSWORD_LENGTH) {\n      await Utils.componentSetError(component, 'Your password is too short!');\n      return false;\n    }\n\n    return true;\n  }\n}\n\nexport default HeaderUtils;\n","import { Auth } from 'aws-amplify';\n\nclass UserAuthApi {\n  static async getProfile() {\n    try {\n      return await Auth.currentAuthenticatedUser();\n    }\n    catch(err) {\n      // currentAuthenticatedUser() throws this error if the user is not logged in\n      return null;\n    }\n  }\n\n  static async register(username, email, password) {\n    const info = await Auth.signUp({\n      username,\n      password,\n      attributes: {\n        email: email\n      }\n    });\n\n    // I like how Amplify makes this one inconsistently lowercase... lol\n    return info.codeDeliveryDetails.Destination;\n  }\n\n  static async verifyEmail(username, code) {\n    await Auth.confirmSignUp(username, code);\n  }\n\n  static async resendVerificationEmail(username) {\n    const info = await Auth.resendSignUp(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async forgotPassword(username) {\n    const info = await Auth.forgotPassword(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async resetPassword(username, code, password) {\n    await Auth.forgotPasswordSubmit(username, code, password);\n  }\n\n  static async login(username, password) {\n    await Auth.signIn(username, password);\n  }\n\n  static async logout() {\n    await Auth.signOut();\n  }\n\n  static async getUsername() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    return profile.username;\n  }\n\n  static async getAccessToken() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    const currentSession = profile.getSignInUserSession();\n    const accessToken = currentSession.getAccessToken();\n    return accessToken.getJwtToken();\n  }\n}\n\nexport default UserAuthApi;\n","const HeaderState = Object.freeze({\n  LOGIN: 0,\n  RECOVERY_USERNAME: 1,\n  RECOVERY_PASSWORD: 2,\n  RECOVERY_SUCCESS: 3,\n  REGISTER: 4,\n  REGISTER_VERIFY: 5,\n  REGISTER_SUCCESS: 6\n});\n\nexport default HeaderState;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\nimport '../css/RegisterForm.css';\n\nconst USERNAME_MIN_LENGTH = 3;\nconst USERNAME_MAX_LENGTH = 20;\nconst ERROR_TRIGGER_PREFIX = 'PreSignUp failed with error';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const screen = props.unverifiedAccountUsername ?\n                   HeaderState.REGISTER_VERIFY : HeaderState.REGISTER;\n    this.state = {\n      error: '',\n      success: '',\n      username: props.unverifiedAccountUsername,\n      destination: props.unverifiedAccountDestination,\n      screen: screen\n    };\n\n    this.close = this.close.bind(this);\n    this.register = this.register.bind(this);\n    this.verifyEmail = this.verifyEmail.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async setError(message) {\n    if(message.startsWith(ERROR_TRIGGER_PREFIX)) {\n      message = message.substring(\n        ERROR_TRIGGER_PREFIX.length, message.length - 1\n      );\n    }\n\n    await Utils.setStatePromise(this, {\n      error: `Error: ${message}`,\n      success: ''\n    });\n  }\n\n  async register(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const email = form.email.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!username || !email || !password || !confirmPassword) {\n      await this.setError('Please fill out all of the fields.')\n      return;\n    }\n\n    if(username.length < USERNAME_MIN_LENGTH || username.length > USERNAME_MAX_LENGTH) {\n      await this.setError(\n        `Your username must be between ${USERNAME_MIN_LENGTH} ` +\n        `and ${USERNAME_MAX_LENGTH} characters!`\n      );\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      const destination = await UserAuthApi.register(username, email, password);\n      Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.REGISTER_VERIFY\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async verifyEmail(event) {\n    event.preventDefault();\n\n    const code = event.target.code.value;\n    try {\n      await UserAuthApi.verifyEmail(this.state.username, code);\n      Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.REGISTER_SUCCESS\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.resendVerificationEmail(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const createAccountForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Create an account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.register}>\n          <label htmlFor=\"register-username\">Username</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 id=\"register-username\" />\n\n          <label htmlFor=\"register-email\">Email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"email\"\n                 id=\"register-email\" />\n\n          <label htmlFor=\"register-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 id=\"register-password\" />\n\n          <label htmlFor=\"register-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 id=\"register-confirm-password\" />\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Register\" />\n        </form>\n      </div>\n    );\n\n    const verifyEmailForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Verify your email!</h2>\n        <p>\n          You should've received an email at {this.state.destination} with a\n          verification code. If it isn't convenient for you to verify your\n          account now, you may do so later by logging in.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.verifyEmail}>\n          <label htmlFor=\"verification-code\">Verification code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"verification-code\" id=\"verification-code\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const emailVerifiedBox = (\n      <div className=\"Register-form Module-popup\">\n        <h2>Verification success!</h2>\n        <p className=\"Module-popup-last\">\n          Your email was successfully verified! Click the 'X' button in the\n          top-right corner to return to the site, and you'll be able to login.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.REGISTER:\n        currentForm = createAccountForm;\n        break;\n      case HeaderState.REGISTER_VERIFY:\n        currentForm = verifyEmailForm;\n        break;\n      case HeaderState.REGISTER_SUCCESS:\n        currentForm = emailVerifiedBox;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      username: null,\n      destination: null,\n      screen: props.screen || HeaderState.LOGIN\n    }\n\n    this.close = this.close.bind(this);\n    this.login = this.login.bind(this);\n    this.enablePasswordRecovery = this.enablePasswordRecovery.bind(this);\n    this.forgotPassword = this.forgotPassword.bind(this);\n    this.resetPassword = this.resetPassword.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback(false);\n  }\n\n  async login(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const password = form.password.value;\n\n    if(!username || !password) {\n      await Utils.componentSetError(this, \"Please fill out all of the fields.\");\n      return;\n    }\n\n    try {\n      try {\n        await UserAuthApi.login(username, password);\n        this.props.exitCallback(true);\n      }\n      catch(err) {\n        if(err.code === 'UserNotConfirmedException') {\n          const destination = await UserAuthApi.resendVerificationEmail(username);\n          await this.props.emailVerificationCallback(username, destination);\n        }\n        else {\n          throw err;\n        }\n      }\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async enablePasswordRecovery(event) {\n    await Utils.setStatePromise(this, {\n      error: '',\n      screen: HeaderState.RECOVERY_USERNAME\n    });\n  }\n\n  async forgotPassword(event) {\n    event.preventDefault();\n\n    const username = event.target.username.value;\n    if(!username) {\n      await Utils.componentsSetError(this, 'Please input your username.');\n      return;\n    }\n\n    try {\n      const destination = await UserAuthApi.forgotPassword(username);\n      await Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.RECOVERY_PASSWORD\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async resetPassword(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const code = form.code.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!code || !password || !confirmPassword) {\n      Utils.componentSetError(this, 'Please fill out all of the fields.');\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      await UserAuthApi.resetPassword(this.state.username, code, password);\n      await Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.RECOVERY_SUCCESS\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.forgotPassword(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loginForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Login to your account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.login}>\n          <label htmlFor=\"login-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"login-username\" id=\"login-username\" />\n\n          <label htmlFor=\"login-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"login-password\" id=\"login-password\" />\n\n          <button type=\"button\" onClick={this.enablePasswordRecovery}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Forgot your password?\n          </button>\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    );\n\n    const recoveryUsernameForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          Please provide your username or email, so that you can reset your\n          password via an emailed confirmation code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.forgotPassword}>\n          <label htmlFor=\"reset-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"reset-username\" id=\"reset-username\" />\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          You should've received an email at { this.state.destination } with a\n          verification code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.resetPassword}>\n          <label htmlFor=\"reset-code\">Code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"reset-code\" id=\"reset-code\" />\n\n          <label htmlFor=\"reset-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"reset-password\" id=\"reset-password\" />\n\n          <label htmlFor=\"reset-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 key=\"reset-confirm-password\" id=\"reset-confirm-password\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordSuccess= (\n      <div className=\"Register-form Module-popup\">\n        <h2>Password reset success!</h2>\n        <p>\n          Your password has been reset successfully. You'll now be able to\n          login again.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.LOGIN:\n        currentForm = loginForm;\n        break;\n      case HeaderState.RECOVERY_USERNAME:\n        currentForm = recoveryUsernameForm;\n        break;\n      case HeaderState.RECOVERY_PASSWORD:\n        currentForm = recoveryPasswordForm;\n        break;\n      case HeaderState.RECOVERY_SUCCESS:\n        currentForm = recoveryPasswordSuccess;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/UserMenu.css'\n\nclass UserMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = this.logout.bind(this);\n  }\n\n  async logout() {\n    await UserAuthApi.logout();\n    await this.props.logoutCallback();\n  }\n\n  render() {\n    return (\n      <div className=\"User-menu\">\n        <ol>\n          <li>\n            <Link className=\"Header-menu-button\" onClick={this.props.closeCallback}\n                  to={`/users/${this.props.username}`}>\n                  Your profile\n            </Link>\n          </li>\n          <div className=\"User-menu-divider\"></div>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\">\n              Settings\n            </button>\n          </li>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\" onClick={this.logout}>\n              Logout\n            </button>\n          </li>\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default UserMenu;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport UserMenu from './UserMenu';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nclass HeaderAuth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      showRegisterForm: false,\n      showLoginForm: false,\n      showUserMenu: false,\n      unverifiedAccountUsername: null,\n      unverifiedAccountDestination: null\n    };\n\n    this.refreshUsername = this.refreshUsername.bind(this);\n    this.toggleRegisterForm = this.toggleRegisterForm.bind(this);\n    this.toggleLoginForm = this.toggleLoginForm.bind(this);\n    this.toggleUserMenu = this.toggleUserMenu.bind(this);\n    this.hideUserMenu = this.hideUserMenu.bind(this);\n    this.afterLogin = this.afterLogin.bind(this);\n    this.unverifiedAccount = this.unverifiedAccount.bind(this);\n\n    window.suggestUserRegister = this.toggleRegisterForm;\n  }\n\n  async refreshUsername() {\n    const username = await UserAuthApi.getUsername();\n\n    await Utils.setStatePromise(this, {\n      username: username,\n      showUserMenu: false,\n      unverifiedAccountUsername: null\n    });\n  }\n\n  async componentDidMount() {\n    await this.refreshUsername();\n  }\n\n  async toggleRegisterForm(event) {\n    if(this.state.showRegisterForm) {\n      await Utils.setStatePromise(this, {\n        unverifiedAccountUsername: null,\n        unverifiedAccountDestination: null\n      });\n    }\n\n    await Utils.setStatePromise(this, {\n      showRegisterForm: !this.state.showRegisterForm\n    });\n  }\n\n  async toggleLoginForm(event) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: !this.state.showLoginForm\n    });\n  }\n\n  async toggleUserMenu(event) {\n    await Utils.setStatePromise(this, {\n      showUserMenu: !this.state.showUserMenu\n    });\n  }\n\n  async hideUserMenu(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.classList.contains('Header-menu-button'))\n      return;\n\n    await Utils.setStatePromise(this, {\n      showUserMenu: false\n    });\n  }\n\n  async afterLogin(loggedIn) {\n    await this.toggleLoginForm();\n\n    if(loggedIn)\n      await this.refreshUsername();\n  }\n\n  async unverifiedAccount(username, destination) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: false,\n      showRegisterForm: true,\n      unverifiedAccountUsername: username,\n      unverifiedAccountDestination: destination\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loginButtons = (\n      <div className=\"Header-top-right\">\n        <button className=\"Header-menu-button\" onClick={this.toggleLoginForm}>\n          Login\n        </button>\n        <span className=\"Header-divider\"></span>\n        <button className=\"Header-menu-button\" onClick={this.toggleRegisterForm}>\n          Create an account\n        </button>\n      </div>\n    );\n\n    const loggedInButton = (\n      <div className=\"Header-logged-in\" tabIndex=\"-1\"\n           onBlur={this.hideUserMenu}>\n        <div className=\"Header-top-right\">\n          <button className=\"Header-menu-button\" onClick={this.toggleUserMenu}>\n            { this.state.username }\n          </button>\n        </div>\n        <div className=\"Header-user-menu\">\n          {\n            this.state.showUserMenu &&\n            <UserMenu username={this.state.username}\n                      closeCallback={this.toggleUserMenu}\n                      logoutCallback={this.refreshUsername} />\n          }\n        </div>\n      </div>\n    );\n\n    const topRightButtons = this.state.username ? loggedInButton : loginButtons;\n\n    return (\n      <>\n        {\n          this.state.showRegisterForm &&\n          <RegisterForm exitCallback={this.toggleRegisterForm}\n                        unverifiedAccountUsername=\n                        {this.state.unverifiedAccountUsername}\n                        unverifiedAccountDestination=\n                        {this.state.unverifiedAccountDestination} />\n        }\n        {\n          this.state.showLoginForm &&\n          <LoginForm exitCallback={this.afterLogin}\n                     emailVerificationCallback={this.unverifiedAccount} />\n        }\n        { topRightButtons }\n      </>\n    );\n  }\n}\n\nexport default HeaderAuth;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport HeaderAuth from './HeaderAuth';\nimport '../css/Header.css';\n\nfunction Header() {\n  const path = useLocation().pathname;\n  const small = (path === '/' || path === '/home');\n  const outerClassName = small ? 'Header' : 'Header-small';\n\n  return (\n    <div className={outerClassName}>\n      { small && <h1>cp-notes beta</h1> }\n      <ul>\n        <li>\n          <Link to=\"/home\">Home</Link>\n        </li>\n      </ul>\n      <HeaderAuth />\n      <span className=\"Header-bottom\"></span>\n    </div>\n  );\n}\n\nexport default Header;\n","function lessThan(a, b, c, d) {\n  if(a === c)\n    return b < d;\n  return a < c;\n}\n\nclass Caret {\n  constructor(id) {\n    this.id = id;\n  }\n\n  getInfo() {\n    const selection = window.getSelection();\n    const anchorElement = selection.anchorNode.parentElement;\n    const focusElement = selection.focusNode.parentElement;\n\n    let anchorIndex = Number(anchorElement.getAttribute('index'));\n    let focusIndex = Number(focusElement.getAttribute('index'));\n    let anchorOffset = selection.anchorOffset;\n    let focusOffset = selection.focusOffset;\n\n    if(anchorIndex === focusIndex && anchorOffset === focusOffset) {\n      return {\n        rangeSelect: false,\n        index: anchorIndex,\n        position: anchorOffset\n      };\n    }\n\n    if(!lessThan(anchorIndex, anchorOffset, focusIndex, focusOffset)) {\n      [ anchorIndex, focusIndex ] = [ focusIndex, anchorIndex ];\n      [ anchorOffset, focusOffset ] = [ focusOffset, anchorOffset ];\n    }\n\n    return {\n      rangeSelect: true,\n      leftIndex: anchorIndex,\n      leftPosition: anchorOffset,\n      rightIndex: focusIndex,\n      rightPosition: focusOffset\n    };\n  }\n\n  setPosition(index, position) {\n    const blockElement = document.getElementById(this.id + index);\n    let textNode = blockElement.childNodes[0];\n\n    if(!textNode) {\n      textNode = document.createTextNode('');\n      blockElement.appendChild(textNode);\n    }\n\n    let range = document.createRange();\n    range.setStart(textNode, position);\n    range.collapse(true);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  setRangePosition(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const leftBlockElement = document.getElementById(this.id + leftIndex);\n    const rightBlockElement = document.getElementById(this.id + rightIndex);\n    const leftTextNode = leftBlockElement.childNodes[0];\n    const rightTextNode = rightBlockElement.childNodes[0];\n\n    let range = document.createRange();\n    range.setStart(leftTextNode, leftPosition);\n    range.setEnd(rightTextNode, rightPosition);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport default Caret;\n","const ContentType = Object.freeze({\n  MATH: (1 << 0),\n  BOLD: (1 << 1),\n  ITALIC: (1 << 2),\n  UNDERLINE: (1 << 3)\n});\n\nexport default ContentType;\n","import React, { Component } from 'react';\nimport ContentType from './ContentType';\n\nclass Toolbar extends Component {\n  render() {\n    const boldSelected = (this.props.mask & ContentType.BOLD) > 0;\n    const italicSelected = (this.props.mask & ContentType.ITALIC) > 0;\n    const underlineSelected = (this.props.mask & ContentType.UNDERLINE) > 0;\n    const mathSelected = (this.props.mask & ContentType.MATH) > 0;\n\n    return (\n      <div className=\"Askd-text-editor-toolbar\">\n        <ul>\n          <li className={`Askd-tb-selected-${boldSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-BOLD\"\n                    onClick={() => this.props.callback(ContentType.BOLD)} />\n          </li>\n          <li className={`Askd-tb-selected-${italicSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-ITALIC\"\n                    onClick={() => this.props.callback(ContentType.ITALIC)} />\n          </li>\n          <li className={`Askd-tb-selected-${underlineSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-UNDERLINE\"\n                    onClick={() => this.props.callback(ContentType.UNDERLINE)} />\n          </li>\n          <li className={`Askd-tb-selected-${mathSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-MATH\"\n                    onClick={() => this.props.callback(ContentType.MATH)} />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import ContentType from './ContentType';\n\nclass MaskManager {\n  static toolbarMergeBit(bit, on, originalMask) {\n    if(bit === ContentType.MATH) {\n      if(on) return bit;\n      return 0;\n    }\n    else {\n      if(originalMask & ContentType.MATH) {\n        originalMask ^= ContentType.MATH;\n      }\n      return originalMask ^ bit;\n    }\n  }\n\n  static editorMergeBit(bit, on, originalMask) {\n    if(bit === ContentType.MATH) {\n      if(on) return bit;\n\n      if(originalMask & bit) originalMask ^= bit;\n      return originalMask;\n    }\n    else {\n      if(originalMask & ContentType.MATH) originalMask = 0;\n      if(on) return originalMask | bit;\n\n      if(originalMask & bit) originalMask ^= bit;\n      return originalMask;\n    }\n  }\n}\n\nexport default MaskManager;\n","import MaskManager from './MaskManager';\n\n// This is different from str.length; for example emojis use up 2\nfunction countCharacters(str) {\n  let counter = 0;\n  for(const character of str) {\n    Number(character);  // Silence unused variable warning\n    counter++;\n  }\n  return counter;\n}\n\nclass VirtualTextEditor {\n  constructor(initialContent) {\n    this.characters = [];\n    this.globalCaretPosition = 0;\n\n    if(initialContent) {\n      for(const block of initialContent) {\n        const mask = block.m;\n        for(const char of block.c) {\n          this.characters.push({\n            m: mask,\n            c: char\n          });\n        }\n      }\n\n      /* Remove extra newline character */\n      this.characters.splice(this.characters.length - 1);\n    }\n\n    this.updateBlocks();\n  }\n\n  getIndexAndPosition(globalIndex) {\n    let charactersScanned = 0;\n    for(let i = 0; i < this.blocks.length; i++) {\n      const block = this.blocks[i];\n      const blockLength = countCharacters(block.c);\n      const blockEndIndex = charactersScanned + blockLength;\n\n      if(globalIndex <= blockEndIndex) {\n        let position = 0;\n        for(let j = charactersScanned; j <= blockEndIndex; j++) {\n          if(globalIndex === j) {\n            return [ i, position ];\n          }\n          position += this.characters[j].c.length;\n        }\n      }\n      charactersScanned += blockLength;\n    }\n\n    return [ null, null ];\n  }\n\n  getGlobalIndex(index, position) {\n    let globalIndex = this.blockStarts[index];\n    let characterCounter = 0;\n    while(characterCounter < position) {\n      characterCounter += this.characters[globalIndex].c.length;\n      globalIndex++;\n    }\n\n    if(characterCounter === position)\n      return globalIndex;\n\n    return globalIndex - 1;\n  }\n\n  getCharacterMask(index, position, rangeSelect) {\n    const globalIndex = this.getGlobalIndex(index, position);\n\n    if(globalIndex === 0) {\n      if(this.characters.length > 0)\n        return this.characters[0].m;\n      return 0;\n    }\n    else if(rangeSelect) {\n      return this.characters[globalIndex].m;\n    }\n    return this.characters[globalIndex - 1].m;\n  }\n\n  insert(index, position, insertedString, mask) {\n    const globalIndex = this.getGlobalIndex(index, position);\n    const rightBuffer = this.characters.splice(globalIndex);\n\n    for(const char of insertedString) {\n      this.characters.push({\n        m: mask,\n        c: char\n      });\n    }\n\n    const globalCaretPosition = this.characters.length;\n    for(const character of rightBuffer) {\n      this.characters.push(character);\n    }\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  delete(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n    const deleteLength = globalRightIndex - globalLeftIndex;\n\n    if(globalLeftIndex < 0) {\n      return [ 0, 0 ];\n    }\n\n    this.characters.splice(globalLeftIndex, deleteLength);\n    const globalCaretPosition = globalLeftIndex;\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  rangeMaskUpdate(leftIndex, leftPosition, rightIndex, rightPosition, bit, on) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n\n    for(let i = globalLeftIndex; i < globalRightIndex; i++) {\n      this.characters[i].m = MaskManager.editorMergeBit(bit, on, this.characters[i].m);\n    }\n\n    this.updateBlocks();\n\n    const [ newLeftIndex, newLeftPosition ] = this.getIndexAndPosition(globalLeftIndex);\n    const [ newRightIndex, newRightPosition ] = this.getIndexAndPosition(globalRightIndex);\n    return [ newLeftIndex, newLeftPosition, newRightIndex, newRightPosition ];\n  }\n\n  updateBlocks() {\n    this.blocks = [];\n    this.blockStarts = [];\n\n    let currentMask = this.characters.length > 0 ? this.characters[0].m : 0;\n    let characterBuffer = [];\n    this.characters.forEach((character, i) => {\n      if(character.m !== currentMask) {\n        this.blocks.push({\n          m: currentMask,\n          c: characterBuffer.join('')\n        });\n        this.blockStarts.push(i - characterBuffer.length);\n\n        currentMask = character.m;\n        characterBuffer = [ character.c ];\n      }\n      else {\n        characterBuffer.push(character.c);\n      }\n    });\n\n    this.blocks.push({\n      m: currentMask,\n      c: characterBuffer.join('')\n    });\n    this.blockStarts.push(this.characters.length - characterBuffer.length);\n\n    /* Extra 'empty' block for a potential caret position */\n    this.blocks.push({\n      m: 0,\n      c: String.fromCharCode(8203)\n    });\n\n    /* Extra newline character sets correct caret positioning */\n    this.blocks.push({\n      m: 0,\n      c: String.fromCharCode(10)\n    });\n\n    this.blockStarts.push(this.characters.length);\n    this.blockStarts.push(this.characters.length);\n  }\n\n  getContent() {\n    return this.blocks;\n  }\n}\n\nexport default VirtualTextEditor;\n","import React, { Component } from 'react';\n\nclass MathBlock extends Component {\n  render() {\n    let content = this.props.block.c;\n\n    return (\n      <div className=\"Askd-te-MATH\" id={this.props.id} index={this.props.index}\n           tabIndex=\"0\" onBlur={this.handleBlur} onFocus={this.handleFocus}>\n        { content }\n      </div>\n    );\n  }\n}\n\nexport default MathBlock;\n","import React, { Component } from 'react';\nimport ContentType from '../ContentType';\nimport MathBlock from './MathBlock';\n\nfunction getClassName(mask) {\n  let className = '';\n  for(const style in ContentType) {\n    if(mask & ContentType[style]) {\n      className += `Askd-te-${style} `;\n    }\n  }\n  return className;\n}\n\nclass Block extends Component {\n  render() {\n    const block = this.props.block;\n    const editorId = this.props.id;\n    const index = this.props.index;\n    const editorMask = this.props.editorMask;\n    const selected = this.props.selected;\n\n    if(block.m === ContentType.MATH) {\n      const rendered = !selected || !(editorMask & ContentType.MATH);\n      return (\n        <MathBlock id={editorId + index} rendered={rendered} block={block}\n                   index={index} />\n      );\n    }\n\n    return (\n      <div className={getClassName(block.m)} id={editorId + index} index={index}>\n        { block.c }\n      </div>\n    );\n  }\n}\n\nexport default Block;\n","import React from 'react';\nimport Block from './Block/Block';\n\nfunction TextEditorContent({ content, id, editable, editorMask, caretInfo, handleBlur }) {\n  let contentElements = [];\n  content.forEach((block, i) => {\n    let selected = false;\n    if(caretInfo && caretInfo.editorSelected) {\n      if(!caretInfo.rangeSelect && caretInfo.index === i) {\n        selected = true;\n      }\n      if(caretInfo.rangeSelect && caretInfo.leftIndex === i) {\n        selected = true;\n      }\n    }\n\n    contentElements.push(\n      <Block block={block} id={id} index={i} key={i} editorMask={editorMask}\n             selected={selected} />\n    );\n  });\n\n  return (\n    <div className=\"Askd-text-editor-text\" id={id} tabIndex=\"0\"\n         contentEditable={editable} suppressContentEditableWarning=\"true\"\n         spellCheck=\"false\" onBlur={handleBlur}>\n         { contentElements }\n    </div>\n  );\n}\n\nexport default TextEditorContent;\n","const registerEventHandlers = (that) => {\n  that.textEditor.addEventListener('keydown', async (event) => {\n    /* TBD, bro who even uses that button lol */\n    if(event.key === 'Delete') {\n      event.preventDefault();\n    }\n    else if(event.key === 'Backspace' && !that.composing) {\n      await that.delete();\n      event.preventDefault();\n    }\n    else if(event.key === 'Enter' && !that.composing) {\n      await that.insert(String.fromCharCode(10));\n      event.preventDefault();\n    }\n  });\n\n  that.textEditor.addEventListener('beforeinput', async (event) => {\n    if(event.isComposing || that.composing) {\n      return;\n    }\n\n    event.preventDefault();\n\n    /* Mobile autocorrect and word selection from a menu */\n    if(event.inputType === 'insertReplacementText') {\n      that.caretInfo.rangeSelect = true;\n      const insertedString = event.dataTransfer.getData('text');\n      await that.insert(insertedString);\n    }\n    /* Generic event with a valid 'data'; things like undo/redo operations and\n       drag and drop are TBD */\n    else if(event.data) {\n      await that.insert(event.data);\n    }\n  });\n\n  that.textEditor.addEventListener('paste', async (event) => {\n    event.preventDefault();\n\n    const pasteText = event.clipboardData.getData('Text');\n    await that.insert(pasteText);\n  });\n\n  that.textEditor.addEventListener('compositionstart', async (event) => {\n    if(that.caretInfo.rangeSelect) {\n      await that.delete();\n    }\n\n    that.composing = true;\n    that.compositionIndex = that.caretInfo.index;\n    that.compositionPosition = that.caretInfo.position;\n\n    /* Set the previous block to be uneditable */\n    let previousBlockElement = document.getElementById(that.id +\n      (that.compositionIndex - 1));\n    if(previousBlockElement) {\n      previousBlockElement.setAttribute('contenteditable', 'false');\n    }\n\n    let nextBlockElement = document.getElementById(that.id +\n      (that.compositionIndex + 1));\n\n    /* Create an empty uneditable composition div in front of this block */\n    let compositionDiv = document.createElement('div');\n    compositionDiv.setAttribute('contenteditable', 'false');\n    compositionDiv.setAttribute('id', that.id + 'composition');\n    that.textEditor.insertBefore(compositionDiv, nextBlockElement);\n  });\n\n  that.textEditor.addEventListener('compositionend', async (event) => {\n    if(!that.composing) {\n      return;\n    }\n\n    /* Composition has ended; allow the previous block to be editable again */\n    let previousBlockElement = document.getElementById(that.id +\n      (that.compositionIndex - 1));\n    if(previousBlockElement) {\n      previousBlockElement.setAttribute('contenteditable', 'true');\n    }\n\n    /* Remove the composition div */\n    let compositionDiv = document.getElementById(that.id + 'composition');\n    that.textEditor.removeChild(compositionDiv);\n\n    that.composing = false;\n    await that.compositionInsert(event.data);\n  });\n\n  document.addEventListener('selectionchange', async (event) => {\n    if(that.composing) {\n      return;\n    }\n\n    try {\n      const selection = window.getSelection();\n      const anchorElement = selection.anchorNode.parentElement;\n      const parentElement = anchorElement.parentElement;\n\n      if(anchorElement.getAttribute('id') === that.id + '!' ||\n         parentElement.getAttribute('id') === that.id) {\n        await that.selectionChanged();\n      }\n    }\n    catch(err) {\n      /* anchorElement isn't a div inside the text editor */\n    }\n  });\n}\n\nexport default registerEventHandlers;\n","import React, { Component } from 'react';\nimport Caret from './Caret';\nimport Toolbar from './Toolbar';\nimport VirtualTextEditor from './VirtualTextEditor';\nimport TextEditorContent from './TextEditorContent';\nimport MaskManager from './MaskManager';\nimport Utils from '../Utils';\nimport registerEventHandlers from './registerEventHandlers';\nimport '../css/TextEditor.css';\n\nclass TextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.id = this.props.uniqueKey ?\n                `Askd-text-editor${this.props.uniqueKey}` : 'Askd-text-editor';\n    this.virtualTextEditor = new VirtualTextEditor(this.props.initialContent);\n    this.caret = new Caret(this.id);\n\n    this.contentChanged = false;\n    this.caretInfo = {\n      editorSelected: false,\n      rangeSelect: false,\n      index: 0,\n      position: 0\n    };\n\n    this.composing = false;\n    this.compositionIndex = null;\n    this.compositionPosition = null;\n\n    this.state = {\n      content: this.virtualTextEditor.getContent(),\n      editorMask: 0\n    };\n\n    this.toolbarUpdate = this.toolbarUpdate.bind(this);\n  }\n\n  async delete() {\n    if(!this.caretInfo.rangeSelect) {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.index, this.caretInfo.position - 1,\n        this.caretInfo.index, this.caretInfo.position\n      );\n    }\n    else {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n        this.caretInfo.rightIndex, this.caretInfo.rightPosition\n      );\n    }\n\n    this.caretInfo.rangeSelect = false;\n    await this.updateText();\n  }\n\n  async insert(newString) {\n    this.updateCaretInfo();\n\n    if(this.caretInfo.rangeSelect) {\n      await this.delete();\n    }\n\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.caretInfo.index, this.caretInfo.position, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.updateText();\n  }\n\n  async compositionInsert(newString) {\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.compositionIndex, this.compositionPosition, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.updateText();\n  }\n\n  async rangeMaskUpdate(bit, on) {\n    if(!this.caretInfo.rangeSelect) {\n      return;\n    }\n\n    [ this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition ] =\n    this.virtualTextEditor.rangeMaskUpdate(\n      this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition, bit, on\n    );\n\n    await this.updateText();\n  }\n\n  async updateText() {\n    this.contentChanged = true;\n    await Utils.setStatePromise(this, {\n      content: this.virtualTextEditor.getContent()\n    });\n  }\n\n  async updateMask(newMask) {\n    await Utils.setStatePromise(this, {\n      editorMask: newMask\n    });\n  }\n\n  async toolbarUpdate(bit) {\n    this.textEditor.focus();\n\n    const on = (this.state.editorMask & bit) === 0;\n    const newToolbarMask = MaskManager.toolbarMergeBit(bit, on, this.state.editorMask);\n\n    await this.updateMask(newToolbarMask);\n    await this.rangeMaskUpdate(bit, on);\n  }\n\n  updateCaretInfo() {\n    const newCaretInfo = this.caret.getInfo();\n    const maxCaretIndex = this.state.content.length - 2;\n\n    /* Maintain previous info for the other selection type */\n    if(newCaretInfo.rangeSelect) {\n      let badCaretRange = false;\n\n      if(newCaretInfo.leftIndex >= maxCaretIndex && newCaretInfo.leftPosition > 0) {\n        newCaretInfo.leftIndex = maxCaretIndex;\n        newCaretInfo.leftPosition = 0;\n        badCaretRange = true;\n      }\n\n      if(newCaretInfo.rightIndex >= maxCaretIndex && newCaretInfo.rightPosition > 0) {\n        newCaretInfo.rightIndex = maxCaretIndex;\n        newCaretInfo.rightPosition = 0;\n        badCaretRange = true;\n      }\n\n      if(badCaretRange) {\n        this.caret.setRangePosition(newCaretInfo.leftIndex,\n          newCaretInfo.leftPosition, newCaretInfo.rightIndex,\n          newCaretInfo.rightPosition\n        );\n      }\n\n      this.caretInfo.leftIndex = newCaretInfo.leftIndex;\n      this.caretInfo.leftPosition = newCaretInfo.leftPosition;\n      this.caretInfo.rightIndex = newCaretInfo.rightIndex;\n      this.caretInfo.rightPosition = newCaretInfo.rightPosition;\n      this.caretInfo.rangeSelect = true;\n    }\n    else {\n      if(newCaretInfo.index >= maxCaretIndex && newCaretInfo.position > 0) {\n        newCaretInfo.index = maxCaretIndex;\n        newCaretInfo.position = 0;\n        this.caret.setPosition(newCaretInfo.index, newCaretInfo.position);\n      }\n\n      this.caretInfo.index = newCaretInfo.index;\n      this.caretInfo.position = newCaretInfo.position;\n      this.caretInfo.rangeSelect = false;\n    }\n\n    this.caretInfo.editorSelected = true;\n  }\n\n  async selectionChanged() {\n    this.updateCaretInfo();\n\n    let leftCharacterMask;\n    if(this.caretInfo.rangeSelect) {\n      leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition, true\n      );\n    }\n    else {\n      leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.index, this.caretInfo.position, false\n      );\n    }\n\n    await this.updateMask(leftCharacterMask);\n  }\n\n  componentDidMount() {\n    this.textEditor = document.getElementById(this.id);\n    registerEventHandlers(this);\n  }\n\n  async componentDidUpdate() {\n    if(!this.contentChanged) {\n      return;\n    }\n\n    /* The rendered text must be manually sanitized since there's no way to\n       preventDefault a compositionend event in some browsers... */\n    let junkNodes = [];\n    for(const node of this.textEditor.childNodes) {\n      if(node.nodeType === Node.TEXT_NODE || node.nodeName === 'BR' ||\n         node.nodeName === 'SPAN') {\n        junkNodes.push(node);\n      }\n    }\n\n    for(const node of junkNodes) {\n      this.textEditor.removeChild(node);\n    }\n\n    for(let i = 0; i < this.state.content.length; i++) {\n      let childElement = this.textEditor.children[i];\n      if(childElement.innerHTML !== this.state.content[i].c) {\n        childElement.childNodes[0].nodeValue = this.state.content[i].c;\n      }\n    }\n\n    if(this.caretInfo.rangeSelect) {\n      this.caret.setRangePosition(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n        this.caretInfo.rightIndex, this.caretInfo.rightPosition\n      );\n    }\n    else {\n      this.caret.setPosition(this.caretInfo.index, this.caretInfo.position);\n    }\n\n    this.contentChanged = false;\n    this.updateCaretInfo();\n\n    /* Callback with new content */\n    if(this.props.onChange) {\n      this.props.onChange(this.state.content);\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let handleBlur = (event) => {\n      if(this.caretInfo.editorSelected) {\n        this.caretInfo.editorSelected = false;\n        this.forceUpdate();\n      }\n    };\n\n    return (\n      <div className=\"Askd-text-editor\" id={this.id + '!'}>\n        <Toolbar mask={this.state.editorMask} callback={this.toolbarUpdate} />\n        <TextEditorContent content={this.state.content} id={this.id}\n                           editable={true} handleBlur={handleBlur}\n                           editorMask={this.state.editorMask}\n                           caretInfo={this.caretInfo} />\n      </div>\n    );\n  }\n}\n\nexport default TextEditor;\n","import React, { Component } from 'react';\nimport TextEditor from '../TextEditor/TextEditor';\nimport Utils from '../Utils';\n\nclass CpNotes extends Component {\n  async componentDidMount() {\n    await Utils.renderMathJax();\n  }\n\n  render() {\n    return (\n      <div className=\"Module-wrapper\">\n        <div className=\"Module-description Module-description-centered\">\n          <p>A work-in-progress web application for storing publicly\n          accessible competitive programming notes! \\[\\LaTeX\\]</p>\n        </div>\n        <TextEditor />\n      </div>\n    );\n  }\n}\n\nexport default CpNotes;\n","import React from 'react';\nimport CpNotes from '../Home/CpNotes';\n\nfunction Home() {\n  return (\n    <>\n      <CpNotes />\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction UserInfo({ info }) {\n  return (\n    <>\n      <h2 className=\"Module-heading\">{info.username}</h2>\n      {\n        info.email &&\n        <p>Email: {info.email} (only visible to you)</p>\n      }\n    </>\n  );\n}\n\nexport default UserInfo;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport '../css/SearchSelect.css';\n\nconst MAX_OPTIONS = 10;\nconst GLOBAL_SORT_KEY = 'sk';\n\nclass SearchSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchTerm: '',\n      previousValidSearchTerm: '',\n      showOptions: false,\n      options: [],\n      filteredOptions: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleOptionSelect = this.handleOptionSelect.bind(this);\n  }\n\n  getOptionString(option) {\n    const optionStringArray = [];\n    for(const key of this.props.keys)\n      optionStringArray.push(option[key]);\n\n    return optionStringArray.join(' - ');\n  }\n\n  async filterOptions() {\n    var filteredOptions = [];\n    const searchTerm = this.state.searchTerm.toLowerCase();\n\n    for(const option of this.state.options) {\n      if(filteredOptions.length === MAX_OPTIONS)\n        break;\n\n      const optionString = this.getOptionString(option);\n      if(optionString.toLowerCase().includes(searchTerm)) {\n        filteredOptions.push(option);\n        continue;\n      }\n\n      for(const key of this.props.keys) {\n        if(option[key].toLowerCase().includes(searchTerm)) {\n          filteredOptions.push(option);\n          break;\n        }\n      }\n    }\n\n    await Utils.setStatePromise(this, {\n      filteredOptions: filteredOptions\n    });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.staticKey && !this.props.staticKey) {\n      await Utils.setStatePromise(this, {\n        searchTerm: ''\n      });\n      return;\n    }\n\n    if(this.props.staticKey === prevProps.staticKey)\n      return;\n\n    await Utils.setStatePromise(this, {\n      searchTerm: '',\n      loading: true\n    });\n    const options = await this.props.search();\n\n    await Utils.setStatePromise(this, {\n      loading: false,\n      previousValidSearchTerm: '',\n      options: options,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleChange(event) {\n    await Utils.setStatePromise(this, {\n      searchTerm: event.target.value,\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleBlur(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.id === `Select-options-${this.props.name}`)\n      return;\n\n    await Utils.setStatePromise(this, {\n      showOptions: false,\n      searchTerm: this.state.previousValidSearchTerm\n    });\n  }\n\n  async handleFocus(event) {\n    await Utils.setStatePromise(this, {\n      showOptions: true\n    });\n  }\n\n  async handleOptionSelect(sortKey, optionString) {\n    await Utils.setStatePromise(this, {\n      searchTerm: optionString,\n      previousValidSearchTerm: optionString,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n    this.props.callback(sortKey);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    var optionElements = [];\n    for(const option of this.state.filteredOptions) {\n      const optionString = this.getOptionString(option);\n      const displayString = option[this.props.displayKey];\n      const sortKey = option[GLOBAL_SORT_KEY];\n      optionElements.push(\n        <li onClick={() => this.handleOptionSelect(sortKey, displayString)}\n            key={sortKey}>\n            {optionString}\n        </li>\n      );\n    }\n\n    return (\n      <div onBlur={this.handleBlur} className=\"Search-select\">\n        <input className={this.state.loading ? \"Askd-form-loading\" : \"\"}\n               onChange={this.handleChange} autoComplete=\"off\" type=\"text\"\n               value={this.state.searchTerm} onFocus={this.handleFocus}\n               name={this.props.name} id={this.props.id}\n               disabled={!this.props.search || this.state.loading} />\n        {\n          optionElements.length > 0 && this.state.showOptions &&\n          <ol id={`Select-options-${this.props.name}`} tabIndex=\"-1\"\n              className=\"Search-select-options\">\n            { optionElements }\n          </ol>\n        }\n      </div>\n    );\n  }\n}\n\nexport default SearchSelect;\n","const ApiConstants = Object.freeze({\n  API_ENDPOINT: 'https://qqmeusmrfk.execute-api.us-east-1.amazonaws.com/prod/'\n});\n\nexport default ApiConstants;\n","import queryString from 'query-string';\nimport ApiConstants from './ApiConstants';\nimport UserAuthApi from './UserAuthApi';\n\nclass Api {\n  static createApiError(name, message) {\n    const err = Error(message);\n    err.name = name;\n\n    return err;\n  }\n\n  static async manageResponseError(response) {\n    if(response.status === 400) {\n      const responseJson = await response.json();\n      throw Api.createApiError(responseJson.name, responseJson.message);\n    }\n    else if(response.status !== 200) {\n      throw Error('Request failed!');\n    }\n  }\n\n  static async sendRequestBody(resource, options, method) {\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + resource, {\n      method: method,\n      body: JSON.stringify(options),\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async getJson(resource, options) {\n    const path = `${resource}?${queryString.stringify(options)}`;\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + path, {\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async postJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'POST');\n  }\n\n  static async putJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'PUT');\n  }\n\n  static async deleteJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'DELETE');\n  }\n}\n\nexport default Api;\n","const SolvedState = Object.freeze({\n  SOLVED: { value: 0, text: 'Solved', css: 'solved' },\n  UPSOLVED: { value: 1, text: 'Upsolved', css: 'upsolved' },\n  UPSOLVED_HELP: { value: 2, text: 'Upsolved with help', css: 'upsolved-help' },\n  UNSOLVED: { value: 3, text: 'Unsolved', css: 'unsolved' }\n});\n\nexport default SolvedState;\n","import Api from './Api';\nimport SolvedState from '../Enum/SolvedState';\n\nclass ProblemsApi {\n  static _prettifyProblems(problems) {\n    for(let i = 0; i < problems.length; i++) {\n      problems[i].prettySk = problems[i].sk.replaceAll('#', '');\n    }\n  }\n\n  static async getContests(platform) {\n    const options = {\n      platform: platform\n    };\n\n    return await Api.getJson('contests', options);\n  }\n\n  static async getProblems(platform, contestId) {\n    const options = {\n      platform: platform,\n      contestId: contestId\n    };\n\n    let problems = await Api.getJson('problems', options);\n    ProblemsApi._prettifyProblems(problems);\n\n    return problems;\n  }\n\n  static async getProblemInfo(platform, problemId) {\n    const options = {\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.getJson('problems', options);\n  }\n\n  static getSolvedStateText(solvedStateValue) {\n    solvedStateValue = parseInt(solvedStateValue);\n    for(const state in SolvedState) {\n      if(SolvedState[state].value === solvedStateValue) {\n        return SolvedState[state].text;\n      }\n    }\n  }\n\n  static getSolvedStateCssClass(solvedStateValue) {\n    solvedStateValue = parseInt(solvedStateValue);\n    for(const state in SolvedState) {\n      if(SolvedState[state].value === solvedStateValue) {\n        return SolvedState[state].css;\n      }\n    }\n  }\n}\n\nexport default ProblemsApi;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport SearchSelect from '../SearchSelect/SearchSelect';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport '../css/AddProblemForm.css';\n\nclass AddProblemForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      platform: null,\n      contestSortKey: null,\n      problemSortKey: null,\n      skipContestSearch: false\n    };\n\n    this.close = this.close.bind(this);\n    this.handlePlatformChange = this.handlePlatformChange.bind(this);\n    this.toggleSkipContestSearch = this.toggleSkipContestSearch.bind(this);\n    this.updateProblemSortKey = this.updateProblemSortKey.bind(this);\n    this.updateContestSortKey = this.updateContestSortKey.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  close() {\n    this.props.callback(null, null, null);\n  }\n\n  async handlePlatformChange(event) {\n    await Utils.setStatePromise(this, {\n      platform: event.target.value\n    });\n  }\n\n  async toggleSkipContestSearch(event) {\n    await Utils.setStatePromise(this, {\n      skipContestSearch: !this.state.skipContestSearch,\n      contestSortKey: null,\n      problemSortKey: null\n    });\n  }\n\n  async updateContestSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      contestSortKey: sortKey,\n      problemSortKey: null\n    });\n  }\n\n  async updateProblemSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      problemSortKey: sortKey\n    });\n  }\n\n  async addProblem(event) {\n    event.preventDefault();\n\n    if(!this.state.problemSortKey) {\n      await Utils.componentSetError(this, 'Please search and select a problem.');\n      return;\n    }\n\n    this.props.callback(this.state.problemSortKey, this.state.platform, this);\n  }\n\n  render() {\n    var searchContestFunction = null;\n    var searchContestKey = null;\n    if(this.state.platform && !this.state.skipContestSearch) {\n      searchContestFunction = () => ProblemsApi.getContests(this.state.platform);\n      searchContestKey = this.state.platform;\n    }\n\n    var searchProblemFunction = null;\n    var searchProblemKey = null;\n    if(this.state.platform && this.state.contestSortKey) {\n      searchProblemFunction = () =>\n        ProblemsApi.getProblems(this.state.platform, this.state.contestSortKey);\n      searchProblemKey = this.state.platform + this.state.contestSortKey;\n    }\n    else if(this.state.platform && this.state.skipContestSearch) {\n      searchProblemFunction = () => ProblemsApi.getProblems(this.state.platform);\n      searchProblemKey = this.state.platform;\n    }\n\n    var skipButtonText = this.state.skipContestSearch ?\n                         'Want to filter by contest?' :\n                         'Want to skip filtering by contest?';\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">\n                X\n        </button>\n        <div className=\"Add-problem-form Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Add a problem!</h2>\n          <form className=\"Askd-form\" onSubmit={this.addProblem}>\n            <label htmlFor=\"cp-platform\">Platform</label>\n            <select defaultValue=\"\" onChange={this.handlePlatformChange}\n                    name=\"platform\" id=\"cp-platform\">\n              <option disabled value=\"\"></option>\n              <option value=\"CodeForces\">CodeForces</option>\n              <option value=\"CodeChef\">CodeChef</option>\n            </select>\n\n            <label htmlFor=\"cp-contest\">Contest</label>\n            <SearchSelect name='contest' id='cp-contest' search={searchContestFunction}\n                          keys={['sk', 'name']} callback={this.updateContestSortKey}\n                          displayKey='name' staticKey={searchContestKey} />\n\n            <button onClick={this.toggleSkipContestSearch}\n                    type=\"button\" className=\"Askd-form-link Askd-form-link-separator\">\n              { skipButtonText }\n            </button>\n\n            <label htmlFor=\"cp-title\">Problem</label>\n            <SearchSelect name='title' id='cp-title' search={searchProblemFunction}\n                          keys={['prettySk', 'name']} callback={this.updateProblemSortKey}\n                          displayKey='name' staticKey={searchProblemKey} />\n\n            <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                   value=\"Add Problem\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddProblemForm;\n","import Api from './Api';\n\nclass NotesApi {\n  static async getNotes(username) {\n    const options = {\n      username: username\n    };\n\n    return await Api.getJson('notes', options);\n  }\n\n  static async getNoteInfo(username, platform, problemId, forcePublished) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId,\n      forcePublished: forcePublished\n    };\n\n    return await Api.getJson('notes', options);\n  }\n\n  static async addNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.postJson('notes', options);\n  }\n\n  static async editNote(username, platform, problemId, title, solved,\n                        content, published) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId,\n      title: title,\n      solved: solved,\n      content: content,\n      published: published\n    };\n\n    return await Api.putJson('notes', options);\n  }\n\n  static async deleteNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.deleteJson('notes', options);\n  }\n}\n\nexport default NotesApi;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\n\nclass UserNoteInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    const solvedClass = ProblemsApi.getSolvedStateCssClass(info.solved);\n    const problemUrl = info.problemSk.replace('#', '/');\n    const publishedClass = info.published ? 'published' : 'unpublished';\n    const timestamp = (new Date(info.editedTime)).toLocaleDateString();\n    const authorUsername = info.username;\n\n    return (\n      <li className={`User-note-info User-note-info-${solvedClass}`}>\n        <ul className=\"User-note-info-links\">\n          {\n            this.props.loggedInUsername === authorUsername &&\n            <li>\n              <Link className=\"Askd-form-link\"\n                    to={`/notes/edit/${info.platform}/${problemUrl}`}>\n                Edit\n              </Link>\n            </li>\n          }\n          {\n            info.published &&\n            <li>\n              <Link className=\"Askd-form-link\"\n                    to={`/notes/${authorUsername}/${info.platform}/${problemUrl}`}>\n                View\n              </Link>\n            </li>\n          }\n        </ul>\n        <h5>\n          {info.platform} {info.problemCode} - {info.problemName}\n        </h5>\n        <h6 className=\"User-note-info-title\">\n          {info.title}\n        </h6>\n        <h6 className=\"User-note-info-timestamp\">\n          {timestamp}\n        </h6>\n        <ul className=\"User-note-info-tags\">\n          <li className=\"User-note-info-tag User-note-solved-indicator\" />\n          <li className={`User-note-info-tag User-note-tag-${publishedClass}`} />\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default UserNoteInfo;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\n\nclass UserContestInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    let noteElements = [];\n    for(let i = 0; i < info.notes.length; i++) {\n      const note = info.notes[i];\n      const problemCode = note.problemSk.split('#')[1];\n      const problemUrl = note.problemSk.replace('#', '/');\n      const authorUsername = note.username;\n\n      let codeClassName = 'User-note-contest-code';\n      if(problemCode.length >= 3) {\n        codeClassName += '-small';\n      }\n\n      const solvedClass = ProblemsApi.getSolvedStateCssClass(note.solved);\n\n      noteElements.push(\n        <li key={i} className={`User-note-contest-note User-note-contest-${solvedClass}`}>\n          <ul className=\"User-note-contest-links\">\n            {\n              this.props.loggedInUsername === authorUsername &&\n              <li>\n                <Link className=\"Askd-form-link\"\n                      to={`/notes/edit/${note.platform}/${problemUrl}`}>\n                  Edit\n                </Link>\n              </li>\n            }\n            {\n              note.published &&\n              <li>\n                <Link className=\"Askd-form-link\"\n                      to={`/notes/${authorUsername}/${note.platform}/${problemUrl}`}>\n                  View\n                </Link>\n              </li>\n            }\n          </ul>\n          <span className={codeClassName}>\n            {problemCode}\n          </span>\n        </li>\n      );\n    }\n\n    const timestamp = (new Date(info.editedTime)).toLocaleDateString();\n\n    return (\n      <li className=\"User-note-info\">\n        <h5>\n          {info.contestName}\n        </h5>\n        <h6 className=\"User-note-contest-timestamp\">\n          {timestamp}\n        </h6>\n        <ul className=\"User-note-contest-notes\">\n          { noteElements }\n        </ul>\n      </li>\n    );\n  }\n}\n\nexport default UserContestInfo;\n","import React from 'react';\n\nfunction UserNotesTitleDropdown({ title, innerContent, showing, toggleCallback }) {\n  const showText = showing ? 'Hide' : 'Show';\n\n  return (\n    <li className=\"User-notes-title-dropdown\">\n      <button className=\"User-notes-title-dropdown-showhide Askd-form-link\"\n              onClick={toggleCallback}>\n        { showText }\n      </button>\n      <h4 className=\"User-notes-title-dropdown-heading\">\n        {title}\n      </h4>\n      { showing && innerContent }\n    </li>\n  );\n}\n\nexport default UserNotesTitleDropdown;\n","class VirtualPaginator {\n  constructor(pageSize, content) {\n    this.pageSize = pageSize;\n    this.setContent(content);\n  }\n\n  setContent(content) {\n    this.content = [];\n    this.activeItems = content.length;\n\n    for(let i = 0; i < content.length; i++) {\n      let item = content[i];\n      item.paginatorActive = true;\n      this.content.push(item);\n    }\n  }\n\n  toggleActiveItems(indices) {\n    for(const index of indices) {\n      const active = this.content[index].paginatorActive;\n      this.content[index].paginatorActive = !active;\n\n      if(active) {\n        this.activeItems--;\n      }\n      else {\n        this.activeItems++;\n      }\n    }\n  }\n\n  getContent(pageIndex) {\n    let currentIndex = 1;\n    let activeBufferSize = 0;\n    let itemBuffer = [];\n\n    for(const item of this.content) {\n      itemBuffer.push(item);\n      if(item.paginatorActive) {\n        activeBufferSize++;\n        if(activeBufferSize === this.pageSize) {\n          if(currentIndex === pageIndex)\n            return itemBuffer;\n          itemBuffer = [];\n          activeBufferSize = 0;\n          currentIndex++;\n        }\n      }\n    }\n\n    if(currentIndex === pageIndex) {\n      return itemBuffer;\n    }\n\n    throw Error('Page index out of range!');\n  }\n\n  getPageCount() {\n    let pageCount = 0;\n    let bufferSize = 0;\n    let activeBufferSize = 0;\n    for(const item of this.content) {\n      if(bufferSize === 0) {\n        pageCount++;\n      }\n\n      bufferSize++;\n      if(item.paginatorActive) {\n        activeBufferSize++;\n      }\n      if(activeBufferSize === this.pageSize) {\n        activeBufferSize = 0;\n        bufferSize = 0;\n      }\n    }\n\n    return pageCount;\n  }\n}\n\nexport default VirtualPaginator;\n","import React from 'react';\nimport '../css/Paginator.css';\n\nfunction Paginator({ currentPage, totalPages, callback }) {\n  let pageIndices = [ currentPage ];\n\n  let after = currentPage + 1;\n  let increment = 2;\n  while(after < totalPages) {\n    pageIndices.push(after);\n    after += increment;\n    increment *= 2;\n  }\n\n  let before = currentPage - 1;\n  increment = 2;\n  while(before > 1) {\n    pageIndices.push(before);\n    before -= increment;\n    increment *= 2;\n  }\n\n  if(currentPage !== 1)\n    pageIndices.push(1);\n  if(currentPage !== totalPages && totalPages > 1)\n    pageIndices.push(totalPages);\n\n  pageIndices.sort((a, b) => a - b);\n\n  let paginatorButtons = [];\n  for(const pageIndex of pageIndices) {\n    const buttonClassName = (pageIndex === currentPage) ?\n      'Paginator-list-selected' : 'Askd-form-link';\n    paginatorButtons.push(\n      <li key={pageIndex}>\n        <button className={buttonClassName} onClick={() => callback(pageIndex)}>\n          {pageIndex}\n        </button>\n      </li>\n    );\n  }\n\n  return (\n    <div className=\"Paginator\">\n      <ul className=\"Paginator-list\">\n        { paginatorButtons }\n      </ul>\n    </div>\n  );\n}\n\nexport default Paginator;\n","import React, { Component } from 'react';\nimport UserNoteInfo from './UserNoteInfo';\nimport UserContestInfo from './UserContestInfo';\nimport UserNotesTitleDropdown from './UserNotesTitleDropdown';\nimport VirtualPaginator from '../Paginator/VirtualPaginator';\nimport Paginator from '../Paginator/Paginator';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport Utils from '../Utils';\n\nconst RecursionLevel = Object.freeze({\n  CONTEST: 0,\n  PLATFORM: 1,\n  SOLVED: 2\n});\nconst PAGINATE_SIZE = 15;\n\nfunction compareByRecent(note1, note2) {\n  if(note1.editedTime > note2.editedTime)\n    return -1;\n  return 1;\n}\n\nfunction groupByAttributes(objectList, attributes) {\n  let attributeGroups = {};\n  for(const obj of objectList) {\n    let attributeValues = [];\n    for(const attribute of attributes) {\n      attributeValues.push(obj[attribute]);\n    }\n\n    const key = attributeValues.join('#');\n    if(attributeGroups.hasOwnProperty(key)) {\n      attributeGroups[key].push(obj);\n    }\n    else {\n      attributeGroups[key] = [ obj ];\n    }\n  }\n\n  return attributeGroups;\n}\n\nclass UserNotesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: 1,\n      loggedInUsername: null\n    };\n\n    this.sortNoteItems(this.props.notes);\n    this.virtualPaginator = new VirtualPaginator(PAGINATE_SIZE, this.sortedNoteItems);\n\n    this.updatePage = this.updatePage.bind(this);\n  }\n\n  async componentDidMount() {\n    const loggedInUsername = await UserAuthApi.getUsername();\n    await Utils.setStatePromise(this, {\n      loggedInUsername: loggedInUsername\n    });\n  }\n\n  createContestObject(notes) {\n    const firstNote = notes[0];\n    let contestObject = {\n      contestCode: firstNote.contestCode,\n      contestName: firstNote.contestName,\n      platform: firstNote.platform,\n      editedTime: firstNote.editedTime,\n      notes: []\n    };\n\n    if(this.props.organizeBySolved)\n      contestObject.solved = firstNote.solved;\n    if(this.props.organizeByPlatform)\n      contestObject.platform = firstNote.platform;\n\n    for(const note of notes) {\n      contestObject.notes.push(note);\n      if(note.editedTime > contestObject.editedTime) {\n        contestObject.editedTime = note.editedTime;\n      }\n    }\n\n    return contestObject;\n  }\n\n  sortNoteItems(notes, recursionLevel = RecursionLevel.SOLVED, keyString = '') {\n    let paginatorIndices = [];\n    if(recursionLevel === RecursionLevel.CONTEST) {\n      if(this.props.organizeByContest) {\n        const contestGroups = groupByAttributes(notes, ['platform', 'contestCode']);\n        for(const key in contestGroups) {\n          let contestObject = this.createContestObject(contestGroups[key]);\n          paginatorIndices.push(this.sortedNoteItems.length);\n          this.sortedNoteItems.push(contestObject);\n        }\n      }\n      else {\n        for(const note of notes) {\n          paginatorIndices.push(this.sortedNoteItems.length);\n          this.sortedNoteItems.push(note);\n        }\n      }\n    }\n    else {\n      let organize, attributeString;\n      if(recursionLevel === RecursionLevel.SOLVED) {\n        this.sortedNoteItems = [];\n        this.dropdownShowing = {};\n        this.dropdownIndices = {};\n\n        if(this.props.sortByRecent) {\n          notes = [...notes].sort(compareByRecent);\n        }\n\n        organize = this.props.organizeBySolved;\n        attributeString = 'solved';\n      }\n      else {\n        organize = this.props.organizeByPlatform;\n        attributeString = 'platform';\n      }\n\n      if(organize) {\n        const groups = groupByAttributes(notes, [attributeString]);\n        for(const key in groups) {\n          const innerKeyString = `${keyString}#${key}`;\n          const innerIndices =\n            this.sortNoteItems(groups[key], recursionLevel - 1, innerKeyString);\n\n          this.dropdownShowing[innerKeyString] = true;\n          this.dropdownIndices[innerKeyString] = innerIndices;\n\n          for(const index of innerIndices) {\n            paginatorIndices.push(index);\n          }\n        }\n      }\n      else {\n        return this.sortNoteItems(notes, recursionLevel - 1, keyString);\n      }\n    }\n\n    return paginatorIndices;\n  }\n\n  renderNoteItems(notes, recursionLevel = RecursionLevel.SOLVED, keyString = '') {\n    let noteInfoElements = [];\n    if(recursionLevel === RecursionLevel.CONTEST) {\n      let NoteComponent =\n        this.props.organizeByContest ? UserContestInfo : UserNoteInfo;\n\n      for(let i = 0; i < notes.length; i++) {\n        noteInfoElements.push(\n          <NoteComponent key={i} info={notes[i]}\n                         loggedInUsername={this.state.loggedInUsername} />\n        );\n      }\n    }\n    else {\n      let organize, attributeString;\n      if(recursionLevel === RecursionLevel.SOLVED) {\n        organize = this.props.organizeBySolved;\n        attributeString = 'solved';\n      }\n      else {\n        organize = this.props.organizeByPlatform;\n        attributeString = 'platform';\n      }\n\n      if(organize) {\n        const groups = groupByAttributes(notes, [attributeString]);\n        for(const key in groups) {\n          const innerKeyString = `${keyString}#${key}`;\n          const innerContent =\n            this.renderNoteItems(groups[key], recursionLevel - 1, innerKeyString);\n          const title = (recursionLevel === RecursionLevel.SOLVED) ?\n            ProblemsApi.getSolvedStateText(key) : key;\n\n          const showing = this.dropdownShowing[innerKeyString];\n          const innerIndices = this.dropdownIndices[innerKeyString];\n          const toggleCallback = async () => {\n            this.virtualPaginator.toggleActiveItems(innerIndices);\n            this.dropdownShowing[innerKeyString] = !this.dropdownShowing[innerKeyString];\n\n            const totalPages = this.virtualPaginator.getPageCount();\n            if(this.state.page > totalPages) {\n              await this.updatePage(totalPages);\n            }\n\n            this.forceUpdate();\n          };\n\n          noteInfoElements.push(\n            <UserNotesTitleDropdown key={key} title={title}\n                                    innerContent={innerContent} showing={showing}\n                                    toggleCallback={toggleCallback} />\n          );\n        }\n      }\n      else {\n        return this.renderNoteItems(notes, recursionLevel - 1);\n      }\n    }\n\n    return (\n      <ul className=\"User-notes-list\">\n        { noteInfoElements }\n      </ul>\n    );\n  }\n\n  async updatePage(page) {\n    await Utils.setStatePromise(this, {\n      page: page\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Only re-sort note items on an (important) props update\n    const importantProps = [\n      'organizeBySolved',\n      'organizeByPlatform',\n      'organizeByContest',\n      'sortByRecent'\n    ];\n    const currentImportantProps = importantProps.map((x) => this.props[x]);\n    const nextImportantProps = importantProps.map((x) => nextProps[x]);\n\n    if(JSON.stringify(currentImportantProps) !== JSON.stringify(nextImportantProps)) {\n      this.props = nextProps;\n      this.sortNoteItems(this.props.notes);\n      this.virtualPaginator.setContent(this.sortedNoteItems);\n\n      if(this.state.page !== 1) {\n        this.updatePage(1);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  render() {\n    if(this.props.notes.length === 0) {\n      return (\n        <p className=\"User-notes-nothing\">There's nothing to see here yet!</p>\n      );\n    }\n\n    const noteItems = this.virtualPaginator.getContent(this.state.page);\n    const totalPages = this.virtualPaginator.getPageCount();\n    const paginator = (\n      <Paginator currentPage={this.state.page} totalPages={totalPages}\n                 callback={this.updatePage} />\n    );\n\n    return (\n      <>\n        { paginator }\n        { this.renderNoteItems(noteItems) }\n        { paginator }\n      </>\n    );\n  }\n}\n\nexport default UserNotesList;\n","import React, { Component } from 'react';\nimport AddProblemForm from './AddProblemForm';\nimport NotesApi from '../Api/NotesApi';\nimport UserNotesList from './UserNotesList';\nimport Utils from '../Utils';\nimport '../css/UserNotes.css';\n\nclass UserNotes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAddProblemForm: false,\n      organizeBySolved: false,\n      organizeByPlatform: false,\n      organizeByContest: false,\n      sortByRecent: false\n    };\n\n    this.toggleAddProblemForm = this.toggleAddProblemForm.bind(this);\n    this.toggleOrganizeBySolved = this.toggleOrganizeBySolved.bind(this);\n    this.toggleOrganizeByPlatform = this.toggleOrganizeByPlatform.bind(this);\n    this.toggleOrganizeByContest = this.toggleOrganizeByContest.bind(this);\n    this.toggleSortByRecent = this.toggleSortByRecent.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  async toggleAddProblemForm() {\n    await Utils.setStatePromise(this, {\n      showAddProblemForm: !this.state.showAddProblemForm\n    });\n  }\n\n  async toggleOrganizeBySolved() {\n    await Utils.setStatePromise(this, {\n      organizeBySolved: !this.state.organizeBySolved\n    });\n  }\n\n  async toggleOrganizeByPlatform() {\n    await Utils.setStatePromise(this, {\n      organizeByPlatform: !this.state.organizeByPlatform\n    });\n  }\n\n  async toggleOrganizeByContest() {\n    await Utils.setStatePromise(this, {\n      organizeByContest: !this.state.organizeByContest\n    });\n  }\n\n  async toggleSortByRecent() {\n    await Utils.setStatePromise(this, {\n      sortByRecent: !this.state.sortByRecent\n    });\n  }\n\n  async addProblem(problemSortKey, platform, formComponent) {\n    if(!problemSortKey) {\n      await this.toggleAddProblemForm();\n      return;\n    }\n\n    try {\n      const username = this.props.userInfo.username;\n      await NotesApi.addNote(username, platform, problemSortKey);\n\n      const problemUrl = problemSortKey.replace('#', '/');\n      this.props.history.push(`/notes/edit/${platform}/${problemUrl}`);\n    }\n    catch(err) {\n      await Utils.componentSetError(formComponent, err.message);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h2 className=\"Module-heading\">Problems</h2>\n        {\n          this.state.showAddProblemForm &&\n          <AddProblemForm callback={this.addProblem} />\n        }\n        <form>\n          <div className=\"User-notes-organize\">\n            <label>\n              <b>Organize by</b>\n            </label>\n            <input type=\"checkbox\" name=\"solved\" value=\"solved\"\n                   onChange={this.toggleOrganizeBySolved} />\n            <label htmlFor=\"solved\">Solved</label>\n            <input type=\"checkbox\" name=\"platform\" value=\"platform\"\n                   onChange={this.toggleOrganizeByPlatform} />\n            <label htmlFor=\"platform\">Platform</label>\n            <input type=\"checkbox\" name=\"contest\" value=\"contest\"\n                   onChange={this.toggleOrganizeByContest} />\n            <label htmlFor=\"contest\">Contest</label>\n          </div>\n          <div className=\"User-notes-organize\">\n            <label htmlFor=\"sort\">\n              <b>Sort by</b>\n            </label>\n            <select defaultValue=\"default\" name=\"sort\"\n                    onChange={this.toggleSortByRecent}>\n              <option value=\"default\">Default</option>\n              <option value=\"recent\">Recent</option>\n            </select>\n          </div>\n        </form>\n        <div className=\"User-notes Module-space\">\n          <UserNotesList organizeBySolved={this.state.organizeBySolved}\n                         organizeByPlatform={this.state.organizeByPlatform}\n                         organizeByContest={this.state.organizeByContest}\n                         sortByRecent={this.state.sortByRecent}\n                         notes={this.props.notes} />\n          {\n            this.props.userInfo.email &&\n            <button onClick={this.toggleAddProblemForm}\n                    className=\"User-notes-add Askd-button Askd-button-circular\">\n              +\n            </button>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserNotes;\n","import Api from './Api';\n\nclass UserApi {\n  static async getUserInfo(username) {\n    const options = {\n      username: username\n    };\n\n    return await Api.getJson('profile', options);\n  }\n}\n\nexport default UserApi;\n","const LoadState = Object.freeze({\n  LOADING: 0,\n  DONE: 1,\n  NOT_FOUND: 2\n});\n\nexport default LoadState;\n","import React, { Component } from 'react';\nimport UserInfo from './UserInfo';\nimport UserNotes from './UserNotes';\nimport UserApi from '../Api/UserApi';\nimport NotesApi from '../Api/NotesApi';\nimport LoadState from '../Enum/LoadState';\nimport Utils from '../Utils';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: LoadState.LOADING,\n      userInfo: null,\n      notes: null\n    };\n  }\n\n  async getUserInfo() {\n    const username = this.props.match.params.username;\n    return await UserApi.getUserInfo(username);\n  }\n\n  async getNotes() {\n    const username = this.props.match.params.username;\n    return await NotesApi.getNotes(username);\n  }\n\n  async loadInfo() {\n    try {\n      const userInfo = await this.getUserInfo();\n      const notes = await this.getNotes();\n      await Utils.setStatePromise(this, {\n        screen: LoadState.DONE,\n        userInfo: userInfo,\n        notes: notes\n      });\n    }\n    catch(err) {\n      if(err.name === 'UserNotFound') {\n        await Utils.setStatePromise(this, {\n          screen: LoadState.NOT_FOUND\n        });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadInfo();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.match.params.username !== this.props.match.params.username) {\n      await Utils.setStatePromise(this, {\n        screen: LoadState.LOADING,\n        info: null\n      });\n      await this.loadInfo();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const loadingContent = null;\n    const loadedContent = (\n      <>\n        <div className=\"Module-description\">\n          <UserInfo info={this.state.userInfo} />\n        </div>\n        <UserNotes userInfo={this.state.userInfo} notes={this.state.notes}\n                   history={this.props.history} />\n      </>\n    );\n    const userNotFoundContent = (\n      <div className=\"Module-description\">\n        <h2>User not found!</h2>\n      </div>\n    );\n\n    var content;\n    switch(this.state.screen) {\n      case LoadState.LOADING:\n        content = loadingContent;\n        break;\n      case LoadState.DONE:\n        content = loadedContent;\n        break;\n      case LoadState.NOT_FOUND:\n        content = userNotFoundContent;\n        break;\n      default:\n    }\n\n    return (\n      <>\n        <div className=\"Module-wrapper\">\n          { content }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React, { Component } from 'react';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass DeleteMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: ''\n    };\n    this.randomCode = uuidv4();\n\n    this.close = this.close.bind(this);\n    this.deleteNote = this.deleteNote.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async deleteNote(event) {\n    event.preventDefault();\n\n    const confirmCode = event.target.confirmCode.value;\n    if(confirmCode !== this.randomCode) {\n      await Utils.componentSetError(this, \"Your confirmation code doesn't match!\");\n      return;\n    }\n\n    try {\n      const username = await UserAuthApi.getUsername();\n      const platform = this.props.platform;\n      const problemId = this.props.problemInfo.problemId;\n\n      await NotesApi.deleteNote(username, platform, problemId);\n      this.props.history.push(`/users/${username}`);\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">\n          X\n        </button>\n        <div className=\"Edit-note-delete-menu Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Are you sure you want to permanently delete this note?</h2>\n          <p>\n            This action cannot be undone! Please enter the following\n            code as confirmation.\n          </p>\n          <form className=\"Askd-form\" onSubmit={this.deleteNote}>\n            <label htmlFor=\"confirmCode\">{this.randomCode}</label>\n            <input autoComplete=\"off\" type=\"text\" name=\"confirmCode\"\n                   key=\"confirmCode\" id=\"confirmCode\" />\n\n            <input className=\"Askd-button\" type=\"submit\" value=\"Delete\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DeleteMenu;\n","import React, { Component } from 'react';\nimport { Prompt } from 'react-router';\nimport TextEditor from '../TextEditor/TextEditor';\nimport DeleteMenu from './DeleteMenu';\nimport SolvedState from '../Enum/SolvedState';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\n\nfunction remindUserToSave(event) {\n  event.preventDefault();\n  event.returnValue = '';\n}\n\nclass EditNoteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const noteInfo = this.props.noteInfo;\n    this.title = noteInfo.title;\n    this.solved = noteInfo.solved;\n    this.content = JSON.parse(noteInfo.content);\n    this.lastSaved = new Date(noteInfo.editedTime);\n\n    this.state = {\n      published: noteInfo.published,\n      disableEditButtons: false,\n      saved: true,\n      loadingSave: false,\n      loadingPublish: false,\n      showDeleteMenu: false\n    };\n\n    this.saveNote = this.saveNote.bind(this);\n    this.togglePublishNote = this.togglePublishNote.bind(this);\n    this.toggleDeleteMenu = this.toggleDeleteMenu.bind(this);\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleSolvedChange = this.handleSolvedChange.bind(this);\n    this.handleContentChange = this.handleContentChange.bind(this);\n  }\n\n  async saveOrPublishNote(published) {\n    const username = await UserAuthApi.getUsername();\n    const platform = this.props.platform;\n    const problemId = this.props.problemInfo.problemId;\n    const title = this.title;\n    const solved = this.solved;\n    const content = JSON.stringify(this.content);\n\n    await NotesApi.editNote(username, platform, problemId, title, solved,\n                            content, published);\n\n    this.lastSaved = new Date();\n    window.onbeforeunload = null;\n\n    await Utils.setStatePromise(this, {\n      published: published,\n      disableEditButtons: false,\n      saved: true,\n      loadingSave: false,\n      loadingPublish: false\n    });\n  }\n\n  async saveNote(event) {\n    await Utils.setStatePromise(this, {\n      disableEditButtons: true,\n      loadingSave: true\n    });\n\n    await this.saveOrPublishNote(this.state.published);\n  }\n\n  async togglePublishNote(event) {\n    await Utils.setStatePromise(this, {\n      disableEditButtons: true,\n      loadingPublish: true\n    });\n\n    await this.saveOrPublishNote(!this.state.published);\n  }\n\n  async toggleDeleteMenu(event) {\n    await Utils.setStatePromise(this, {\n      showDeleteMenu: !this.state.showDeleteMenu\n    });\n  }\n\n  handleTitleChange(event) {\n    this.title = event.target.value;\n  }\n\n  handleSolvedChange(event) {\n    this.solved = event.target.value;\n  }\n\n  async handleContentChange(newContent) {\n    this.content = newContent;\n\n    if(this.state.saved) {\n      await Utils.setStatePromise(this, {\n        saved: false\n      });\n\n      window.onbeforeunload = remindUserToSave;\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    let savedText = this.state.saved ? 'All changes saved! - ' : 'Last saved on ';\n    savedText += this.lastSaved.toLocaleString();\n\n    const togglePublishText = this.state.published ? 'Unpublish' : 'Publish!';\n    let saveButtonClass = 'Askd-button Askd-not-fullwidth';\n    let publishButtonClass = 'Askd-button Askd-not-fullwidth';\n\n    if(this.state.loadingSave) saveButtonClass += ' Askd-form-loading';\n    if(this.state.loadingPublish) publishButtonClass += ' Askd-form-loading';\n\n    return (\n      <>\n        <Prompt when={!this.state.saved}\n                message='Are you sure you want to leave? You have unsaved changes.' />\n        {\n          this.state.showDeleteMenu &&\n          <DeleteMenu exitCallback={this.toggleDeleteMenu}\n                      platform={this.props.platform} history={this.props.history}\n                      problemInfo={this.props.problemInfo} />\n        }\n        <form className=\"Edit-note-form Askd-form\">\n          <input className=\"Edit-note-title\" name=\"title\" type=\"text\"\n                 defaultValue={this.title} placeholder=\"Title\"\n                 onChange={this.handleTitleChange} />\n\n          <select name=\"solved\" id=\"note-solved\" onChange={this.handleSolvedChange}\n                  defaultValue={this.solved}>\n            <option value={SolvedState.SOLVED.value}>Solved</option>\n            <option value={SolvedState.UPSOLVED.value}>Upsolved</option>\n            <option value={SolvedState.UPSOLVED_HELP.value}>Upsolved with help</option>\n            <option value={SolvedState.UNSOLVED.value}>Unsolved</option>\n          </select>\n\n          <TextEditor initialContent={this.content}\n                      onChange={this.handleContentChange} />\n          <p className=\"Edit-note-saved-text\">{savedText}</p>\n          <div className=\"Edit-note-bottom-buttons\">\n            <input className={saveButtonClass} type=\"button\" value=\"Save\"\n                   onClick={this.saveNote}\n                   disabled={this.state.disableEditButtons} />\n\n            <input className={publishButtonClass} type=\"button\"\n                   value={togglePublishText} onClick={this.togglePublishNote}\n                   disabled={this.state.disableEditButtons} />\n          </div>\n          <div className=\"Edit-note-delete\">\n            <button type=\"button\" className=\"Askd-form-link Askd-form-link-bottom\"\n                    onClick={this.toggleDeleteMenu}>\n              Permanently delete this note?\n            </button>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default EditNoteForm;\n","import React, { Component } from 'react';\n\nclass ProblemInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    return (\n      <div className=\"Edit-note-problem-info\">\n        <div className=\"Module-info-box\">\n          <h4>\n            {this.props.platform} {info.problemCode} - {info.problemName}\n          </h4>\n          <p className=\"Edit-note-contest\">{info.contestName}</p>\n          <a className=\"Askd-form-link\" href={info.link}>Problem link</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProblemInfo;\n","import React, { Component } from 'react';\nimport LoadState from '../Enum/LoadState';\nimport EditNoteForm from './EditNoteForm';\nimport ProblemInfo from './ProblemInfo';\nimport ProblemsApi from '../Api/ProblemsApi'\nimport NotesApi from '../Api/NotesApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport Utils from '../Utils';\nimport '../css/EditNote.css';\n\nclass EditNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: LoadState.LOADING,\n      problemInfo: null,\n      noteInfo: null\n    };\n  }\n\n  async loadProblemInfo() {\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    let problemInfo = await ProblemsApi.getProblemInfo(platform, problemId);\n    problemInfo.problemId = problemId;\n\n    return problemInfo;\n  }\n\n  async loadNoteInfo() {\n    const username = await UserAuthApi.getUsername();\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    const noteInfo = await NotesApi.getNoteInfo(username, platform, problemId);\n\n    return noteInfo;\n  }\n\n  async loadInfo() {\n    const problemInfo = await this.loadProblemInfo();\n    const noteInfo = await this.loadNoteInfo();\n    \n    await Utils.setStatePromise(this, {\n      problemInfo: problemInfo,\n      noteInfo: noteInfo,\n      screen: LoadState.DONE\n    });\n  }\n\n  async componentDidMount() {\n    await this.loadInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const platform = this.props.match.params.platform;\n\n    const loadingContent = null;\n    const loadedContent = (\n      <>\n        <ProblemInfo info={this.state.problemInfo} platform={platform} />\n        <EditNoteForm problemInfo={this.state.problemInfo}\n                      noteInfo={this.state.noteInfo} platform={platform}\n                      history={this.props.history} />\n      </>\n    );\n    const noteNotFoundContent = (\n      <div className=\"Module-description\">\n        <h2>Note does not exist!</h2>\n      </div>\n    );\n\n    let content;\n    switch(this.state.screen) {\n      case LoadState.LOADING:\n        content = loadingContent;\n        break;\n      case LoadState.DONE:\n        content = loadedContent;\n        break;\n      case LoadState.NOT_FOUND:\n        content = noteNotFoundContent;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-wrapper\">\n        { content }\n      </div>\n    );\n  }\n}\n\nexport default EditNote;\n","import Api from './Api';\n\nclass LikesApi {\n  static async sendLike(username, noteAuthor, platform, problemId, likedStatus) {\n    const options = {\n      username: username,\n      noteAuthor: noteAuthor,\n      platform: platform,\n      problemId: problemId,\n      likedStatus: likedStatus\n    };\n\n    return await Api.putJson('likes/notes', options);\n  }\n}\n\nexport default LikesApi;\n","import React, { useState } from 'react';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/LikeDislike.css';\n\nfunction LikeDislike({ initialScore, initialStatus, likeCallback }) {\n  let [ score, setScore ] = useState(initialScore);\n  let [ status, setStatus ] = useState(initialStatus);\n\n  let likeButtonClass = 'Like-button';\n  if(status > 0) {\n    likeButtonClass += ' Like-button-liked';\n  }\n\n  let toggleStatus = async () => {\n    const username = await UserAuthApi.getUsername();\n    if(!username) {\n      window.suggestUserRegister();\n      return;\n    }\n\n    if(status > 0) {\n      setStatus(0);\n      setScore(score - 1);\n      likeCallback(0);\n    }\n    else {\n      setStatus(1);\n      setScore(score + 1);\n      likeCallback(1);\n    }\n  };\n\n  return (\n    <div className=\"Like-dislike\">\n      <button className={likeButtonClass} onClick={toggleStatus}>\n        <span className=\"Like-dislike-score\">+{score}</span> I like this!\n      </button>\n    </div>\n  );\n}\n\nexport default LikeDislike;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport LikesApi from '../Api/LikesApi';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport TextEditorContent from '../TextEditor/TextEditorContent';\nimport LikeDislike from '../Misc/LikeDislike';\nimport '../css/PublicNoteInfo.css';\n\nfunction PublicNoteInfo({ info }) {\n  const content = JSON.parse(info.content);\n  const editedTimestamp = (new Date(info.editedTime)).toLocaleString();\n  const solvedClass = ProblemsApi.getSolvedStateCssClass(info.solved);\n\n  let likeCallback = async (likedStatus) => {\n    const username = await UserAuthApi.getUsername();\n    const noteAuthor = info.username;\n    const platform = info.platform;\n    const problemId = info.problemSk;\n\n    await LikesApi.sendLike(username, noteAuthor, platform, problemId, likedStatus);\n  };\n\n  return (\n    <div className=\"Public-note-info Module-space Module-padding-box\">\n      <h3 className=\"Module-space-heading\">\n        <span className={`Public-note-solved-tag User-note-info-${solvedClass}`}>\n          <span className=\"User-note-info-tag User-note-solved-indicator\" />\n        </span>\n        {info.title}\n      </h3>\n      <p className=\"Module-space-text\">\n        Written by <Link className=\"Askd-form-link\" to={`/users/${info.username}`}>\n          {info.username}\n        </Link>\n      </p>\n      <div className=\"Askd-text-editor\">\n        <TextEditorContent content={content} id={null} editable={false} />\n      </div>\n      <p className=\"Module-space-text\">\n        Last edited on {editedTimestamp}\n      </p>\n      <LikeDislike initialScore={info.likeCount} initialStatus={info.likedStatus}\n                   likeCallback={likeCallback} />\n    </div>\n  );\n}\n\nexport default PublicNoteInfo;\n","import React, { Component } from 'react';\nimport LoadState from '../Enum/LoadState';\nimport ProblemInfo from '../EditNote/ProblemInfo';\nimport PublicNoteInfo from './PublicNoteInfo';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\n\nclass PublicNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: LoadState.LOADING,\n      problemInfo: null,\n      noteInfo: null\n    };\n  }\n\n  async loadProblemInfo() {\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    let problemInfo = await ProblemsApi.getProblemInfo(platform, problemId);\n    problemInfo.problemId = problemId;\n\n    return problemInfo;\n  }\n\n  async loadNoteInfo() {\n    const ownerUsername = this.props.match.params.ownerUsername;\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    const noteInfo = await NotesApi.getNoteInfo(ownerUsername, platform, problemId, true);\n    return noteInfo;\n  }\n\n  async loadInfo() {\n    const problemInfo = await this.loadProblemInfo();\n    const noteInfo = await this.loadNoteInfo();\n\n    await Utils.setStatePromise(this, {\n      problemInfo: problemInfo,\n      noteInfo: noteInfo,\n      screen: LoadState.DONE\n    });\n  }\n\n  async componentDidMount() {\n    await this.loadInfo();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const platform = this.props.match.params.platform;\n\n    const loadingContent = null;\n    const loadedContent = (\n      <>\n        <ProblemInfo info={this.state.problemInfo} platform={platform} />\n        <PublicNoteInfo info={this.state.noteInfo} />\n      </>\n    );\n    const noteNotFoundContent = (\n      <div className=\"Module-description\">\n        <h2>Note is either unpublished or does not exist!</h2>\n      </div>\n    );\n\n    let content;\n    switch(this.state.screen) {\n      case LoadState.LOADING:\n        content = loadingContent;\n        break;\n      case LoadState.DONE:\n        content = loadedContent;\n        break;\n      case LoadState.NOT_FOUND:\n        content = noteNotFoundContent;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-wrapper\">\n        { content }\n      </div>\n    );\n  }\n}\n\nexport default PublicNote;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './Header/Header';\nimport Home from './Home/Home';\nimport UserProfile from './UserProfile/UserProfile';\nimport EditNote from './EditNote/EditNote';\nimport PublicNote from './PublicNote/PublicNote';\n\nimport './css/App.css';\nimport './css/Module.css';\nimport './css/Form.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/users/:username\" component={UserProfile} />\n          <Route exact path=\"/notes/edit/:platform/:contestId/:problemCode\"\n                 component={EditNote} />\n          <Route exact path=\"/notes/:ownerUsername/:platform/:contestId/:problemCode\"\n                 component={PublicNote} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Amplify from 'aws-amplify';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport amplify_config from './amplify_config';\n\nAmplify.configure(amplify_config);\n\ndocument.body.addEventListener('mousedown', (event) => {\n  document.body.classList.add('Global-mouse-click');\n});\n\ndocument.body.addEventListener('keydown', (event) => {\n  if(event.keyCode === 9) {\n    document.body.classList.remove('Global-mouse-click');\n  }\n});\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}