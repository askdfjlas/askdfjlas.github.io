{"version":3,"sources":["Utils.js","Header/HeaderUtils.js","Api/UserAuthApi.js","Header/HeaderState.js","Header/RegisterForm.js","Header/LoginForm.js","Header/UserMenu.js","Header/HeaderAuth.js","Header/Header.js","TextEditor/Caret.js","TextEditor/ContentType.js","TextEditor/Toolbar.js","TextEditor/VirtualTextEditor.js","TextEditor/Block.js","TextEditor/registerEventHandlers.js","TextEditor/TextEditor.js","Home/CpNotes.js","Home/Home.js","UserProfile/UserInfo.js","SearchSelect/SearchSelect.js","Api/ApiConstants.js","Api/Api.js","Api/ProblemsApi.js","UserProfile/AddProblemForm.js","Api/NotesApi.js","UserProfile/UserProblems.js","Api/UserApi.js","UserProfile/UserInfoState.js","UserProfile/UserProfile.js","EditNote/EditNoteState.js","EditNote/SolvedState.js","EditNote/EditNoteForm.js","EditNote/ProblemInfo.js","EditNote/EditNote.js","App.js","serviceWorker.js","index.js"],"names":["Utils","component","stateObject","Promise","resolve","reject","setState","object","property","hasOwnProperty","message","setError","setStatePromise","error","setSuccess","success","window","MathJax","typesetPromise","HeaderUtils","password","confirmPassword","componentSetError","length","UserAuthApi","Auth","currentAuthenticatedUser","username","email","signUp","attributes","info","codeDeliveryDetails","Destination","code","confirmSignUp","resendSignUp","CodeDeliveryDetails","forgotPassword","forgotPasswordSubmit","signIn","signOut","profile","getProfile","currentSession","getSignInUserSession","accessToken","getAccessToken","getJwtToken","HeaderState","Object","freeze","LOGIN","RECOVERY_USERNAME","RECOVERY_PASSWORD","RECOVERY_SUCCESS","REGISTER","REGISTER_VERIFY","REGISTER_SUCCESS","RegisterForm","props","screen","unverifiedAccountUsername","state","destination","unverifiedAccountDestination","close","bind","register","verifyEmail","resendVerificationEmail","this","exitCallback","startsWith","substring","event","preventDefault","form","target","value","checkPasswords","componentSetSuccess","currentForm","createAccountForm","className","onSubmit","htmlFor","autoComplete","type","name","id","verifyEmailForm","key","onClick","emailVerifiedBox","Component","LoginForm","login","enablePasswordRecovery","resetPassword","emailVerificationCallback","componentsSetError","loginForm","recoveryUsernameForm","recoveryPasswordForm","recoveryPasswordSuccess","UserMenu","logout","logoutCallback","closeCallback","to","HeaderAuth","showRegisterForm","showLoginForm","showUserMenu","refreshUsername","toggleRegisterForm","toggleLoginForm","toggleUserMenu","hideUserMenu","afterLogin","unverifiedAccount","getUsername","focusedElement","relatedTarget","classList","contains","loggedIn","loginButtons","loggedInButton","tabIndex","onBlur","topRightButtons","Header","path","useLocation","pathname","small","outerClassName","Caret","a","b","c","d","selection","getSelection","anchorElement","anchorNode","parentElement","focusElement","focusNode","anchorIndex","Number","getAttribute","focusIndex","anchorOffset","focusOffset","rangeSelect","index","position","leftIndex","leftPosition","rightIndex","rightPosition","blockElement","document","getElementById","textNode","childNodes","createTextNode","appendChild","range","createRange","setStart","collapse","removeAllRanges","addRange","leftBlockElement","rightBlockElement","leftTextNode","rightTextNode","setEnd","ContentType","BOLD","ITALIC","UNDERLINE","Toolbar","mask","updatingMask","updateMask","bit","callback","boldSelected","italicSelected","underlineSelected","countCharacters","str","counter","character","VirtualTextEditor","characters","globalCaretPosition","updateBlocks","globalIndex","charactersScanned","i","blocks","blockLength","blockEndIndex","j","blockStarts","characterCounter","getGlobalIndex","m","insertedString","rightBuffer","splice","char","push","getIndexAndPosition","globalLeftIndex","deleteLength","on","globalRightIndex","newLeftIndex","newLeftPosition","currentMask","buffer","bufferLength","forEach","String","fromCharCode","getClassName","style","Block","block","editorId","suppressContentEditableWarning","registerEventHandlers","that","textEditor","addEventListener","composing","delete","insert","isComposing","inputType","caretInfo","dataTransfer","getData","data","pasteText","clipboardData","compositionIndex","compositionPosition","nextBlockElement","setAttribute","compositionInsert","selectionChanged","TextEditor","uniqueKey","virtualTextEditor","caret","contentChanged","content","getContent","editorMask","toolbarUpdate","updateText","newString","updateCaretInfo","rangeMaskUpdate","newMask","focus","newCaretInfo","getInfo","leftCharacterMask","getCharacterMask","junkNodes","node","nodeType","Node","TEXT_NODE","nodeName","removeChild","childElement","children","innerHTML","nodeValue","setRangePosition","setPosition","onChange","contentElements","contentEditable","spellCheck","CpNotes","renderMathJax","Home","UserInfo","SearchSelect","loading","searchTerm","previousValidSearchTerm","showOptions","options","filteredOptions","handleChange","handleBlur","handleFocus","handleOptionSelect","option","optionStringArray","keys","join","toLowerCase","getOptionString","includes","prevProps","staticKey","search","filterOptions","sortKey","optionString","optionElements","displayString","displayKey","onFocus","disabled","ApiConstants","API_ENDPOINT","Api","err","Error","response","status","json","responseJson","createApiError","resource","queryString","stringify","fetch","headers","Authorization","manageResponseError","method","body","JSON","sendRequestBody","ProblemsApi","problems","prettySk","sk","replaceAll","platform","getJson","contestId","_prettifyProblems","problemId","AddProblemForm","contestSortKey","problemSortKey","skipContestSearch","handlePlatformChange","toggleSkipContestSearch","updateProblemSortKey","updateContestSortKey","addProblem","searchContestFunction","searchContestKey","getContests","searchProblemFunction","searchProblemKey","getProblems","skipButtonText","defaultValue","NotesApi","postJson","title","solved","published","putJson","UserProblems","showAddProblemForm","toggleAddProblemForm","formComponent","addNote","problemUrl","replace","history","UserApi","UserProfileState","LOADING","DONE","NOT_FOUND","UserProfile","UserInfoState","match","params","getUserInfo","loadUserInfo","loadedContent","userNotFoundContent","EditNoteState","SolvedState","SOLVED","UPSOLVED","UPSOLVED_HELP","UNSOLVED","EditNoteForm","problemInfo","problemName","saveNote","publishNote","handleTitleChange","handleSolvedChange","handleContentChange","editNote","saveOrPublishNote","newContent","defaultTitle","placeholder","ProblemInfo","problemCode","contestName","href","link","EditNote","getProblemInfo","loadProblemInfo","loadInfo","App","exact","Boolean","location","hostname","Amplify","configure","amplify_config","add","keyCode","remove","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0fbac4cc.chunk.js","sourcesContent":["class Utils {\n  static async setStatePromise(component, stateObject) {\n    return new Promise((resolve, reject) => {\n      component.setState(stateObject, () => {\n        resolve();\n      });\n    });\n  }\n\n  static isEmpty(object) {\n    for(const property in object) {\n      if(object.hasOwnProperty(property))\n        return false;\n    }\n    return true;\n  }\n\n  static async componentSetError(component, message) {\n    if(component.setError) {\n      await component.setError(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: `Error: ${message}`\n      });\n    }\n  }\n\n  static async componentSetSuccess(component, message) {\n    if(component.setSuccess) {\n      await component.setSuccess(message);\n    }\n    else {\n      await Utils.setStatePromise(component, {\n        error: '',\n        success: message\n      });\n    }\n  }\n\n  static async renderMathJax() {\n    if(window.MathJax) {\n      await window.MathJax.typesetPromise();\n    }\n  }\n}\n\nexport default Utils;\n","import Utils from '../Utils';\n\nconst MIN_PASSWORD_LENGTH = 6;\n\nclass HeaderUtils {\n  static async checkPasswords(component, password, confirmPassword) {\n    if(password !== confirmPassword) {\n      await Utils.componentSetError(component, \"Your passwords don't match!\");\n      return false;\n    }\n\n    if(password.length < MIN_PASSWORD_LENGTH) {\n      await Utils.componentSetError(component, 'Your password is too short!');\n      return false;\n    }\n\n    return true;\n  }\n}\n\nexport default HeaderUtils;\n","import { Auth } from 'aws-amplify';\n\nclass UserAuthApi {\n  static async getProfile() {\n    try {\n      return await Auth.currentAuthenticatedUser();\n    }\n    catch(err) {\n      // currentAuthenticatedUser() throws this error if the user is not logged in\n      return null;\n    }\n  }\n\n  static async register(username, email, password) {\n    const info = await Auth.signUp({\n      username,\n      password,\n      attributes: {\n        email: email\n      }\n    });\n\n    // I like how Amplify makes this one inconsistently lowercase... lol\n    return info.codeDeliveryDetails.Destination;\n  }\n\n  static async verifyEmail(username, code) {\n    await Auth.confirmSignUp(username, code);\n  }\n\n  static async resendVerificationEmail(username) {\n    const info = await Auth.resendSignUp(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async forgotPassword(username) {\n    const info = await Auth.forgotPassword(username);\n    return info.CodeDeliveryDetails.Destination;\n  }\n\n  static async resetPassword(username, code, password) {\n    await Auth.forgotPasswordSubmit(username, code, password);\n  }\n\n  static async login(username, password) {\n    await Auth.signIn(username, password);\n  }\n\n  static async logout() {\n    await Auth.signOut();\n    UserAuthApi.profile = null;\n  }\n\n  static async getUsername() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    return profile.username;\n  }\n\n  static async getAccessToken() {\n    const profile = await UserAuthApi.getProfile();\n    if(!profile)\n      return null;\n\n    const currentSession = profile.getSignInUserSession();\n    const accessToken = currentSession.getAccessToken();\n    return accessToken.getJwtToken();\n  }\n}\n\nexport default UserAuthApi;\n","const HeaderState = Object.freeze({\n  LOGIN: 0,\n  RECOVERY_USERNAME: 1,\n  RECOVERY_PASSWORD: 2,\n  RECOVERY_SUCCESS: 3,\n  REGISTER: 4,\n  REGISTER_VERIFY: 5,\n  REGISTER_SUCCESS: 6\n});\n\nexport default HeaderState;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\nimport '../css/RegisterForm.css';\n\nconst USERNAME_MIN_LENGTH = 3;\nconst USERNAME_MAX_LENGTH = 20;\nconst ERROR_TRIGGER_PREFIX = 'PreSignUp failed with error';\n\nclass RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    const screen = props.unverifiedAccountUsername ?\n                   HeaderState.REGISTER_VERIFY : HeaderState.REGISTER;\n    this.state = {\n      error: '',\n      success: '',\n      username: props.unverifiedAccountUsername,\n      destination: props.unverifiedAccountDestination,\n      screen: screen\n    };\n\n    this.close = this.close.bind(this);\n    this.register = this.register.bind(this);\n    this.verifyEmail = this.verifyEmail.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback();\n  }\n\n  async setError(message) {\n    if(message.startsWith(ERROR_TRIGGER_PREFIX)) {\n      message = message.substring(\n        ERROR_TRIGGER_PREFIX.length, message.length - 1\n      );\n    }\n\n    await Utils.setStatePromise(this, {\n      error: `Error: ${message}`,\n      success: ''\n    });\n  }\n\n  async register(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const email = form.email.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!username || !email || !password || !confirmPassword) {\n      await this.setError('Please fill out all of the fields.')\n      return;\n    }\n\n    if(username.length < USERNAME_MIN_LENGTH || username.length > USERNAME_MAX_LENGTH) {\n      await this.setError(\n        `Your username must be between ${USERNAME_MIN_LENGTH} ` +\n        `and ${USERNAME_MAX_LENGTH} characters!`\n      );\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      const destination = await UserAuthApi.register(username, email, password);\n      Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.REGISTER_VERIFY\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async verifyEmail(event) {\n    event.preventDefault();\n\n    const code = event.target.code.value;\n    try {\n      await UserAuthApi.verifyEmail(this.state.username, code);\n      Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.REGISTER_SUCCESS\n      });\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.resendVerificationEmail(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await this.setError(err.message);\n    }\n  }\n\n  render() {\n    const createAccountForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Create an account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.register}>\n          <label htmlFor=\"register-username\">Username</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 id=\"register-username\" />\n\n          <label htmlFor=\"register-email\">Email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"email\"\n                 id=\"register-email\" />\n\n          <label htmlFor=\"register-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 id=\"register-password\" />\n\n          <label htmlFor=\"register-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 id=\"register-confirm-password\" />\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Register\" />\n        </form>\n      </div>\n    );\n\n    const verifyEmailForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Verify your email!</h2>\n        <p>\n          You should've received an email at {this.state.destination} with a\n          verification code. If it isn't convenient for you to verify your\n          account now, you may do so later by logging in.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.verifyEmail}>\n          <label htmlFor=\"verification-code\">Verification code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"verification-code\" id=\"verification-code\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                 value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const emailVerifiedBox = (\n      <div className=\"Register-form Module-popup\">\n        <h2>Verification success!</h2>\n        <p className=\"Module-popup-last\">\n          Your email was successfully verified! Click the 'X' button in the\n          top-right corner to return to the site, and you'll be able to login.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.REGISTER:\n        currentForm = createAccountForm;\n        break;\n      case HeaderState.REGISTER_VERIFY:\n        currentForm = verifyEmailForm;\n        break;\n      case HeaderState.REGISTER_SUCCESS:\n        currentForm = emailVerifiedBox;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport HeaderUtils from './HeaderUtils';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport HeaderState from './HeaderState';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      username: null,\n      destination: null,\n      screen: props.screen || HeaderState.LOGIN\n    }\n\n    this.close = this.close.bind(this);\n    this.login = this.login.bind(this);\n    this.enablePasswordRecovery = this.enablePasswordRecovery.bind(this);\n    this.forgotPassword = this.forgotPassword.bind(this);\n    this.resetPassword = this.resetPassword.bind(this);\n    this.resendVerificationEmail = this.resendVerificationEmail.bind(this);\n  }\n\n  close() {\n    this.props.exitCallback(false);\n  }\n\n  async login(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const username = form.username.value;\n    const password = form.password.value;\n\n    if(!username || !password) {\n      await Utils.componentSetError(this, \"Please fill out all of the fields.\");\n      return;\n    }\n\n    try {\n      try {\n        await UserAuthApi.login(username, password);\n        this.props.exitCallback(true);\n      }\n      catch(err) {\n        if(err.code === 'UserNotConfirmedException') {\n          const destination = await UserAuthApi.resendVerificationEmail(username);\n          await this.props.emailVerificationCallback(username, destination);\n        }\n        else {\n          throw err;\n        }\n      }\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async enablePasswordRecovery(event) {\n    await Utils.setStatePromise(this, {\n      error: '',\n      screen: HeaderState.RECOVERY_USERNAME\n    });\n  }\n\n  async forgotPassword(event) {\n    event.preventDefault();\n\n    const username = event.target.username.value;\n    if(!username) {\n      Utils.componentsSetError(this, 'Please input your username.');\n      return;\n    }\n\n    try {\n      const destination = await UserAuthApi.forgotPassword(username);\n      Utils.setStatePromise(this, {\n        error: '',\n        username: username,\n        destination: destination,\n        screen: HeaderState.RECOVERY_PASSWORD\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async resetPassword(event) {\n    event.preventDefault();\n\n    const form = event.target;\n    const code = form.code.value;\n    const password = form.password.value;\n    const confirmPassword = form.confirmPassword.value;\n\n    if(!code || !password || !confirmPassword) {\n      Utils.componentSetError(this, 'Please fill out all of the fields.');\n      return;\n    }\n\n    const passwordsOk = await HeaderUtils.checkPasswords(this, password, confirmPassword);\n    if(!passwordsOk)\n      return;\n\n    try {\n      await UserAuthApi.resetPassword(this.state.username, code, password);\n      await Utils.setStatePromise(this, {\n        error: '',\n        success: '',\n        screen: HeaderState.RECOVERY_SUCCESS\n      });\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  async resendVerificationEmail(event) {\n    try {\n      await UserAuthApi.forgotPassword(this.state.username);\n      await Utils.componentSetSuccess(this, 'Another email has been sent!');\n    }\n    catch(err) {\n      await Utils.componentSetError(this, err.message);\n    }\n  }\n\n  render() {\n    const loginForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Login to your account!</h2>\n        <form className=\"Askd-form\" onSubmit={this.login}>\n          <label htmlFor=\"login-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"login-username\" id=\"login-username\" />\n\n          <label htmlFor=\"login-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"login-password\" id=\"login-password\" />\n\n          <button type=\"button\" onClick={this.enablePasswordRecovery}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Forgot your password?\n          </button>\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Login\" />\n        </form>\n      </div>\n    );\n\n    const recoveryUsernameForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          Please provide your username or email, so that you can reset your\n          password via an emailed confirmation code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.forgotPassword}>\n          <label htmlFor=\"reset-username\">Username or email</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"username\"\n                 key=\"reset-username\" id=\"reset-username\" />\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordForm = (\n      <div className=\"Register-form Module-popup\">\n        { this.state.error && <h2>{this.state.error}</h2> }\n        { this.state.success && <h2>{this.state.success}</h2> }\n        <h2>Reset your password</h2>\n        <p>\n          You should've received an email at { this.state.destination } with a\n          verification code.\n        </p>\n        <form className=\"Askd-form\" onSubmit={this.resetPassword}>\n          <label htmlFor=\"reset-code\">Code</label>\n          <input autoComplete=\"off\" type=\"text\" name=\"code\"\n                 key=\"reset-code\" id=\"reset-code\" />\n\n          <label htmlFor=\"reset-password\">Password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"password\"\n                 key=\"reset-password\" id=\"reset-password\" />\n\n          <label htmlFor=\"reset-confirm-password\">Confirm password</label>\n          <input autoComplete=\"off\" type=\"password\" name=\"confirmPassword\"\n                 key=\"reset-confirm-password\" id=\"reset-confirm-password\" />\n\n          <button type=\"button\" onClick={this.resendVerificationEmail}\n                  className=\"Askd-form-link Askd-form-link-bottom\">\n            Didn't get the email? Click here to resend\n          </button>\n\n          <input className=\"Askd-button\" type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n\n    const recoveryPasswordSuccess= (\n      <div className=\"Register-form Module-popup\">\n        <h2>Password reset success!</h2>\n        <p>\n          Your password has been reset successfully. You'll now be able to\n          login again.\n        </p>\n      </div>\n    );\n\n    var currentForm;\n    switch(this.state.screen) {\n      case HeaderState.LOGIN:\n        currentForm = loginForm;\n        break;\n      case HeaderState.RECOVERY_USERNAME:\n        currentForm = recoveryUsernameForm;\n        break;\n      case HeaderState.RECOVERY_PASSWORD:\n        currentForm = recoveryPasswordForm;\n        break;\n      case HeaderState.RECOVERY_SUCCESS:\n        currentForm = recoveryPasswordSuccess;\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">X</button>\n        { currentForm }\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport '../css/UserMenu.css'\n\nclass UserMenu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.logout = this.logout.bind(this);\n  }\n\n  async logout() {\n    await UserAuthApi.logout();\n    await this.props.logoutCallback();\n  }\n\n  render() {\n    return (\n      <div className=\"User-menu\">\n        <ol>\n          <li>\n            <Link className=\"Header-menu-button\" onClick={this.props.closeCallback}\n                  to={`/users/${this.props.username}`}>\n                  Your profile\n            </Link>\n          </li>\n          <div className=\"User-menu-divider\"></div>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\">\n              Settings\n            </button>\n          </li>\n          <li className=\"User-menu-not-link\">\n            <button className=\"Header-menu-button\" onClick={this.logout}>\n              Logout\n            </button>\n          </li>\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default UserMenu;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport RegisterForm from './RegisterForm';\nimport LoginForm from './LoginForm';\nimport UserMenu from './UserMenu';\nimport UserAuthApi from '../Api/UserAuthApi';\n\nclass HeaderAuth extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: null,\n      showRegisterForm: false,\n      showLoginForm: false,\n      showUserMenu: false,\n      unverifiedAccountUsername: null,\n      unverifiedAccountDestination: null\n    };\n\n    this.refreshUsername = this.refreshUsername.bind(this);\n    this.toggleRegisterForm = this.toggleRegisterForm.bind(this);\n    this.toggleLoginForm = this.toggleLoginForm.bind(this);\n    this.toggleUserMenu = this.toggleUserMenu.bind(this);\n    this.hideUserMenu = this.hideUserMenu.bind(this);\n    this.afterLogin = this.afterLogin.bind(this);\n    this.unverifiedAccount = this.unverifiedAccount.bind(this);\n  }\n\n  async refreshUsername() {\n    const username = await UserAuthApi.getUsername();\n\n    await Utils.setStatePromise(this, {\n      username: username,\n      showUserMenu: false,\n      unverifiedAccountUsername: null\n    });\n  }\n\n  async componentDidMount() {\n    await this.refreshUsername();\n  }\n\n  async toggleRegisterForm(event) {\n    if(this.state.showRegisterForm) {\n      await Utils.setStatePromise(this, {\n        unverifiedAccountUsername: null,\n        unverifiedAccountDestination: null\n      });\n    }\n\n    await Utils.setStatePromise(this, {\n      showRegisterForm: !this.state.showRegisterForm\n    });\n  }\n\n  async toggleLoginForm(event) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: !this.state.showLoginForm\n    });\n  }\n\n  async toggleUserMenu(event) {\n    await Utils.setStatePromise(this, {\n      showUserMenu: !this.state.showUserMenu\n    });\n  }\n\n  async hideUserMenu(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.classList.contains('Header-menu-button'))\n      return;\n\n    await Utils.setStatePromise(this, {\n      showUserMenu: false\n    });\n  }\n\n  async afterLogin(loggedIn) {\n    await this.toggleLoginForm();\n\n    if(loggedIn)\n      await this.refreshUsername();\n  }\n\n  async unverifiedAccount(username, destination) {\n    await Utils.setStatePromise(this, {\n      showLoginForm: false,\n      showRegisterForm: true,\n      unverifiedAccountUsername: username,\n      unverifiedAccountDestination: destination\n    });\n  }\n\n  render() {\n    const loginButtons = (\n      <div className=\"Header-top-right\">\n        <button className=\"Header-menu-button\" onClick={this.toggleLoginForm}>\n          Login\n        </button>\n        <span className=\"Header-divider\"></span>\n        <button className=\"Header-menu-button\" onClick={this.toggleRegisterForm}>\n          Create an account\n        </button>\n      </div>\n    );\n\n    const loggedInButton = (\n      <div className=\"Header-logged-in\" tabIndex=\"-1\"\n           onBlur={this.hideUserMenu}>\n        <div className=\"Header-top-right\">\n          <button className=\"Header-menu-button\" onClick={this.toggleUserMenu}>\n            { this.state.username }\n          </button>\n        </div>\n        <div className=\"Header-user-menu\">\n          {\n            this.state.showUserMenu &&\n            <UserMenu username={this.state.username}\n                      closeCallback={this.toggleUserMenu}\n                      logoutCallback={this.refreshUsername} />\n          }\n        </div>\n      </div>\n    );\n\n    const topRightButtons = this.state.username ? loggedInButton : loginButtons;\n\n    return (\n      <>\n        {\n          this.state.showRegisterForm &&\n          <RegisterForm exitCallback={this.toggleRegisterForm}\n                        unverifiedAccountUsername=\n                        {this.state.unverifiedAccountUsername}\n                        unverifiedAccountDestination=\n                        {this.state.unverifiedAccountDestination} />\n        }\n        {\n          this.state.showLoginForm &&\n          <LoginForm exitCallback={this.afterLogin}\n                     emailVerificationCallback={this.unverifiedAccount} />\n        }\n        { topRightButtons }\n      </>\n    );\n  }\n}\n\nexport default HeaderAuth;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport HeaderAuth from './HeaderAuth';\nimport '../css/Header.css';\n\nfunction Header() {\n  const path = useLocation().pathname;\n  const small = (path === '/' || path === '/home');\n  const outerClassName = small ? 'Header' : 'Header-small';\n\n  return (\n    <div className={outerClassName}>\n      { small && <h1>cp-notes beta</h1> }\n      <ul>\n        <li>\n          <Link to=\"/home\">Home</Link>\n        </li>\n      </ul>\n      <HeaderAuth />\n      <span className=\"Header-bottom\"></span>\n    </div>\n  );\n}\n\nexport default Header;\n","function lessThan(a, b, c, d) {\n  if(a === c)\n    return b < d;\n  return a < c;\n}\n\nclass Caret {\n  constructor(id) {\n    this.id = id;\n  }\n\n  getInfo() {\n    const selection = window.getSelection();\n    const anchorElement = selection.anchorNode.parentElement;\n    const focusElement = selection.focusNode.parentElement;\n\n    let anchorIndex = Number(anchorElement.getAttribute('index'));\n    let focusIndex = Number(focusElement.getAttribute('index'));\n    let anchorOffset = selection.anchorOffset;\n    let focusOffset = selection.focusOffset;\n\n    if(anchorIndex === focusIndex && anchorOffset === focusOffset) {\n      return {\n        rangeSelect: false,\n        index: anchorIndex,\n        position: anchorOffset\n      };\n    }\n\n    if(!lessThan(anchorIndex, anchorOffset, focusIndex, focusOffset)) {\n      [ anchorIndex, focusIndex ] = [ focusIndex, anchorIndex ];\n      [ anchorOffset, focusOffset ] = [ focusOffset, anchorOffset ];\n    }\n\n    return {\n      rangeSelect: true,\n      leftIndex: anchorIndex,\n      leftPosition: anchorOffset,\n      rightIndex: focusIndex,\n      rightPosition: focusOffset\n    };\n  }\n\n  setPosition(index, position) {\n    const blockElement = document.getElementById(this.id + index);\n    let textNode = blockElement.childNodes[0];\n\n    if(!textNode) {\n      textNode = document.createTextNode('');\n      blockElement.appendChild(textNode);\n    }\n\n    let range = document.createRange();\n    range.setStart(textNode, position);\n    range.collapse(true);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  setRangePosition(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const leftBlockElement = document.getElementById(this.id + leftIndex);\n    const rightBlockElement = document.getElementById(this.id + rightIndex);\n    const leftTextNode = leftBlockElement.childNodes[0];\n    const rightTextNode = rightBlockElement.childNodes[0];\n\n    let range = document.createRange();\n    range.setStart(leftTextNode, leftPosition);\n    range.setEnd(rightTextNode, rightPosition);\n\n    let selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport default Caret;\n","const ContentType = Object.freeze({\n  BOLD: (1 << 1),\n  ITALIC: (1 << 2),\n  UNDERLINE: (1 << 3)\n});\n\nexport default ContentType;\n","import React, { Component } from 'react';\nimport ContentType from './ContentType';\nimport Utils from '../Utils';\n\nclass Toolbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mask: 0\n    };\n\n    this.updatingMask = false;\n    this.updateMask = this.updateMask.bind(this);\n  }\n\n  async updateMask(bit) {\n    this.updatingMask = true;\n\n    await Utils.setStatePromise(this, {\n      mask : this.state.mask ^ bit\n    });\n\n    this.props.callback(bit, (this.state.mask & bit) > 0);\n  }\n\n  async componentDidUpdate() {\n    if(this.updatingMask) {\n      this.updatingMask = false;\n      return;\n    }\n\n    if(this.props.mask !== this.state.mask) {\n      await Utils.setStatePromise(this, {\n        mask: this.props.mask\n      });\n    }\n  }\n\n  render() {\n    const boldSelected = (this.state.mask & ContentType.BOLD) > 0;\n    const italicSelected = (this.state.mask & ContentType.ITALIC) > 0;\n    const underlineSelected = (this.state.mask & ContentType.UNDERLINE) > 0;\n\n    return (\n      <div className=\"Askd-text-editor-toolbar\">\n        <ul>\n          <li className={`Askd-tb-selected-${boldSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-BOLD\"\n                    onClick={() => this.updateMask(ContentType.BOLD)} />\n          </li>\n          <li className={`Askd-tb-selected-${italicSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-ITALIC\"\n                    onClick={() => this.updateMask(ContentType.ITALIC)} />\n          </li>\n          <li className={`Askd-tb-selected-${underlineSelected}`}>\n            <button type=\"button\" className=\"Askd-tb-icon Askd-tb-UNDERLINE\"\n                    onClick={() => this.updateMask(ContentType.UNDERLINE)} />\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","// This is different from str.length; for example emojis use up 2\nfunction countCharacters(str) {\n  let counter = 0;\n  for(const character of str) {\n    Number(character);  // Silence unused variable warning\n    counter++;\n  }\n  return counter;\n}\n\nclass VirtualTextEditor {\n  constructor() {\n    this.characters = [];\n    this.globalCaretPosition = 0;\n    this.updateBlocks();\n  }\n\n  getIndexAndPosition(globalIndex) {\n    let charactersScanned = 0;\n    for(let i = 0; i < this.blocks.length; i++) {\n      const block = this.blocks[i];\n      const blockLength = countCharacters(block.c);\n      const blockEndIndex = charactersScanned + blockLength;\n\n      if(globalIndex <= blockEndIndex) {\n        let position = 0;\n        for(let j = charactersScanned; j <= blockEndIndex; j++) {\n          if(globalIndex === j) {\n            return [ i, position ];\n          }\n          position += this.characters[j].c.length;\n        }\n      }\n      charactersScanned += blockLength;\n    }\n\n    return [ null, null ];\n  }\n\n  getGlobalIndex(index, position) {\n    let globalIndex = this.blockStarts[index];\n    let characterCounter = 0;\n    while(characterCounter < position) {\n      characterCounter += this.characters[globalIndex].c.length;\n      globalIndex++;\n    }\n\n    if(characterCounter === position)\n      return globalIndex;\n\n    return globalIndex - 1;\n  }\n\n  getCharacterMask(index, position, rangeSelect) {\n    const globalIndex = this.getGlobalIndex(index, position);\n\n    if(globalIndex === 0) {\n      return this.characters[0].m;\n    }\n    else if(rangeSelect) {\n      return this.characters[globalIndex].m;\n    }\n    return this.characters[globalIndex - 1].m;\n  }\n\n  insert(index, position, insertedString, mask) {\n    const globalIndex = this.getGlobalIndex(index, position);\n    const rightBuffer = this.characters.splice(globalIndex);\n\n    for(const char of insertedString) {\n      this.characters.push({\n        m: mask,\n        c: char\n      });\n    }\n\n    const globalCaretPosition = this.characters.length;\n    for(const character of rightBuffer) {\n      this.characters.push(character);\n    }\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  delete(leftIndex, leftPosition, rightIndex, rightPosition) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n    const deleteLength = globalRightIndex - globalLeftIndex;\n\n    if(globalLeftIndex < 0) {\n      return [ 0, 0 ];\n    }\n\n    this.characters.splice(globalLeftIndex, deleteLength);\n    const globalCaretPosition = globalLeftIndex;\n\n    this.updateBlocks();\n    return this.getIndexAndPosition(globalCaretPosition);\n  }\n\n  rangeMaskUpdate(leftIndex, leftPosition, rightIndex, rightPosition, bit, on) {\n    const globalLeftIndex = this.getGlobalIndex(leftIndex, leftPosition);\n    const globalRightIndex = this.getGlobalIndex(rightIndex, rightPosition);\n\n    for(let i = globalLeftIndex; i < globalRightIndex; i++) {\n      if((on && !(this.characters[i].m & bit)) ||\n         (!on && (this.characters[i].m & bit))) {\n        this.characters[i].m = this.characters[i].m ^ bit;\n      }\n    }\n\n    this.updateBlocks();\n\n    const [ newLeftIndex, newLeftPosition ] = this.getIndexAndPosition(globalLeftIndex);\n    const [ newRightIndex, newRightPosition ] = this.getIndexAndPosition(globalRightIndex);\n    return [ newLeftIndex, newLeftPosition, newRightIndex, newRightPosition ];\n  }\n\n  updateBlocks() {\n    if(this.characters.length === 0) {\n      this.blocks = [\n        { m: 0, c: '' }\n      ];\n      this.blockStarts = [ 0 ];\n\n      return;\n    }\n\n    this.blocks = [];\n    this.blockStarts = [];\n\n    let currentMask = this.characters[0].m;\n    let buffer = '';\n    let bufferLength = 0;\n    this.characters.forEach((character, i) => {\n      if(character.m !== currentMask) {\n        this.blocks.push({\n          m: currentMask,\n          c: buffer\n        });\n        this.blockStarts.push(i - bufferLength);\n\n        currentMask = character.m;\n        buffer = character.c;\n        bufferLength = 1;\n      }\n      else {\n        buffer += character.c;\n        bufferLength++;\n      }\n    });\n\n    this.blocks.push({\n      m: currentMask,\n      c: buffer\n    });\n    this.blockStarts.push(this.characters.length - bufferLength);\n\n    /* Strange hack - extra newline character sets correct caret positioning;\n       this extra character also somehow can't be selected */\n    this.blocks[this.blocks.length - 1].c += String.fromCharCode(10);\n  }\n\n  getContent() {\n    return this.blocks;\n  }\n}\n\nexport default VirtualTextEditor;\n","import React, { Component } from 'react';\nimport ContentType from './ContentType';\n\nfunction getClassName(mask) {\n  let className = '';\n  for(const style in ContentType) {\n    if(mask & ContentType[style]) {\n      className += `Askd-te-${style} `;\n    }\n  }\n  return className;\n}\n\nclass Block extends Component {\n  render() {\n    const block = this.props.block;\n    const editorId = this.props.id;\n    const index = this.props.index;\n\n    return (\n      <div className={getClassName(block.m)} id={editorId + index}\n           suppressContentEditableWarning=\"true\" index={index}>\n        { block.c }\n      </div>\n    );\n  }\n}\n\nexport default Block;\n","const registerEventHandlers = (that) => {\n  that.textEditor.addEventListener('keydown', async (event) => {\n    /* TBD, bro who even uses that button lol */\n    if(event.key === 'Delete') {\n      event.preventDefault();\n    }\n    else if(event.key === 'Backspace' && !that.composing) {\n      await that.delete();\n      event.preventDefault();\n    }\n    else if(event.key === 'Enter' && !that.composing) {\n      await that.insert(String.fromCharCode(10));\n      event.preventDefault();\n    }\n  });\n\n  that.textEditor.addEventListener('beforeinput', async (event) => {\n    if(event.isComposing || that.composing) {\n      return;\n    }\n\n    event.preventDefault();\n\n    /* Mobile autocorrect and word selection from a menu */\n    if(event.inputType === 'insertReplacementText') {\n      that.caretInfo.rangeSelect = true;\n      const insertedString = event.dataTransfer.getData('text');\n      await that.insert(insertedString);\n    }\n    /* Generic event with a valid 'data'; things like undo/redo operations and\n       drag and drop are TBD */\n    else if(event.data) {\n      await that.insert(event.data);\n    }\n  });\n\n  that.textEditor.addEventListener('paste', async (event) => {\n    event.preventDefault();\n\n    const pasteText = event.clipboardData.getData('Text');\n    await that.insert(pasteText);\n  });\n\n  that.textEditor.addEventListener('compositionstart', async (event) => {\n    if(that.caretInfo.rangeSelect) {\n      await that.delete();\n    }\n\n    that.composing = true;\n    that.compositionIndex = that.caretInfo.index;\n    that.compositionPosition = that.caretInfo.position;\n\n    /* Prevent browser from overwriting the next block */\n    let nextBlockElement = document.getElementById(that.id +\n      (that.compositionIndex + 1));\n    if(nextBlockElement) {\n      nextBlockElement.setAttribute('contenteditable', 'false');\n    }\n  });\n\n  that.textEditor.addEventListener('compositionend', async (event) => {\n    if(!that.composing) {\n      return;\n    }\n\n    /* Composition has ended; set the next block to be editable again */\n    let nextBlockElement = document.getElementById(that.id +\n      (that.compositionIndex + 1));\n    if(nextBlockElement) {\n      nextBlockElement.setAttribute('contenteditable', 'true');\n    }\n\n    that.composing = false;\n    await that.compositionInsert(event.data);\n  });\n\n  document.addEventListener('selectionchange', async (event) => {\n    if(that.composing) {\n      return;\n    }\n\n    try {\n      const selection = window.getSelection();\n      const anchorElement = selection.anchorNode.parentElement;\n      const parentElement = anchorElement.parentElement;\n\n      if(anchorElement.getAttribute('id') === that.id + '!' ||\n         parentElement.getAttribute('id') === that.id) {\n        await that.selectionChanged();\n      }\n    }\n    catch(err) {\n      /* anchorElement isn't a div inside the text editor */\n    }\n  });\n}\n\nexport default registerEventHandlers;\n","import React, { Component } from 'react';\nimport Caret from './Caret';\nimport Toolbar from './Toolbar';\nimport VirtualTextEditor from './VirtualTextEditor';\nimport Block from './Block';\nimport Utils from '../Utils';\nimport registerEventHandlers from './registerEventHandlers';\nimport '../css/TextEditor.css';\n\nclass TextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.id = this.props.uniqueKey ?\n                `Askd-text-editor${this.props.uniqueKey}` : 'Askd-text-editor';\n    this.virtualTextEditor = new VirtualTextEditor();\n    this.caret = new Caret(this.id);\n\n    this.contentChanged = false;\n    this.caretInfo = {\n      rangeSelect: false,\n      index: 0,\n      position: 0\n    };\n\n    this.composing = false;\n    this.compositionIndex = null;\n    this.compositionPosition = null;\n\n    this.state = {\n      content: this.virtualTextEditor.getContent(),\n      editorMask: 0\n    };\n\n    this.toolbarUpdate = this.toolbarUpdate.bind(this);\n  }\n\n  async delete() {\n    if(!this.caretInfo.rangeSelect) {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.index, this.caretInfo.position - 1,\n        this.caretInfo.index, this.caretInfo.position\n      );\n    }\n    else {\n      [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.delete(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n        this.caretInfo.rightIndex, this.caretInfo.rightPosition\n      );\n    }\n\n    this.caretInfo.rangeSelect = false;\n    await this.updateText();\n  }\n\n  async insert(newString) {\n    this.updateCaretInfo();\n\n    if(this.caretInfo.rangeSelect) {\n      await this.delete();\n    }\n\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.caretInfo.index, this.caretInfo.position, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.updateText();\n  }\n\n  async compositionInsert(newString) {\n    [ this.caretInfo.index, this.caretInfo.position ] = this.virtualTextEditor.insert(\n      this.compositionIndex, this.compositionPosition, newString,\n      this.state.editorMask\n    );\n\n    this.caretInfo.rangeSelect = false;\n    await this.updateText();\n  }\n\n  async rangeMaskUpdate(bit, on) {\n    if(!this.caretInfo.rangeSelect) {\n      return;\n    }\n\n    [ this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition ] =\n    this.virtualTextEditor.rangeMaskUpdate(\n      this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n      this.caretInfo.rightIndex, this.caretInfo.rightPosition, bit, on\n    );\n\n    await this.updateText();\n  }\n\n  async updateText() {\n    this.contentChanged = true;\n    await Utils.setStatePromise(this, {\n      content: this.virtualTextEditor.getContent()\n    });\n  }\n\n  async updateMask(newMask) {\n    await Utils.setStatePromise(this, {\n      editorMask: newMask\n    });\n  }\n\n  async toolbarUpdate(bit, on) {\n    this.textEditor.focus();\n    await this.updateMask(this.state.editorMask ^ bit);\n    await this.rangeMaskUpdate(bit, on);\n  }\n\n  updateCaretInfo() {\n    const newCaretInfo = this.caret.getInfo();\n\n    /* Maintain previous info for the other selection type */\n    if(newCaretInfo.rangeSelect) {\n      this.caretInfo.leftIndex = newCaretInfo.leftIndex;\n      this.caretInfo.leftPosition = newCaretInfo.leftPosition;\n      this.caretInfo.rightIndex = newCaretInfo.rightIndex;\n      this.caretInfo.rightPosition = newCaretInfo.rightPosition;\n      this.caretInfo.rangeSelect = true;\n    }\n    else {\n      this.caretInfo.index = newCaretInfo.index;\n      this.caretInfo.position = newCaretInfo.position;\n      this.caretInfo.rangeSelect = false;\n    }\n  }\n\n  async selectionChanged() {\n    this.updateCaretInfo();\n\n    let leftCharacterMask;\n    if(this.caretInfo.rangeSelect) {\n      leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition, true\n      );\n    }\n    else {\n      leftCharacterMask = this.virtualTextEditor.getCharacterMask(\n        this.caretInfo.index, this.caretInfo.position, false\n      );\n    }\n\n    await this.updateMask(leftCharacterMask);\n  }\n\n  componentDidMount() {\n    this.textEditor = document.getElementById(this.id);\n    registerEventHandlers(this);\n  }\n\n  componentDidUpdate() {\n    if(!this.contentChanged) {\n      return;\n    }\n\n    /* The rendered text must be manually sanitized since there's no way to\n       preventDefault a compositionend event in some browsers... */\n    let junkNodes = [];\n    for(const node of this.textEditor.childNodes) {\n      if(node.nodeType === Node.TEXT_NODE || node.nodeName === 'BR' ||\n         node.nodeName === 'SPAN') {\n        junkNodes.push(node);\n      }\n    }\n\n    for(const node of junkNodes) {\n      this.textEditor.removeChild(node);\n    }\n\n    for(let i = 0; i < this.state.content.length; i++) {\n      let childElement = this.textEditor.children[i];\n      if(childElement.innerHTML !== this.state.content[i].c) {\n        childElement.childNodes[0].nodeValue = this.state.content[i].c;\n      }\n    }\n\n    if(this.caretInfo.rangeSelect) {\n      this.caret.setRangePosition(\n        this.caretInfo.leftIndex, this.caretInfo.leftPosition,\n        this.caretInfo.rightIndex, this.caretInfo.rightPosition\n      );\n    }\n    else {\n      this.caret.setPosition(this.caretInfo.index, this.caretInfo.position);\n    }\n\n    this.contentChanged = false;\n    this.updateCaretInfo();\n\n    /* Callback with new content */\n    if(this.props.onChange) {\n      this.props.onChange(this.state.content);\n    }\n  }\n\n  render() {\n    let contentElements = [];\n    this.state.content.forEach((block, i) => {\n      contentElements.push(\n        <Block block={block} id={this.id} index={i} key={i} />\n      );\n    });\n\n    return (\n      <div className=\"Askd-text-editor\" id={this.id + '!'}>\n        <Toolbar mask={this.state.editorMask} callback={this.toolbarUpdate} />\n        <div className=\"Askd-text-editor-text\" id={this.id} tabIndex=\"0\"\n             contentEditable=\"true\" suppressContentEditableWarning=\"true\"\n             spellCheck=\"false\">\n             { contentElements }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TextEditor;\n","import React, { Component } from 'react';\nimport TextEditor from '../TextEditor/TextEditor';\nimport Utils from '../Utils';\nimport '../css/CpNotes.css';\n\nclass CpNotes extends Component {\n  async componentDidMount() {\n    await Utils.renderMathJax();\n  }\n\n  render() {\n    return (\n      <div className=\"Module-wrapper\">\n        <div className=\"Module-description Module-description-centered\">\n          <p>A work-in-progress web application for storing publicly\n          accessible competitive programming notes! \\[\\LaTeX\\]</p>\n        </div>\n        <TextEditor />\n      </div>\n    );\n  }\n}\n\nexport default CpNotes;\n","import React from 'react';\nimport CpNotes from '../Home/CpNotes';\n\nfunction Home() {\n  return (\n    <>\n      <CpNotes />\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction UserInfo({ info }) {\n  return (\n    <>\n      <h2 className=\"Module-heading\">{info.username}</h2>\n      {\n        info.email &&\n        <p>Email: {info.email} (only visible to you)</p>\n      }\n    </>\n  );\n}\n\nexport default UserInfo;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport '../css/SearchSelect.css';\n\nconst MAX_OPTIONS = 10;\nconst GLOBAL_SORT_KEY = 'sk';\n\nclass SearchSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchTerm: '',\n      previousValidSearchTerm: '',\n      showOptions: false,\n      options: [],\n      filteredOptions: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleOptionSelect = this.handleOptionSelect.bind(this);\n  }\n\n  getOptionString(option) {\n    const optionStringArray = [];\n    for(const key of this.props.keys)\n      optionStringArray.push(option[key]);\n\n    return optionStringArray.join(' - ');\n  }\n\n  async filterOptions() {\n    var filteredOptions = [];\n    const searchTerm = this.state.searchTerm.toLowerCase();\n\n    for(const option of this.state.options) {\n      if(filteredOptions.length === MAX_OPTIONS)\n        break;\n\n      const optionString = this.getOptionString(option);\n      if(optionString.toLowerCase().includes(searchTerm)) {\n        filteredOptions.push(option);\n        continue;\n      }\n\n      for(const key of this.props.keys) {\n        if(option[key].toLowerCase().includes(searchTerm)) {\n          filteredOptions.push(option);\n          break;\n        }\n      }\n    }\n\n    await Utils.setStatePromise(this, {\n      filteredOptions: filteredOptions\n    });\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.staticKey && !this.props.staticKey) {\n      await Utils.setStatePromise(this, {\n        searchTerm: ''\n      });\n      return;\n    }\n\n    if(this.props.staticKey === prevProps.staticKey)\n      return;\n\n    await Utils.setStatePromise(this, {\n      searchTerm: '',\n      loading: true\n    });\n    const options = await this.props.search();\n\n    await Utils.setStatePromise(this, {\n      loading: false,\n      previousValidSearchTerm: '',\n      options: options,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleChange(event) {\n    await Utils.setStatePromise(this, {\n      searchTerm: event.target.value,\n    });\n\n    await this.filterOptions();\n  }\n\n  async handleBlur(event) {\n    const focusedElement = event.relatedTarget;\n    if(focusedElement && focusedElement.id === `Select-options-${this.props.name}`)\n      return;\n\n    await Utils.setStatePromise(this, {\n      showOptions: false,\n      searchTerm: this.state.previousValidSearchTerm\n    });\n  }\n\n  async handleFocus(event) {\n    await Utils.setStatePromise(this, {\n      showOptions: true\n    });\n  }\n\n  async handleOptionSelect(sortKey, optionString) {\n    await Utils.setStatePromise(this, {\n      searchTerm: optionString,\n      previousValidSearchTerm: optionString,\n      showOptions: false\n    });\n\n    await this.filterOptions();\n    this.props.callback(sortKey);\n  }\n\n  render() {\n    var optionElements = [];\n    for(const option of this.state.filteredOptions) {\n      const optionString = this.getOptionString(option);\n      const displayString = option[this.props.displayKey];\n      const sortKey = option[GLOBAL_SORT_KEY];\n      optionElements.push(\n        <li onClick={() => this.handleOptionSelect(sortKey, displayString)}\n            key={sortKey}>\n            {optionString}\n        </li>\n      );\n    }\n\n    return (\n      <div onBlur={this.handleBlur} className=\"Search-select\">\n        <input className={this.state.loading ? \"Askd-form-loading\" : \"\"}\n               onChange={this.handleChange} autoComplete=\"off\" type=\"text\"\n               value={this.state.searchTerm} onFocus={this.handleFocus}\n               name={this.props.name} id={this.props.id}\n               disabled={!this.props.search || this.state.loading} />\n        {\n          optionElements.length > 0 && this.state.showOptions &&\n          <ol id={`Select-options-${this.props.name}`} tabIndex=\"-1\"\n              className=\"Search-select-options\">\n            { optionElements }\n          </ol>\n        }\n      </div>\n    );\n  }\n}\n\nexport default SearchSelect;\n","const ApiConstants = Object.freeze({\n  API_ENDPOINT: 'https://qqmeusmrfk.execute-api.us-east-1.amazonaws.com/prod/'\n});\n\nexport default ApiConstants;\n","import queryString from 'query-string';\nimport ApiConstants from './ApiConstants';\nimport UserAuthApi from './UserAuthApi';\n\nclass Api {\n  static createApiError(name, message) {\n    const err = Error(message);\n    err.name = name;\n\n    return err;\n  }\n\n  static async manageResponseError(response) {\n    if(response.status === 400) {\n      const responseJson = await response.json();\n      throw Api.createApiError(responseJson.name, responseJson.message);\n    }\n    else if(response.status !== 200) {\n      throw Error('Request failed!');\n    }\n  }\n\n  static async getJson(resource, options) {\n    const path = `${resource}?${queryString.stringify(options)}`;\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + path, {\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async sendRequestBody(resource, options, method) {\n    const accessToken = await UserAuthApi.getAccessToken();\n\n    const response = await fetch(ApiConstants.API_ENDPOINT + resource, {\n      method: method,\n      body: JSON.stringify(options),\n      headers: {\n        Authorization: accessToken\n      }\n    });\n\n    await Api.manageResponseError(response);\n    return await response.json();\n  }\n\n  static async postJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'POST');\n  }\n\n  static async putJson(resource, options) {\n    return await Api.sendRequestBody(resource, options, 'PUT');\n  }\n}\n\nexport default Api;\n","import Api from './Api';\n\nclass ProblemsApi {\n  static _prettifyProblems(problems) {\n    for(let i = 0; i < problems.length; i++) {\n      problems[i].prettySk = problems[i].sk.replaceAll('#', '');\n    }\n  }\n\n  static async getContests(platform) {\n    const options = {\n      platform: platform\n    };\n\n    return await Api.getJson('contests', options);\n  }\n\n  static async getProblems(platform, contestId) {\n    const options = {\n      platform: platform,\n      contestId: contestId\n    };\n\n    let problems = await Api.getJson('problems', options);\n    ProblemsApi._prettifyProblems(problems);\n\n    return problems;\n  }\n\n  static async getProblemInfo(platform, problemId) {\n    const options = {\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.getJson('problems', options);\n  }\n}\n\nexport default ProblemsApi;\n","import React, { Component } from 'react';\nimport Utils from '../Utils';\nimport SearchSelect from '../SearchSelect/SearchSelect';\nimport ProblemsApi from '../Api/ProblemsApi';\nimport '../css/AddProblemForm.css';\n\nclass AddProblemForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: '',\n      platform: null,\n      contestSortKey: null,\n      problemSortKey: null,\n      skipContestSearch: false\n    };\n\n    this.close = this.close.bind(this);\n    this.handlePlatformChange = this.handlePlatformChange.bind(this);\n    this.toggleSkipContestSearch = this.toggleSkipContestSearch.bind(this);\n    this.updateProblemSortKey = this.updateProblemSortKey.bind(this);\n    this.updateContestSortKey = this.updateContestSortKey.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  close() {\n    this.props.callback(null, null, null);\n  }\n\n  async handlePlatformChange(event) {\n    await Utils.setStatePromise(this, {\n      platform: event.target.value\n    });\n  }\n\n  async toggleSkipContestSearch(event) {\n    await Utils.setStatePromise(this, {\n      skipContestSearch: !this.state.skipContestSearch,\n      contestSortKey: null,\n      problemSortKey: null\n    });\n  }\n\n  async updateContestSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      contestSortKey: sortKey,\n      problemSortKey: null\n    });\n  }\n\n  async updateProblemSortKey(sortKey) {\n    await Utils.setStatePromise(this, {\n      problemSortKey: sortKey\n    });\n  }\n\n  async addProblem(event) {\n    event.preventDefault();\n\n    if(!this.state.problemSortKey) {\n      await Utils.componentSetError(this, 'Please search and select a problem.');\n      return;\n    }\n\n    this.props.callback(this.state.problemSortKey, this.state.platform, this);\n  }\n\n  render() {\n    var searchContestFunction = null;\n    var searchContestKey = null;\n    if(this.state.platform && !this.state.skipContestSearch) {\n      searchContestFunction = () => ProblemsApi.getContests(this.state.platform);\n      searchContestKey = this.state.platform;\n    }\n\n    var searchProblemFunction = null;\n    var searchProblemKey = null;\n    if(this.state.platform && this.state.contestSortKey) {\n      searchProblemFunction = () =>\n        ProblemsApi.getProblems(this.state.platform, this.state.contestSortKey);\n      searchProblemKey = this.state.platform + this.state.contestSortKey;\n    }\n    else if(this.state.platform && this.state.skipContestSearch) {\n      searchProblemFunction = () => ProblemsApi.getProblems(this.state.platform);\n      searchProblemKey = this.state.platform;\n    }\n\n    var skipButtonText = this.state.skipContestSearch ?\n                         'Want to filter by contest?' :\n                         'Want to skip filtering by contest?';\n\n    return (\n      <div className=\"Module-blocker\">\n        <button onClick={this.close}\n                className=\"Askd-form-close Askd-button Askd-button-circular\">\n                X\n        </button>\n        <div className=\"Add-problem-form Module-popup\">\n          { this.state.error && <h2>{this.state.error}</h2> }\n          <h2>Add a problem!</h2>\n          <form className=\"Askd-form\" onSubmit={this.addProblem}>\n            <label htmlFor=\"cp-platform\">Platform</label>\n            <select defaultValue=\"\" onChange={this.handlePlatformChange}\n                    name=\"platform\" id=\"cp-platform\">\n              <option disabled value=\"\"></option>\n              <option value=\"CodeForces\">CodeForces</option>\n              <option value=\"CodeChef\">CodeChef</option>\n            </select>\n\n            <label htmlFor=\"cp-contest\">Contest</label>\n            <SearchSelect name='contest' id='cp-contest' search={searchContestFunction}\n                          keys={['sk', 'name']} callback={this.updateContestSortKey}\n                          displayKey='name' staticKey={searchContestKey} />\n\n            <button onClick={this.toggleSkipContestSearch}\n                    type=\"button\" className=\"Askd-form-link Askd-form-link-separator\">\n              { skipButtonText }\n            </button>\n\n            <label htmlFor=\"cp-title\">Problem</label>\n            <SearchSelect name='title' id='cp-title' search={searchProblemFunction}\n                          keys={['prettySk', 'name']} callback={this.updateProblemSortKey}\n                          displayKey='name' staticKey={searchProblemKey} />\n\n            <input className=\"Askd-button Module-popup-last\" type=\"submit\"\n                   value=\"Add Problem\" />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddProblemForm;\n","import Api from './Api';\n\nclass NotesApi {\n  static async addNote(username, platform, problemId) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId\n    };\n\n    return await Api.postJson('notes', options);\n  }\n\n  static async editNote(username, platform, problemId, title, solved,\n                        content, published) {\n    const options = {\n      username: username,\n      platform: platform,\n      problemId: problemId,\n      title: title,\n      solved: solved,\n      content: content,\n      published: published\n    };\n\n    return await Api.putJson('notes', options);\n  }\n}\n\nexport default NotesApi;\n","import React, { Component } from 'react';\nimport AddProblemForm from './AddProblemForm';\nimport NotesApi from '../Api/NotesApi';\nimport Utils from '../Utils';\n\nclass UserProblems extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showAddProblemForm: false\n    };\n\n    this.toggleAddProblemForm = this.toggleAddProblemForm.bind(this);\n    this.addProblem = this.addProblem.bind(this);\n  }\n\n  async toggleAddProblemForm() {\n    Utils.setStatePromise(this, {\n      showAddProblemForm: !this.state.showAddProblemForm\n    });\n  }\n\n  async addProblem(problemSortKey, platform, formComponent) {\n    if(!problemSortKey) {\n      await this.toggleAddProblemForm();\n      return;\n    }\n\n    try {\n      const username = this.props.info.username;\n      await NotesApi.addNote(username, platform, problemSortKey);\n\n      const problemUrl = problemSortKey.replace('#', '/');\n      this.props.history.push(`/notes/edit/${platform}/${problemUrl}`);\n    }\n    catch(err) {\n      await Utils.componentSetError(formComponent, err.message);\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <h2 className=\"Module-heading\">Problems</h2>\n        {\n          this.state.showAddProblemForm &&\n          <AddProblemForm callback={this.addProblem} />\n        }\n        <div className=\"Cp-notes Module-space\">\n          <p>There's nothing to see here yet!</p>\n          {\n            this.props.info.email &&\n            <button onClick={this.toggleAddProblemForm}\n                    className=\"Cp-notes-add Askd-button Askd-button-circular\">\n              +\n            </button>\n          }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProblems;\n","import Api from './Api';\n\nclass UserApi {\n  static async getUserInfo(username) {\n    const options = {\n      username: username\n    };\n\n    return await Api.getJson('profile', options);\n  }\n}\n\nexport default UserApi;\n","const UserProfileState = Object.freeze({\n  LOADING: 0,\n  DONE: 1,\n  NOT_FOUND: 2\n});\n\nexport default UserProfileState;\n","import React, { Component } from 'react';\nimport UserInfo from './UserInfo';\nimport UserProblems from './UserProblems';\nimport UserApi from '../Api/UserApi';\nimport UserInfoState from './UserInfoState';\nimport Utils from '../Utils';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: UserInfoState.LOADING,\n      info: null\n    };\n  }\n\n  async loadUserInfo() {\n    try {\n      const username = this.props.match.params.username;\n      const info = await UserApi.getUserInfo(username);\n      await Utils.setStatePromise(this, {\n        screen: UserInfoState.DONE,\n        info: info\n      });\n    }\n    catch(err) {\n      if(err.name === 'UserNotFound') {\n        await Utils.setStatePromise(this, {\n          screen: UserInfoState.NOT_FOUND\n        });\n      }\n    }\n  }\n\n  async componentDidMount() {\n    await this.loadUserInfo();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if(prevProps.match.params.username !== this.props.match.params.username) {\n      await Utils.setStatePromise(this, {\n        screen: UserInfoState.LOADING,\n        info: null\n      });\n      await this.loadUserInfo();\n    }\n  }\n\n  render() {\n    const loadingContent = null;\n    const loadedContent = (\n      <>\n        <div className=\"Module-description\">\n          <UserInfo info={this.state.info} />\n        </div>\n        <UserProblems info={this.state.info} history={this.props.history} />\n      </>\n    );\n    const userNotFoundContent = (\n      <div className=\"Module-description\">\n        <h2>User not found!</h2>\n      </div>\n    );\n\n    var content;\n    switch(this.state.screen) {\n      case UserInfoState.LOADING:\n        content = loadingContent;\n        break;\n      case UserInfoState.DONE:\n        content = loadedContent;\n        break;\n      case UserInfoState.NOT_FOUND:\n        content = userNotFoundContent;\n        break;\n      default:\n    }\n\n    return (\n      <>\n        <div className=\"Module-wrapper\">\n          { content }\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UserProfile;\n","const EditNoteState = Object.freeze({\n  LOADING: 0,\n  DONE: 1,\n  NOT_FOUND: 2\n});\n\nexport default EditNoteState;\n","const SolvedState = Object.freeze({\n  SOLVED: 0,\n  UPSOLVED: 1,\n  UPSOLVED_HELP: 2,\n  UNSOLVED: 3\n});\n\nexport default SolvedState;\n","import React, { Component } from 'react';\nimport TextEditor from '../TextEditor/TextEditor';\nimport SolvedState from './SolvedState';\nimport UserAuthApi from '../Api/UserAuthApi';\nimport NotesApi from '../Api/NotesApi';\n\nclass EditNoteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.title = `Notes for ${this.props.problemInfo.problemName}`;\n    this.solved = '' + SolvedState.SOLVED;\n    this.content = [];\n\n    this.saveNote = this.saveNote.bind(this);\n    this.publishNote = this.publishNote.bind(this);\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleSolvedChange = this.handleSolvedChange.bind(this);\n    this.handleContentChange = this.handleContentChange.bind(this);\n  }\n\n  async saveOrPublishNote(published) {\n    const username = await UserAuthApi.getUsername();\n    const platform = this.props.platform;\n    const problemId = this.props.problemInfo.problemId;\n    const title = this.title;\n    const solved = this.solved;\n    const content = JSON.stringify(this.content);\n\n    await NotesApi.editNote(username, platform, problemId, title, solved,\n                            content, published);\n  }\n\n  async saveNote() {\n    await this.saveOrPublishNote(false);  // Boolean temporary\n  }\n\n  async publishNote() {\n    await this.saveOrPublishNote(true);  // Boolean temporary\n  }\n\n  handleTitleChange(event) {\n    this.title = event.target.value;\n  }\n\n  handleSolvedChange(event) {\n    this.solved = event.target.value;\n  }\n\n  handleContentChange(newContent) {\n    this.content = newContent;\n  }\n\n  render() {\n    const defaultTitle = this.title;\n\n    return (\n      <div className=\"Edit-note-form Askd-form\">\n        <input className=\"Edit-note-title\" name=\"title\" type=\"text\"\n               defaultValue={defaultTitle} placeholder=\"Title\"\n               onChange={this.handleTitleChange} />\n        <select name=\"solved\" id=\"note-solved\" onChange={this.handleSolvedChange}>\n          <option value={SolvedState.SOLVED}>Solved</option>\n          <option value={SolvedState.UPSOLVED}>Upsolved</option>\n          <option value={SolvedState.UPSOLVED_HELP}>Upsolved with help</option>\n          <option value={SolvedState.UNSOLVED}>Unsolved</option>\n        </select>\n        <TextEditor onChange={this.handleContentChange} />\n        <div className=\"Edit-note-bottom-buttons\">\n          <input className=\"Askd-button Askd-not-fullwidth\"\n                 type=\"button\" value=\"Save\" onClick={this.saveNote} />\n          <input className=\"Askd-button Askd-not-fullwidth\"\n                 type=\"button\" value=\"Publish!\" onClick={this.publishNote} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditNoteForm;\n","import React, { Component } from 'react';\n\nclass ProblemInfo extends Component {\n  render() {\n    const info = this.props.info;\n\n    return (\n      <div className=\"Edit-note-problem-info\">\n        <div className=\"Module-info-box\">\n          <h4>\n            {this.props.platform} {info.problemCode} - {info.problemName}\n          </h4>\n          <p className=\"Edit-note-contest\">{info.contestName}</p>\n          <a className=\"Askd-form-link\" href={info.link}>Problem link</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProblemInfo;\n","import React, { Component } from 'react';\nimport EditNoteState from './EditNoteState';\nimport EditNoteForm from './EditNoteForm';\nimport ProblemInfo from './ProblemInfo';\nimport ProblemsApi from '../Api/ProblemsApi'\nimport Utils from '../Utils';\nimport '../css/EditNote.css';\n\nclass EditNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      screen: EditNoteState.LOADING,\n      problemInfo: null\n    };\n  }\n\n  async loadProblemInfo() {\n    const platform = this.props.match.params.platform;\n    const contestId = this.props.match.params.contestId;\n    const problemCode = this.props.match.params.problemCode;\n    const problemId = `${contestId}#${problemCode}`;\n\n    let problemInfo = await ProblemsApi.getProblemInfo(platform, problemId);\n    problemInfo.problemId = problemId;\n\n    await Utils.setStatePromise(this, {\n      problemInfo: problemInfo\n    });\n  }\n\n  async loadInfo() {\n    await this.loadProblemInfo();\n    await Utils.setStatePromise(this, {\n      screen: EditNoteState.DONE\n    });\n  }\n\n  async componentDidMount() {\n    await this.loadInfo();\n  }\n\n  render() {\n    const platform = this.props.match.params.platform;\n\n    return (\n      <div className=\"Module-wrapper\">\n        {\n          this.state.screen === EditNoteState.DONE &&\n          <>\n            <ProblemInfo info={this.state.problemInfo} platform={platform} />\n            <EditNoteForm problemInfo={this.state.problemInfo} platform={platform} />\n          </>\n        }\n      </div>\n    );\n  }\n}\n\nexport default EditNote;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './Header/Header';\nimport Home from './Home/Home';\nimport UserProfile from './UserProfile/UserProfile';\nimport EditNote from './EditNote/EditNote';\n\nimport './css/App.css';\nimport './css/Module.css';\nimport './css/Form.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/users/:username\" component={UserProfile} />\n          <Route exact path=\"/notes/edit/:platform/:contestId/:problemCode\"\n                 component={EditNote} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Amplify from 'aws-amplify';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport amplify_config from './amplify_config';\n\nAmplify.configure(amplify_config);\n\ndocument.body.addEventListener('mousedown', (event) => {\n  document.body.classList.add('Global-mouse-click');\n});\n\ndocument.body.addEventListener('keydown', (event) => {\n  if(event.keyCode === 9) {\n    document.body.classList.remove('Global-mouse-click');\n  }\n});\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}